import{p as t}from"./withConfigTransport.js";const sleep=(t=0)=>new Promise((r=>setTimeout(r,t))),warn=(...t)=>(console.warn(...t),!1),hasOwnProperty=(t,r)=>Object.prototype.hasOwnProperty.call(t,r),getNestedValue=(r,n)=>{if(0===n.length)return r;const o=r[n[0]];return t(o)?getNestedValue(o,n.slice(1)):1===n.length?o:void 0},getProp=(t,r)=>{if("string"!=typeof t)return r&&t?"string"==typeof r?((t,r)=>r in t?t[r]:(r=r.replace(/^\./,""),getNestedValue(t,r.split("."))))(t,r):"function"==typeof r?r(t):t:t},getRandomString=(t=4)=>Math.random().toString(36).substring(2,t+2),generateUniqueId=()=>`${getRandomString(8)}-${getRandomString(4)}-${getRandomString(4)}`;export{getProp as a,generateUniqueId as g,hasOwnProperty as h,sleep as s,warn as w};
//# sourceMappingURL=utils.js.map
