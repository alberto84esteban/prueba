{"version":3,"file":"index44.js","sources":["../../src/components/va-sidebar/VaSidebar.vue","../../src/components/va-sidebar/VaSidebar.vue?vue&type=template&id=2d72e2e8&lang.js","../../src/components/va-sidebar/VaSidebarItem/VaSidebarItem.vue","../../src/components/va-sidebar/VaSidebarItem/VaSidebarItem.vue?vue&type=template&id=28c8df18&lang.js","../../src/components/va-sidebar/VaSidebarItem/VaSidebarItemContent.vue?vue&type=template&id=653c85d6&lang.js","../../src/components/va-sidebar/VaSidebarItem/VaSidebarItemTitle.vue?vue&type=template&id=357b7474&lang.js","../../src/components/va-sidebar/VaSidebarItem/index.ts","../../src/components/va-sidebar/index.ts"],"sourcesContent":["<template>\n  <aside\n    :class=\"computedClass\"\n    :style=\"computedStyle\"\n    @mouseenter=\"updateHoverState(true)\"\n    @mouseleave=\"updateHoverState(false)\"\n  >\n    <div class=\"va-sidebar__menu\">\n      <slot />\n    </div>\n  </aside>\n</template>\n\n<script lang=\"ts\">\nimport { Options, prop, Vue, mixins } from 'vue-class-component'\n\nimport { getGradientBackground } from '../../services/color-config/color-functions'\nimport { useColors } from '../../services/color-config/color-config'\n\nclass SidebarProps {\n  color = prop<string>({ type: String, default: 'background' })\n  textColor = prop<string>({ type: String, default: undefined })\n  gradient = prop<boolean>({ type: Boolean, default: false })\n  minimized = prop<boolean>({ type: Boolean, default: false })\n  hoverable = prop<boolean>({ type: Boolean, default: false })\n  position = prop<string>({ type: String, default: 'left' })\n  width = prop<string>({ type: String, default: '16rem' })\n  minimizedWidth = prop<string>({ type: String, default: '2.5rem' })\n  modelValue = prop<boolean>({ type: Boolean, default: true })\n}\n\nconst SidebarPropsMixin = Vue.with(SidebarProps)\n\n@Options({ name: 'VaSidebar' })\nexport default class VaSidebar extends SidebarPropsMixin {\n  isHovered = false\n\n  get isMinimized () {\n    return this.$props.minimized || (this.$props.hoverable && !this.isHovered)\n  }\n\n  get computedStyle () {\n    const { getColor, getTextColor } = useColors()\n\n    const backgroundColor = getColor(this.color)\n    const background = this.gradient ? getGradientBackground(backgroundColor) : backgroundColor\n\n    const color = this.$props.textColor ? getColor(this.textColor) : getTextColor(backgroundColor)\n\n    return {\n      color,\n      background,\n      width: this.computedWidth,\n    }\n  }\n\n  get computedWidth () {\n    if (!this.$props.modelValue) {\n      return 0\n    }\n    return this.isMinimized ? this.$props.minimizedWidth : this.$props.width\n  }\n\n  get computedClass () {\n    return {\n      'va-sidebar': true,\n      'va-sidebar--minimized': this.isMinimized,\n      'va-sidebar--hidden': !this.modelValue,\n      'va-sidebar--right': this.$props.position === 'right',\n    }\n  }\n\n  updateHoverState (isHovered: boolean) {\n    this.isHovered = this.$props.hoverable ? isHovered : false\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import 'variables';\n\n.va-sidebar {\n  min-height: var(--va-sidebar-min-height);\n  height: var(--va-sidebar-height);\n  position: var(--va-sidebar-position);\n  top: var(--va-sidebar-top);\n  left: var(--va-sidebar-left);\n  transition: var(--va-sidebar-transition);\n  z-index: var(--va-sidebar-z-index);\n  font-family: var(--va-font-family);\n\n  &__menu {\n    max-height: var(--va-sidebar-menu-max-height);\n    margin-bottom: var(--va-sidebar-menu-margin-bottom);\n    list-style: var(--va-sidebar-menu-list-style);\n    padding-left: var(--va-sidebar-menu-padding-left);\n    overflow-y: var(--va-sidebar-menu-overflow-y);\n    overflow-x: var(--va-sidebar-menu-overflow-x);\n  }\n\n  &--minimized {\n    left: 0;\n\n    .va-sidebar-link-group {\n      .va-sidebar-link__content {\n        padding-right: 0;\n      }\n    }\n\n    & + .content-wrap {\n      margin-left: $sidebar-width--hidden !important;\n    }\n  }\n\n  &--right {\n    left: auto;\n    right: 0;\n  }\n}\n</style>\n","<template>\n  <aside\n    :class=\"computedClass\"\n    :style=\"computedStyle\"\n    @mouseenter=\"updateHoverState(true)\"\n    @mouseleave=\"updateHoverState(false)\"\n  >\n    <div class=\"va-sidebar__menu\">\n      <slot />\n    </div>\n  </aside>\n</template>\n\n<script lang=\"ts\">\nimport { Options, prop, Vue, mixins } from 'vue-class-component'\n\nimport { getGradientBackground } from '../../services/color-config/color-functions'\nimport { useColors } from '../../services/color-config/color-config'\n\nclass SidebarProps {\n  color = prop<string>({ type: String, default: 'background' })\n  textColor = prop<string>({ type: String, default: undefined })\n  gradient = prop<boolean>({ type: Boolean, default: false })\n  minimized = prop<boolean>({ type: Boolean, default: false })\n  hoverable = prop<boolean>({ type: Boolean, default: false })\n  position = prop<string>({ type: String, default: 'left' })\n  width = prop<string>({ type: String, default: '16rem' })\n  minimizedWidth = prop<string>({ type: String, default: '2.5rem' })\n  modelValue = prop<boolean>({ type: Boolean, default: true })\n}\n\nconst SidebarPropsMixin = Vue.with(SidebarProps)\n\n@Options({ name: 'VaSidebar' })\nexport default class VaSidebar extends SidebarPropsMixin {\n  isHovered = false\n\n  get isMinimized () {\n    return this.$props.minimized || (this.$props.hoverable && !this.isHovered)\n  }\n\n  get computedStyle () {\n    const { getColor, getTextColor } = useColors()\n\n    const backgroundColor = getColor(this.color)\n    const background = this.gradient ? getGradientBackground(backgroundColor) : backgroundColor\n\n    const color = this.$props.textColor ? getColor(this.textColor) : getTextColor(backgroundColor)\n\n    return {\n      color,\n      background,\n      width: this.computedWidth,\n    }\n  }\n\n  get computedWidth () {\n    if (!this.$props.modelValue) {\n      return 0\n    }\n    return this.isMinimized ? this.$props.minimizedWidth : this.$props.width\n  }\n\n  get computedClass () {\n    return {\n      'va-sidebar': true,\n      'va-sidebar--minimized': this.isMinimized,\n      'va-sidebar--hidden': !this.modelValue,\n      'va-sidebar--right': this.$props.position === 'right',\n    }\n  }\n\n  updateHoverState (isHovered: boolean) {\n    this.isHovered = this.$props.hoverable ? isHovered : false\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import 'variables';\n\n.va-sidebar {\n  min-height: var(--va-sidebar-min-height);\n  height: var(--va-sidebar-height);\n  position: var(--va-sidebar-position);\n  top: var(--va-sidebar-top);\n  left: var(--va-sidebar-left);\n  transition: var(--va-sidebar-transition);\n  z-index: var(--va-sidebar-z-index);\n  font-family: var(--va-font-family);\n\n  &__menu {\n    max-height: var(--va-sidebar-menu-max-height);\n    margin-bottom: var(--va-sidebar-menu-margin-bottom);\n    list-style: var(--va-sidebar-menu-list-style);\n    padding-left: var(--va-sidebar-menu-padding-left);\n    overflow-y: var(--va-sidebar-menu-overflow-y);\n    overflow-x: var(--va-sidebar-menu-overflow-x);\n  }\n\n  &--minimized {\n    left: 0;\n\n    .va-sidebar-link-group {\n      .va-sidebar-link__content {\n        padding-right: 0;\n      }\n    }\n\n    & + .content-wrap {\n      margin-left: $sidebar-width--hidden !important;\n    }\n  }\n\n  &--right {\n    left: auto;\n    right: 0;\n  }\n}\n</style>\n","<template>\n  <router-link custom :to=\"to\" v-slot=\"{ href, navigate }\">\n    <a\n      v-bind=\"$attrs\"\n      class=\"va-sidebar__item va-sidebar-item\"\n      :class=\"{ 'va-sidebar-item--active': active }\"\n      :style=\"computedStyle\"\n      :href=\"href\"\n      @click=\"navigate\"\n      @mouseenter=\"onMouseEnter\"\n      @mouseleave=\"onMouseLeave\"\n      v-on=\"keyboardFocusListeners\"\n    >\n      <slot />\n    </a>\n  </router-link>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, ref, computed } from 'vue'\nimport { useColors } from '../../../services/color-config/color-config'\nimport useKeyboardOnlyFocus from '../../../composables/useKeyboardOnlyFocus'\n\nconst useHover = () => {\n  const isHovered = ref(false)\n  const onMouseEnter = () => { isHovered.value = true }\n  const onMouseLeave = () => { isHovered.value = false }\n\n  return { isHovered, onMouseEnter, onMouseLeave }\n}\n\nexport default defineComponent({\n  name: 'VaSidebarItem',\n  props: {\n    to: {\n      type: [String, Object] as PropType<string | Record<string, any>>,\n      default: () => ({}),\n    },\n    active: { type: Boolean, default: false },\n    textColor: { type: String, default: undefined },\n    activeColor: { type: String, default: 'primary' },\n    hoverColor: { type: String, default: undefined },\n    borderColor: { type: String, default: undefined },\n  },\n  setup (props) {\n    const { isHovered, onMouseEnter, onMouseLeave } = useHover()\n    const { getColor, getHoverColor, getTextColor, getFocusColor } = useColors()\n\n    const { hasKeyboardFocus, keyboardFocusListeners } = useKeyboardOnlyFocus()\n\n    const computedStyle = computed(() => {\n      const style: Record<string, string> = {}\n\n      style.color = getColor(props.textColor, 'inherit')\n\n      if (isHovered.value) {\n        style['background-color'] = getHoverColor(getColor(props.hoverColor || props.activeColor))\n      }\n\n      if (props.active) {\n        const border = props.borderColor === undefined ? props.activeColor : props.borderColor\n\n        style['border-color'] = getColor(border)\n        style['background-color'] = getColor(props.activeColor)\n        style.color = getTextColor(style['background-color'], getColor('dark'), '#ffffff')\n      }\n\n      if (hasKeyboardFocus.value) {\n        style['background-color'] = getFocusColor(getColor(props.hoverColor || props.activeColor))\n      }\n\n      // Override default link color from VaContent\n      style.color = `${style.color} !important`\n\n      return style\n    })\n\n    return { isHovered, onMouseEnter, onMouseLeave, computedStyle, keyboardFocusListeners }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import '../variables';\n\n.va-sidebar__item {\n  border-left: var(--va-sidebar-item-active-border-size) solid transparent;\n  padding-right: var(--va-sidebar-item-active-border-size);\n  display: inline-block;\n  width: 100%;\n  color: inherit !important;\n  font-family: var(--va-font-family);\n}\n</style>\n","<template>\n  <router-link custom :to=\"to\" v-slot=\"{ href, navigate }\">\n    <a\n      v-bind=\"$attrs\"\n      class=\"va-sidebar__item va-sidebar-item\"\n      :class=\"{ 'va-sidebar-item--active': active }\"\n      :style=\"computedStyle\"\n      :href=\"href\"\n      @click=\"navigate\"\n      @mouseenter=\"onMouseEnter\"\n      @mouseleave=\"onMouseLeave\"\n      v-on=\"keyboardFocusListeners\"\n    >\n      <slot />\n    </a>\n  </router-link>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, ref, computed } from 'vue'\nimport { useColors } from '../../../services/color-config/color-config'\nimport useKeyboardOnlyFocus from '../../../composables/useKeyboardOnlyFocus'\n\nconst useHover = () => {\n  const isHovered = ref(false)\n  const onMouseEnter = () => { isHovered.value = true }\n  const onMouseLeave = () => { isHovered.value = false }\n\n  return { isHovered, onMouseEnter, onMouseLeave }\n}\n\nexport default defineComponent({\n  name: 'VaSidebarItem',\n  props: {\n    to: {\n      type: [String, Object] as PropType<string | Record<string, any>>,\n      default: () => ({}),\n    },\n    active: { type: Boolean, default: false },\n    textColor: { type: String, default: undefined },\n    activeColor: { type: String, default: 'primary' },\n    hoverColor: { type: String, default: undefined },\n    borderColor: { type: String, default: undefined },\n  },\n  setup (props) {\n    const { isHovered, onMouseEnter, onMouseLeave } = useHover()\n    const { getColor, getHoverColor, getTextColor, getFocusColor } = useColors()\n\n    const { hasKeyboardFocus, keyboardFocusListeners } = useKeyboardOnlyFocus()\n\n    const computedStyle = computed(() => {\n      const style: Record<string, string> = {}\n\n      style.color = getColor(props.textColor, 'inherit')\n\n      if (isHovered.value) {\n        style['background-color'] = getHoverColor(getColor(props.hoverColor || props.activeColor))\n      }\n\n      if (props.active) {\n        const border = props.borderColor === undefined ? props.activeColor : props.borderColor\n\n        style['border-color'] = getColor(border)\n        style['background-color'] = getColor(props.activeColor)\n        style.color = getTextColor(style['background-color'], getColor('dark'), '#ffffff')\n      }\n\n      if (hasKeyboardFocus.value) {\n        style['background-color'] = getFocusColor(getColor(props.hoverColor || props.activeColor))\n      }\n\n      // Override default link color from VaContent\n      style.color = `${style.color} !important`\n\n      return style\n    })\n\n    return { isHovered, onMouseEnter, onMouseLeave, computedStyle, keyboardFocusListeners }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import '../variables';\n\n.va-sidebar__item {\n  border-left: var(--va-sidebar-item-active-border-size) solid transparent;\n  padding-right: var(--va-sidebar-item-active-border-size);\n  display: inline-block;\n  width: 100%;\n  color: inherit !important;\n  font-family: var(--va-font-family);\n}\n</style>\n","<template>\n  <div class=\"va-sidebar__item__content va-sidebar-item-content\">\n    <slot />\n  </div>\n</template>\n\n<style lang=\"scss\">\n@import '../variables';\n\n.va-sidebar__item__content {\n  display: flex;\n  align-items: center;\n  padding: var(--va-sidebar-item-content-padding);\n\n  & > * {\n    margin-right: var(--va-sidebar-item-content-gap);\n\n    &:last-child {\n      margin-right: 0;\n    }\n  }\n}\n</style>\n","<template>\n  <div class=\"va-sidebar__title va-sidebar-item-title\">\n    <slot />\n  </div>\n</template>\n\n<style lang=\"scss\">\n@import '../_variables';\n\n.va-sidebar__title {\n  flex-grow: 1;\n  white-space: var(--va-sidebar-item-title-white-space);\n}\n</style>\n","import withConfigTransport from '../../../services/config-transport/withConfigTransport'\nimport VaSidebarItem from './VaSidebarItem.vue'\nimport VaSidebarItemContentComponent from './VaSidebarItemContent.vue'\nimport VaSidebarItemTitleComponent from './VaSidebarItemTitle.vue'\n\nexport const VaSidebarItemContent = withConfigTransport(VaSidebarItemContentComponent)\nexport const VaSidebarItemTitle = withConfigTransport(VaSidebarItemTitleComponent)\n\nexport default withConfigTransport(VaSidebarItem)\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\nimport VaSidebar from './VaSidebar.vue'\nexport { default as VaSidebarItem, VaSidebarItemContent, VaSidebarItemTitle } from './VaSidebarItem'\n\nexport default withConfigTransport(VaSidebar)\n"],"names":["SidebarPropsMixin","Vue","with","SidebarProps","constructor","this","prop","type","String","default","undefined","Boolean","VaSidebar","isMinimized","$props","minimized","hoverable","isHovered","computedStyle","getColor","getTextColor","useColors","backgroundColor","color","background","gradient","getGradientBackground","textColor","width","computedWidth","modelValue","minimizedWidth","computedClass","position","updateHoverState","Options","name","_mergeProps","class","_ctx","style","defineComponent","props","to","Object","active","activeColor","hoverColor","borderColor","setup","onMouseEnter","onMouseLeave","ref","value","useHover","getHoverColor","getFocusColor","hasKeyboardFocus","keyboardFocusListeners","useKeyboardOnlyFocus","computed","border","custom","href","navigate","_createVNode","onClick","onMouseenter","onMouseleave","_toHandlers","_renderSlot","VaSidebarItemContent","withConfigTransport","VaSidebarItemContentComponent","VaSidebarItemTitle","VaSidebarItemTitleComponent","VaSidebarItem"],"mappings":"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"}