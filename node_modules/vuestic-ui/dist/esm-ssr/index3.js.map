{"version":3,"file":"index3.js","sources":["../../src/components/va-alert/VaAlert.vue","../../src/components/va-alert/useAlertStyles.ts","../../src/components/va-alert/VaAlert.vue?vue&type=template&id=0ae3ae0c&lang.js","../../src/components/va-alert/index.ts"],"sourcesContent":["<template>\n  <transition\n    v-if=\"valueComputed\"\n    name=\"fade\"\n  >\n    <div\n      class=\"va-alert\"\n      :style=\"alertStyle\"\n    >\n      <div\n        :style=\"borderStyle\"\n        :class=\"borderClass\"\n        class=\"va-alert__border\"\n      />\n\n      <div\n        :style=\"contentStyle\"\n        class=\"va-alert__icon\"\n        v-if=\"hasIcon\"\n      >\n        <slot name=\"icon\">\n          <va-icon :name=\"icon\" />\n        </slot>\n      </div>\n\n      <div\n        :style=\"contentStyle\"\n        class=\"va-alert__content\"\n      >\n        <div\n          :style=\"titleStyle\"\n          class=\"va-alert__title\"\n          v-if=\"hasTitle\"\n        >\n          <slot name=\"title\">\n            {{ title }}\n          </slot>\n        </div>\n        <slot>\n          {{ description }}\n        </slot>\n      </div>\n\n      <div\n        class=\"va-alert__close\"\n        v-if=\"closeable\"\n      >\n        <div\n          :style=\"contentStyle\"\n          class=\"va-alert__close--closeable\"\n          @click=\"hide()\"\n        >\n          <slot name=\"close\">\n            <va-icon\n              v-if=\"!closeText\"\n              :name=\"closeIcon\"\n              size=\"small\"\n            />\n            {{ closeText }}\n          </slot>\n        </div>\n      </div>\n\n    </div>\n  </transition>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, PropType } from 'vue'\n\nimport { useStateful, statefulComponentOptions } from '../../mixins/StatefulMixin/cStatefulMixin'\nimport { useAlertStyles } from './useAlertStyles'\nimport VaIcon from '../va-icon'\n\nexport default defineComponent({\n  name: 'VaAlert',\n  components: { VaIcon },\n  emits: [...statefulComponentOptions.emits],\n  props: {\n    ...statefulComponentOptions.props,\n    modelValue: { type: Boolean as PropType<boolean>, default: true },\n    color: { type: String as PropType<string>, default: 'primary' },\n    title: { type: String as PropType<string>, default: '' },\n    description: { type: String as PropType<string>, default: '' },\n    icon: { type: String as PropType<string>, default: '' },\n    closeText: { type: String as PropType<string>, default: '' },\n    closeable: { type: Boolean as PropType<boolean>, default: false },\n    dense: { type: Boolean as PropType<boolean>, default: false },\n    outline: { type: Boolean as PropType<boolean>, default: false },\n    center: { type: Boolean as PropType<boolean>, default: false },\n    borderColor: { type: String as PropType<string>, default: '' },\n    border: {\n      type: String as PropType<string>,\n      default: '',\n      validator: (value: string) => ['top', 'right', 'bottom', 'left', ''].includes(value),\n    },\n  },\n  setup (props, { slots, emit }) {\n    const alertStyles = useAlertStyles(props)\n\n    const { valueComputed } = useStateful(props, emit)\n\n    const hide = () => { valueComputed.value = false }\n\n    const hasIcon = computed(() => props.icon || slots.icon)\n\n    const hasTitle = computed(() => props.title || slots.title)\n\n    const borderClass = computed(() => `va-alert__border--${props.border}`)\n\n    const closeIcon = computed(() => props.closeText || 'close')\n\n    return {\n      ...alertStyles,\n      valueComputed,\n      hasIcon,\n      hasTitle,\n      borderClass,\n      closeIcon,\n      hide,\n    }\n  },\n})\n</script>\n\n<style lang='scss'>\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-alert {\n  position: var(--va-alert-position);\n  padding: var(--va-alert-padding-y) var(--va-alert-padding-x);\n  margin: var(--va-alert-margin-y) auto;\n  display: var(--va-alert-display);\n  align-items: var(--va-alert-align-items);\n  border: var(--va-alert-border-width, var(--va-control-border)) solid transparent;\n  border-radius: var(--va-alert-border-radius, var(--va-block-border-radius));\n  font-family: var(--va-font-family);\n\n  &__border {\n    content: \"\";\n    position: absolute;\n\n    &--top {\n      border-radius: var(--va-alert-top-border-radius);\n      width: 100%;\n      height: var(--va-alert-stripe-border-size);\n      top: 0;\n      left: 0;\n    }\n\n    &--right {\n      border-radius: var(--va-alert-right-border-radius);\n      height: 100%;\n      width: var(--va-alert-stripe-border-size);\n      bottom: 0;\n      right: 0;\n    }\n\n    &--bottom {\n      border-radius: var(--va-alert-bottom-border-radius);\n      width: 100%;\n      height: var(--va-alert-stripe-border-size);\n      bottom: 0;\n      left: 0;\n    }\n\n    &--left {\n      border-radius: var(--va-alert-left-border-radius);\n      height: 100%;\n      width: var(--va-alert-stripe-border-size);\n      bottom: 0;\n      left: 0;\n    }\n  }\n\n  &__icon {\n    display: flex;\n    align-items: center;\n    padding-right: var(--va-alert-padding-x);\n  }\n\n  &__title {\n    display: flex;\n    align-items: center;\n    font-weight: var(--va-alert-title-font-weight);\n  }\n\n  &__content {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    flex-grow: 1;\n    color: var(--va-alert-color);\n  }\n\n  &__close {\n    padding-left: var(--va-alert-close-padding-x);\n    font-size: var(--va-alert-close-font-size);\n\n    &--closeable {\n      display: flex;\n      align-items: center;\n      cursor: pointer;\n    }\n  }\n\n  @include media-breakpoint-down(xs) {\n    @at-root {\n      .va-alert {\n        &__content {\n          flex-direction: column;\n          align-items: flex-start;\n        }\n\n        &__close {\n          align-self: flex-start;\n          display: flex;\n          align-items: flex-start;\n          padding: 0 var(--va-alert-close-padding-x) 0 0;\n          margin: 0;\n        }\n      }\n    }\n  }\n}\n</style>\n","import { computed } from 'vue'\n\nimport { useColors } from './../../composables/useColor'\nimport { getTextColor } from '../../services/color-config/color-functions'\n\ntype AlertStyleProps = {\n  modelValue: boolean,\n  color: string,\n  title: string,\n  description: string,\n  icon: string,\n  closeText: string,\n  closeable: boolean,\n  dense: boolean,\n  outline: boolean,\n  center: boolean,\n  borderColor: string,\n  border: string,\n}\n\nexport const useAlertStyles = (props: AlertStyleProps) => {\n  const { getColor } = useColors()\n\n  const colorComputed = computed(() => getColor(props.color))\n\n  const alertStyle = computed(() => {\n    let background = colorComputed.value\n    let boxShadow = 'none'\n\n    if (props.outline) {\n      background = 'transparent'\n    }\n\n    if (props.border) {\n      background = 'var(--va-white)'\n      boxShadow = 'var(--va-alert-box-shadow)'\n    }\n\n    return {\n      border: props.outline ? `1px solid ${colorComputed.value}` : '',\n      padding: props.dense ? 'var(--va-alert-padding-y-dense) var(--va-alert-padding-x)' : '',\n      background,\n      boxShadow,\n    }\n  })\n\n  const contentStyle = computed(() => {\n    let color = getTextColor(colorComputed.value)\n\n    if (props.outline) {\n      color = colorComputed.value\n    }\n\n    if (props.border) {\n      color = 'var(--va-dark)'\n    }\n\n    return {\n      alignItems: props.center ? 'center' : '',\n      color,\n    }\n  })\n\n  const titleStyle = computed(() => {\n    let color = getTextColor(colorComputed.value)\n\n    if (props.outline) {\n      color = colorComputed.value\n    }\n\n    if (props.border) {\n      color = colorComputed.value\n    }\n\n    return { color }\n  })\n\n  const borderStyle = computed(() => ({\n    backgroundColor: props.borderColor\n      ? getColor(props.borderColor)\n      : colorComputed.value,\n  }))\n\n  return {\n    alertStyle,\n    contentStyle,\n    titleStyle,\n    borderStyle,\n  }\n}\n","<template>\n  <transition\n    v-if=\"valueComputed\"\n    name=\"fade\"\n  >\n    <div\n      class=\"va-alert\"\n      :style=\"alertStyle\"\n    >\n      <div\n        :style=\"borderStyle\"\n        :class=\"borderClass\"\n        class=\"va-alert__border\"\n      />\n\n      <div\n        :style=\"contentStyle\"\n        class=\"va-alert__icon\"\n        v-if=\"hasIcon\"\n      >\n        <slot name=\"icon\">\n          <va-icon :name=\"icon\" />\n        </slot>\n      </div>\n\n      <div\n        :style=\"contentStyle\"\n        class=\"va-alert__content\"\n      >\n        <div\n          :style=\"titleStyle\"\n          class=\"va-alert__title\"\n          v-if=\"hasTitle\"\n        >\n          <slot name=\"title\">\n            {{ title }}\n          </slot>\n        </div>\n        <slot>\n          {{ description }}\n        </slot>\n      </div>\n\n      <div\n        class=\"va-alert__close\"\n        v-if=\"closeable\"\n      >\n        <div\n          :style=\"contentStyle\"\n          class=\"va-alert__close--closeable\"\n          @click=\"hide()\"\n        >\n          <slot name=\"close\">\n            <va-icon\n              v-if=\"!closeText\"\n              :name=\"closeIcon\"\n              size=\"small\"\n            />\n            {{ closeText }}\n          </slot>\n        </div>\n      </div>\n\n    </div>\n  </transition>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, PropType } from 'vue'\n\nimport { useStateful, statefulComponentOptions } from '../../mixins/StatefulMixin/cStatefulMixin'\nimport { useAlertStyles } from './useAlertStyles'\nimport VaIcon from '../va-icon'\n\nexport default defineComponent({\n  name: 'VaAlert',\n  components: { VaIcon },\n  emits: [...statefulComponentOptions.emits],\n  props: {\n    ...statefulComponentOptions.props,\n    modelValue: { type: Boolean as PropType<boolean>, default: true },\n    color: { type: String as PropType<string>, default: 'primary' },\n    title: { type: String as PropType<string>, default: '' },\n    description: { type: String as PropType<string>, default: '' },\n    icon: { type: String as PropType<string>, default: '' },\n    closeText: { type: String as PropType<string>, default: '' },\n    closeable: { type: Boolean as PropType<boolean>, default: false },\n    dense: { type: Boolean as PropType<boolean>, default: false },\n    outline: { type: Boolean as PropType<boolean>, default: false },\n    center: { type: Boolean as PropType<boolean>, default: false },\n    borderColor: { type: String as PropType<string>, default: '' },\n    border: {\n      type: String as PropType<string>,\n      default: '',\n      validator: (value: string) => ['top', 'right', 'bottom', 'left', ''].includes(value),\n    },\n  },\n  setup (props, { slots, emit }) {\n    const alertStyles = useAlertStyles(props)\n\n    const { valueComputed } = useStateful(props, emit)\n\n    const hide = () => { valueComputed.value = false }\n\n    const hasIcon = computed(() => props.icon || slots.icon)\n\n    const hasTitle = computed(() => props.title || slots.title)\n\n    const borderClass = computed(() => `va-alert__border--${props.border}`)\n\n    const closeIcon = computed(() => props.closeText || 'close')\n\n    return {\n      ...alertStyles,\n      valueComputed,\n      hasIcon,\n      hasTitle,\n      borderClass,\n      closeIcon,\n      hide,\n    }\n  },\n})\n</script>\n\n<style lang='scss'>\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-alert {\n  position: var(--va-alert-position);\n  padding: var(--va-alert-padding-y) var(--va-alert-padding-x);\n  margin: var(--va-alert-margin-y) auto;\n  display: var(--va-alert-display);\n  align-items: var(--va-alert-align-items);\n  border: var(--va-alert-border-width, var(--va-control-border)) solid transparent;\n  border-radius: var(--va-alert-border-radius, var(--va-block-border-radius));\n  font-family: var(--va-font-family);\n\n  &__border {\n    content: \"\";\n    position: absolute;\n\n    &--top {\n      border-radius: var(--va-alert-top-border-radius);\n      width: 100%;\n      height: var(--va-alert-stripe-border-size);\n      top: 0;\n      left: 0;\n    }\n\n    &--right {\n      border-radius: var(--va-alert-right-border-radius);\n      height: 100%;\n      width: var(--va-alert-stripe-border-size);\n      bottom: 0;\n      right: 0;\n    }\n\n    &--bottom {\n      border-radius: var(--va-alert-bottom-border-radius);\n      width: 100%;\n      height: var(--va-alert-stripe-border-size);\n      bottom: 0;\n      left: 0;\n    }\n\n    &--left {\n      border-radius: var(--va-alert-left-border-radius);\n      height: 100%;\n      width: var(--va-alert-stripe-border-size);\n      bottom: 0;\n      left: 0;\n    }\n  }\n\n  &__icon {\n    display: flex;\n    align-items: center;\n    padding-right: var(--va-alert-padding-x);\n  }\n\n  &__title {\n    display: flex;\n    align-items: center;\n    font-weight: var(--va-alert-title-font-weight);\n  }\n\n  &__content {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    flex-grow: 1;\n    color: var(--va-alert-color);\n  }\n\n  &__close {\n    padding-left: var(--va-alert-close-padding-x);\n    font-size: var(--va-alert-close-font-size);\n\n    &--closeable {\n      display: flex;\n      align-items: center;\n      cursor: pointer;\n    }\n  }\n\n  @include media-breakpoint-down(xs) {\n    @at-root {\n      .va-alert {\n        &__content {\n          flex-direction: column;\n          align-items: flex-start;\n        }\n\n        &__close {\n          align-self: flex-start;\n          display: flex;\n          align-items: flex-start;\n          padding: 0 var(--va-alert-close-padding-x) 0 0;\n          margin: 0;\n        }\n      }\n    }\n  }\n}\n</style>\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\nimport VaAlert from './VaAlert.vue'\n\nexport default withConfigTransport(VaAlert)\n"],"names":["defineComponent","name","components","VaIcon","emits","statefulComponentOptions","props","modelValue","type","Boolean","default","color","String","title","description","icon","closeText","closeable","dense","outline","center","borderColor","border","validator","value","includes","setup","slots","emit","alertStyles","getColor","useColors","colorComputed","computed","alertStyle","background","boxShadow","padding","contentStyle","getTextColor","alignItems","titleStyle","borderStyle","backgroundColor","useAlertStyles","valueComputed","useStateful","hasIcon","hasTitle","borderClass","closeIcon","hide","_ctx","_mergeProps","class","style","size","withConfigTransport","VaAlert"],"mappings":"ijBA0EA,MAAeA,EAAgB,CAC7BC,KAAM,UACNC,WAAY,CAAEC,OAAAA,GACdC,MAAO,IAAIC,EAAyBD,OACpCE,MAAO,IACFD,EAAyBC,MAC5BC,WAAY,CAAEC,KAAMC,QAA8BC,SAAS,GAC3DC,MAAO,CAAEH,KAAMI,OAA4BF,QAAS,WACpDG,MAAO,CAAEL,KAAMI,OAA4BF,QAAS,IACpDI,YAAa,CAAEN,KAAMI,OAA4BF,QAAS,IAC1DK,KAAM,CAAEP,KAAMI,OAA4BF,QAAS,IACnDM,UAAW,CAAER,KAAMI,OAA4BF,QAAS,IACxDO,UAAW,CAAET,KAAMC,QAA8BC,SAAS,GAC1DQ,MAAO,CAAEV,KAAMC,QAA8BC,SAAS,GACtDS,QAAS,CAAEX,KAAMC,QAA8BC,SAAS,GACxDU,OAAQ,CAAEZ,KAAMC,QAA8BC,SAAS,GACvDW,YAAa,CAAEb,KAAMI,OAA4BF,QAAS,IAC1DY,OAAQ,CACNd,KAAMI,OACNF,QAAS,GACTa,UAAYC,GAAkB,CAAC,MAAO,QAAS,SAAU,OAAQ,IAAIC,SAASD,KAGlFE,MAAOpB,GAAOqB,MAAEA,EAAKC,KAAEA,IACrB,MAAMC,EC9EoB,CAACvB,IAC7B,MAAMwB,SAAEA,GAAaC,IAEfC,EAAgBC,GAAS,IAAMH,EAASxB,EAAMK,SA4DpD,MAAO,CACLuB,WA3DiBD,GAAS,KAC1B,IAAIE,EAAaH,EAAcR,MAC3BY,EAAY,OAWhB,OATI9B,EAAMa,UACRgB,EAAa,eAGX7B,EAAMgB,SACRa,EAAa,kBACbC,EAAY,8BAGP,CACLd,OAAQhB,EAAMa,QAAU,aAAaa,EAAcR,QAAU,GAC7Da,QAAS/B,EAAMY,MAAQ,4DAA8D,GACrFiB,WAAAA,EACAC,UAAAA,MA2CFE,aAvCmBL,GAAS,KAC5B,IAAItB,EAAQ4B,EAAaP,EAAcR,OAUvC,OARIlB,EAAMa,UACRR,EAAQqB,EAAcR,OAGpBlB,EAAMgB,SACRX,EAAQ,kBAGH,CACL6B,WAAYlC,EAAMc,OAAS,SAAW,GACtCT,MAAAA,MA2BF8B,WAvBiBR,GAAS,KAC1B,IAAItB,EAAQ4B,EAAaP,EAAcR,OAUvC,OARIlB,EAAMa,UACRR,EAAQqB,EAAcR,OAGpBlB,EAAMgB,SACRX,EAAQqB,EAAcR,OAGjB,CAAEb,MAAAA,MAaT+B,YAVkBT,GAAS,MAC3BU,gBAAiBrC,EAAMe,YACnBS,EAASxB,EAAMe,aACfW,EAAcR,YDkBEoB,CAAetC,IAE7BuC,cAAEA,GAAkBC,EAAYxC,EAAOsB,GAIvCmB,EAAUd,GAAS,IAAM3B,EAAMS,MAAQY,EAAMZ,OAE7CiC,EAAWf,GAAS,IAAM3B,EAAMO,OAASc,EAAMd,QAE/CoC,EAAchB,GAAS,IAAM,qBAAqB3B,EAAMgB,WAExD4B,EAAYjB,GAAS,IAAM3B,EAAMU,WAAa,UAEpD,MAAO,IACFa,EACHgB,cAAAA,EACAE,QAAAA,EACAC,SAAAA,EACAC,YAAAA,EACAC,UAAAA,EACAC,KAjBW,KAAQN,EAAcrB,OAAQ,+vFEpGrC4B,4BAGNC,GACEC,MAAM,WACLC,MAAOH,mCAGEA,6BACAA,8CAOFA,8BAFEA,8EAKInD,KAAMmD,2EAKVA,+CAMAA,+BAFEA,8EAKHA,wFAIFA,qCAMCA,6DAGIA,oFAMGA,sCACNnD,KAAMmD,YACPI,KAAK,0BAEJJ,6ICvDf,MAAeK,EAAoBC"}