{"version":3,"file":"index22.js","sources":["../../../../node_modules/lodash/startCase.js","../../src/components/va-data-table/hooks/useColumns.ts","../../src/components/va-data-table/hooks/useSelectableRow.ts","../../src/components/va-data-table/hooks/useStyleable.ts","../../src/utils/css-utils.ts","../../src/components/va-data-table/VaDataTable.vue","../../src/components/va-data-table/hooks/useRows.ts","../../src/components/va-data-table/hooks/useFilterable.ts","../../src/components/va-data-table/hooks/useSortable.ts","../../src/components/va-data-table/hooks/usePaginatedRows.ts","../../src/components/va-data-table/VaDataTable.vue?vue&type=template&id=04f9c197&lang.js","../../src/components/va-data-table/index.ts"],"sourcesContent":["var createCompounder = require('./_createCompounder'),\n    upperFirst = require('./upperFirst');\n\n/**\n * Converts `string` to\n * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n *\n * @static\n * @memberOf _\n * @since 3.1.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the start cased string.\n * @example\n *\n * _.startCase('--foo-bar--');\n * // => 'Foo Bar'\n *\n * _.startCase('fooBar');\n * // => 'Foo Bar'\n *\n * _.startCase('__FOO_BAR__');\n * // => 'FOO BAR'\n */\nvar startCase = createCompounder(function(result, word, index) {\n  return result + (index ? ' ' : '') + upperFirst(word);\n});\n\nmodule.exports = startCase;\n","import { computed } from 'vue'\nimport startCase from 'lodash/startCase'\nimport merge from 'lodash/merge'\nimport { TTableColumnSource, TableColumn, ITableItem } from '../types'\n\ninterface useColumnsProps {\n  columns: TTableColumnSource[]\n  items: ITableItem[]\n  [prop: string]: unknown\n}\n\nexport const buildTableColumn = (source: TTableColumnSource, initialIndex: number): TableColumn => {\n  const input = typeof source === 'string' ? { key: source } : source\n\n  return {\n    source,\n    initialIndex,\n    key: input.key,\n    label: input.label || startCase(input.key),\n    headerTitle: input.headerTitle || input.label || startCase(input.key),\n    sortable: input.sortable || false,\n    sortingFn: input.sortingFn || undefined,\n    alignHead: input.alignHead || 'left',\n    verticalAlignHead: input.verticalAlignHead || 'middle',\n    align: input.align || 'left',\n    verticalAlign: input.verticalAlign || 'middle',\n    width: input.width || '',\n    classes: input.classes || '',\n    headerClasses: input.headerClasses || '',\n    style: input.style || {},\n    headerStyle: input.headerStyle || {},\n  }\n}\n\nconst buildColumnsFromItems = (items: ITableItem[]) => {\n  return Object.keys(merge({}, ...items)).map(buildTableColumn)\n}\n\nconst buildNormalizedColumns = (columns: TTableColumnSource[]) => {\n  return columns.map(buildTableColumn)\n}\n\nexport default function useColumns (props: useColumnsProps) {\n  const columnsComputed = computed(() => {\n    if (props.columns.length === 0) {\n      // if no column definitions provided then build them based on provided rawItems\n      // e.g. if provided items look like `[{a: 1}, {b: 2}]` then there should be 2 columns: A and B\n      return buildColumnsFromItems(props.items)\n    } else {\n      return buildNormalizedColumns(props.columns)\n    }\n  })\n\n  return {\n    columnsComputed,\n  }\n}\n","import { Ref, computed, watch, ref } from 'vue'\nimport { TableRow, ITableItem, TSelectMode } from '../types'\n\ninterface useSelectableProps {\n  modelValue: ITableItem[] | undefined // selectedItems\n  selectable: boolean\n  selectMode: TSelectMode\n  [prop: string]: unknown\n}\nexport type TEmits = 'update:modelValue' | 'selectionChange'\nexport type TSelectionChange = {\n  currentSelectedItems: ITableItem[],\n  previousSelectedItems: ITableItem[],\n}\nexport type TSelectableEmits = (event: TEmits, arg: ITableItem[] | TSelectionChange) => void\n\nexport default function useSelectableRow (\n  paginatedRows: Ref<TableRow[]>,\n  props: useSelectableProps,\n  emit: TSelectableEmits,\n) {\n  const selectedItemsFallback = ref([] as ITableItem[])\n\n  const selectedItemsSync = computed<ITableItem[]>({\n    get () {\n      if (props.modelValue === undefined) {\n        return selectedItemsFallback.value\n      } else {\n        return props.modelValue\n      }\n    },\n\n    set (modelValue) {\n      if (props.modelValue === undefined) {\n        selectedItemsFallback.value = modelValue\n      }\n\n      emit('update:modelValue', modelValue)\n    },\n  })\n\n  const prevSelectedRowIndex = ref(-1)\n\n  // clear all the selected rows when the `select-mode`'s value changes from multiple to single\n  // (though it's safe enough to leave a selected item when changing from single to multiple\n  watch(() => props.selectMode, (newSelectMode, oldSelectMode) => {\n    if (newSelectMode === 'single' && oldSelectMode === 'multiple') {\n      unselectAllRows()\n      setPrevSelectedRowIndex(-1)\n    }\n  })\n\n  // watch for rows changes (happens when filtering is applied e.g.)\n  watch(paginatedRows, () => { setPrevSelectedRowIndex(-1) })\n\n  // emit the \"selection-change\" event each time the selection changes\n  watch(selectedItemsSync, (currentSelectedItems, previousSelectedItems) => {\n    emit('selectionChange', {\n      currentSelectedItems,\n      previousSelectedItems,\n    })\n  })\n\n  const noRowsSelected = computed(() => (\n    !paginatedRows.value.some(({ source }) => selectedItemsSync.value.includes(source))\n  ))\n\n  const allRowsSelected = computed(() => {\n    if (paginatedRows.value.length === 0) { return false }\n\n    return paginatedRows.value.every(({ source }) => selectedItemsSync.value.includes(source))\n  })\n\n  const severalRowsSelected = computed(() => !noRowsSelected.value && !allRowsSelected.value)\n\n  function isRowSelected (row: TableRow) {\n    return selectedItemsSync.value.includes(row.source)\n  }\n\n  function selectAllRows () {\n    selectedItemsSync.value = [...new Set([\n      ...selectedItemsSync.value,\n      ...paginatedRows.value.map(row => row.source),\n    ])]\n  }\n\n  function unselectAllRows () {\n    const paginatedRowsSource = paginatedRows.value.map(row => row.source)\n\n    selectedItemsSync.value = selectedItemsSync.value\n      .filter((row) => !paginatedRowsSource.includes(row))\n  }\n\n  // The one calling this function must guarantee that the row isn't already selected\n  function selectRow (row: TableRow) {\n    selectedItemsSync.value = [...selectedItemsSync.value, row.source]\n  }\n\n  function selectOnlyRow (row: TableRow) {\n    selectedItemsSync.value = [row.source]\n  }\n\n  // The one calling this function must guarantee that the row is selected\n  function unselectRow (row: TableRow) {\n    const index = selectedItemsSync.value.findIndex(selectedItem => selectedItem === row.source)\n\n    selectedItemsSync.value = [\n      ...selectedItemsSync.value.slice(0, index),\n      ...selectedItemsSync.value.slice(index + 1),\n    ]\n  }\n\n  function setPrevSelectedRowIndex (rowInitialIndex: number) {\n    if (rowInitialIndex === -1) {\n      prevSelectedRowIndex.value = -1\n    } else {\n      const prevSelectedRow = paginatedRows.value.find(row => row.initialIndex === rowInitialIndex)\n\n      prevSelectedRow\n        ? prevSelectedRowIndex.value = paginatedRows.value.indexOf(prevSelectedRow)\n        : prevSelectedRowIndex.value = -1\n    }\n  }\n\n  function getRowsToSelect (targetIndex: number) {\n    let start\n    let end\n\n    if (isRowSelected(paginatedRows.value[prevSelectedRowIndex.value])) {\n      start = Math.min(prevSelectedRowIndex.value, targetIndex)\n      end = Math.max(prevSelectedRowIndex.value, targetIndex)\n    } else {\n      start = Math.min(prevSelectedRowIndex.value + 1, targetIndex)\n      end = Math.max(prevSelectedRowIndex.value - 1, targetIndex)\n    }\n\n    return paginatedRows.value.slice(start, end + 1)\n  }\n\n  function mergeSelection (rowsToSelect: TableRow[]) {\n    const rowsToSelectSource = rowsToSelect.map(row => row.source)\n\n    if (noRowsSelected.value) {\n      selectedItemsSync.value = rowsToSelectSource\n      return\n    }\n\n    const isInternalSelection = rowsToSelectSource.every(rowSource => selectedItemsSync.value.includes(rowSource))\n\n    if (isInternalSelection) {\n      selectedItemsSync.value = selectedItemsSync.value.filter(row => !rowsToSelectSource.includes(row))\n      return\n    }\n\n    selectedItemsSync.value = [...new Set([\n      ...selectedItemsSync.value,\n      ...rowsToSelectSource,\n    ])]\n  }\n\n  function toggleRowSelection (row: TableRow) {\n    if (!props.selectable) {\n      return\n    }\n\n    if (isRowSelected(row)) {\n      unselectRow(row)\n      props.selectMode === 'single' ? setPrevSelectedRowIndex(-1) : setPrevSelectedRowIndex(row.initialIndex)\n    } else {\n      props.selectMode === 'single' ? selectOnlyRow(row) : selectRow(row)\n      setPrevSelectedRowIndex(row.initialIndex)\n    }\n  }\n\n  function ctrlSelectRow (row: TableRow) {\n    if (!props.selectable) {\n      return\n    }\n\n    toggleRowSelection(row)\n  }\n\n  function shiftSelectRows (row: TableRow) {\n    if (!props.selectable) {\n      return\n    }\n\n    if (props.selectMode === 'single' || prevSelectedRowIndex.value === -1) {\n      return toggleRowSelection(row)\n    }\n\n    const targetIndex = paginatedRows.value.indexOf(row)\n    mergeSelection(getRowsToSelect(targetIndex))\n    setPrevSelectedRowIndex(-1)\n  }\n\n  function toggleBulkSelection () {\n    if (allRowsSelected.value) {\n      unselectAllRows()\n    } else {\n      selectAllRows()\n    }\n\n    setPrevSelectedRowIndex(-1)\n  }\n\n  return {\n    ctrlSelectRow,\n    shiftSelectRows,\n    toggleRowSelection,\n    toggleBulkSelection,\n    isRowSelected,\n    noRowsSelected,\n    severalRowsSelected,\n    allRowsSelected,\n  }\n}\n","import { computed } from 'vue'\nimport { useColors } from '../../../composables/useColor'\nimport { safeCSSLength } from '../../../utils/css-utils'\nimport { TableColumn, TClassesOptions, TStyleOptions, TableCell } from '../types'\ninterface useStyleableProps {\n  selectable: boolean\n  selectedColor: string\n  allowFooterSorting: boolean\n  stickyHeader: boolean\n  height: string | number | undefined\n  [prop: string]: unknown\n}\n\nfunction getClasses (classes: TClassesOptions = []): string[] {\n  if (typeof classes === 'function') {\n    const computedClasses = classes()\n    return (typeof computedClasses === 'string') ? [computedClasses] : computedClasses\n  }\n\n  return (typeof classes === 'string') ? [classes] : classes\n}\n\nfunction getStyles (styles: TStyleOptions = {}): Record<string, any> {\n  return (typeof styles === 'function') ? styles() : styles\n}\n\nconst { getColor, getFocusColor, getHoverColor, shiftHSLAColor } = useColors()\n\nexport default function useStyleable (props: useStyleableProps) {\n  const color = computed(() => getColor(props.selectedColor))\n\n  function getHeaderCSSVariables (column: TableColumn) {\n    return {\n      '--width': typeof column.width === 'string' ? column.width : `${column.width}px`,\n      '--align': column.alignHead,\n      '--vertical-align': column.verticalAlignHead,\n      '--cursor': column.sortable ? 'pointer' : 'default',\n    }\n  }\n\n  const rowCSSVariables = computed(() => {\n    const styles: Record<string, any> = {\n      '--hover-color': getHoverColor(color.value),\n    }\n\n    if (props.selectable) {\n      styles['--selected-color'] = getFocusColor(color.value)\n    }\n\n    return styles\n  })\n\n  function getCellCSSVariables (cell: TableCell) {\n    return {\n      '--align': cell.column.align,\n      '--vertical-align': cell.column.verticalAlign,\n    }\n  }\n\n  function getFooterCSSVariables (column: TableColumn) {\n    return {\n      '--align': column.alignHead,\n      '--vertical-align': column.verticalAlignHead,\n      '--cursor': props.allowFooterSorting && column.sortable ? 'pointer' : 'default',\n    }\n  }\n\n  function getStickyCSSVariables () {\n    return {\n      '--scroll-table-color': (props.height || props.stickyHeader) && shiftHSLAColor(color.value, { l: 20 }),\n      '--scroll-table-height': props.height && safeCSSLength(props.height),\n    }\n  }\n\n  return {\n    getHeaderCSSVariables,\n    rowCSSVariables,\n    getCellCSSVariables,\n    getFooterCSSVariables,\n    getStickyCSSVariables,\n    getClasses,\n    getStyles,\n  }\n}\n","export const safeCSSLength = (length: string | number) => (\n  typeof length === 'number' ? `${length}px` : length\n)\n","<template>\n  <va-inner-loading\n    class=\"va-data-table\"\n    :class=\"[\n      { 'va-data-table--sticky': $props.stickyHeader },\n      { 'va-data-table--scroll': !!$props.height },\n    ]\"\n    :style=\"{ ...getStickyCSSVariables() }\"\n    :loading=\"loading\"\n    :color=\"loadingColor\"\n    v-bind=\"componentAttributes\"\n  >\n    <table\n      class=\"va-data-table__table\"\n      :class=\"{ striped, selectable, hoverable, clickable }\"\n      v-bind=\"tableAttributes\"\n    >\n      <colgroup v-if=\"'colgroup' in $slots\">\n        <slot name=\"colgroup\" v-bind=\"columnsComputed\" />\n      </colgroup>\n\n      <thead\n        class=\"va-data-table__table-thead\"\n        :class=\"{ 'va-data-table__table-thead--sticky': $props.stickyHeader }\">\n        <slot name=\"headerPrepend\" />\n\n        <tr\n          v-if=\"!hideDefaultHeader\"\n          class=\"va-data-table__table-tr\"\n        >\n          <th\n            v-if=\"selectable\"\n            :class=\"['va-data-table__table-th', 'va-data-table__table-cell-select']\"\n          >\n            <va-checkbox\n              v-if=\"selectMode === 'multiple'\"\n              :model-value=\"severalRowsSelected ? 'idl' : allRowsSelected\"\n              :true-value=\"true\"\n              :false-value=\"false\"\n              indeterminate-value=\"idl\"\n              indeterminate\n              @update:model-value=\"toggleBulkSelection\"\n              :color=\"selectedColor\"\n            />\n          </th>\n\n          <th\n            v-for=\"column in columnsComputed\"\n            :key=\"column.key\"\n            :title=\"column.headerTitle\"\n            @click.exact=\"column.sortable ? toggleSorting(column): () => {}\"\n            :style=\"{ ...getHeaderCSSVariables(column), ...getStyles(column.headerStyle) }\"\n            :class=\"['va-data-table__table-th', ...getClasses(column.headerClasses)]\"\n          >\n            <div class=\"va-data-table__table-th-wrapper\">\n              <span v-if=\"`header(${column.key})` in $slots\">\n                <slot :name=\"`header(${column.key})`\" v-bind=\"column\" />\n              </span>\n\n              <slot v-else name=\"header\" v-bind=\"column\">\n                <span>{{ column.label }}</span>\n              </slot>\n\n              <div\n                v-if=\"column.sortable\"\n                class=\"va-data-table__table-th-sorting\"\n                @selectstart.prevent\n              >\n                <va-icon\n                  :name=\"sortingOrderSync === 'asc' ? 'expand_less' : 'expand_more'\"\n                  size=\"small\"\n                  class=\"va-data-table__table-th-sorting-icon\"\n                  :class=\"{ active: sortBySync === column.key && sortingOrderSync !== null }\"\n                />\n              </div>\n            </div>\n          </th>\n        </tr>\n\n        <slot name=\"headerAppend\" />\n      </thead>\n\n      <tbody\n        v-if=\"$slots.bodyPrepend\"\n        class=\"va-data-table__table-tbody\"\n        :style=\"rowCSSVariables\"\n      >\n        <slot name=\"bodyPrepend\" />\n      </tbody>\n\n      <transition\n        :name=\"animated ? 'table-transition' : null\"\n        appear\n        mode=\"out-in\"\n      >\n        <tbody\n          v-if=\"showNoDataHtml\"\n          key=\"showNoDataHtml\"\n          class=\"va-data-table__table-tbody\"\n          :style=\"rowCSSVariables\"\n        >\n          <tr>\n            <td\n              :colspan=\"columnsComputed.length + (selectable ? 1 : 0)\"\n              v-html=\"noDataHtml\"\n              class=\"no-data\"\n            />\n          </tr>\n        </tbody>\n\n        <tbody\n          v-else-if=\"showNoDataFilteredHtml\"\n          key=\"showNoDataFilteredHtml\"\n          class=\"va-data-table__table-tbody\"\n          :style=\"rowCSSVariables\"\n        >\n          <tr>\n            <td\n              :colspan=\"columnsComputed.length + (selectable ? 1 : 0)\"\n              v-html=\"noDataFilteredHtml\"\n              class=\"no-data\"\n            />\n          </tr>\n        </tbody>\n\n        <tbody\n          v-else\n          key=\"showRows\"\n          class=\"va-data-table__table-tbody\"\n          :style=\"rowCSSVariables\"\n        >\n          <transition-group\n            :name=\"animated ? 'table-transition-rows' : null\"\n            appear\n          >\n            <tr\n              v-for=\"row in rows\"\n              :key=\"`table-row_${row.initialIndex}`\"\n              class=\"va-data-table__table-tr\"\n              :class=\"{ selected: isRowSelected(row) }\"\n              @click=\"onRowClickHandler('row:click', $event, row)\"\n              @dblclick=\"onRowClickHandler('row:dblclick', $event, row)\"\n              @contextmenu=\"onRowClickHandler('row:contextmenu', $event, row)\"\n            >\n              <td\n                v-if=\"selectable\"\n                :class=\"['va-data-table__table-td', 'va-data-table__table-cell-select']\"\n                :key=\"`selectable_${row.initialIndex}`\"\n                @selectstart.prevent\n              >\n                <va-checkbox\n                  :model-value=\"isRowSelected(row)\"\n                  @click.shift.exact=\"shiftSelectRows(row)\"\n                  @click.ctrl.exact=\"ctrlSelectRow(row)\"\n                  @click.exact=\"ctrlSelectRow(row)\"\n                  :color=\"selectedColor\"\n                />\n              </td>\n\n              <td\n                v-for=\"cell in row.cells\"\n                :key=\"`table-cell_${cell.column.key + cell.rowIndex}`\"\n                :style=\"{ ...getCellCSSVariables(cell), ...getStyles(cell.column.style) }\"\n                :class=\"['va-data-table__table-td', ...getClasses(cell.column.classes)]\"\n              >\n                <slot\n                  v-if=\"`cell(${cell.column.key})` in $slots\"\n                  :name=\"`cell(${cell.column.key})`\"\n                  v-bind=\"{ ...cell, cells: row.cells }\"\n                />\n\n                <slot v-else name=\"cell\" v-bind=\"cell\">\n                  {{ cell.value }}\n                </slot>\n              </td>\n            </tr>\n          </transition-group>\n        </tbody>\n      </transition>\n\n      <tbody\n        v-if=\"$slots.bodyAppend\"\n        class=\"va-data-table__table-tbody\"\n        :style=\"rowCSSVariables\"\n      >\n        <slot name=\"bodyAppend\" />\n      </tbody>\n\n      <tfoot v-if=\"footerClone\" class=\"va-data-table__table-tfoot\">\n        <slot name=\"footerPrepend\" />\n\n        <tr v-if=\"!hideDefaultHeader\" class=\"va-data-table__table-tr\">\n          <th v-if=\"selectable\" class=\"va-data-table__table-th\">\n            <va-checkbox\n              v-if=\"selectMode === 'multiple'\"\n              :model-value=\"severalRowsSelected ? 'idl' : allRowsSelected\"\n              :true-value=\"true\"\n              :false-value=\"false\"\n              indeterminate-value=\"idl\"\n              indeterminate\n              @update:model-value=\"toggleBulkSelection\"\n              :color=\"selectedColor\"\n            />\n          </th>\n\n          <th\n            v-for=\"column in columnsComputed\"\n            :key=\"column.key\"\n            :title=\"column.headerTitle\"\n            @click.exact=\"allowFooterSorting && column.sortable ? toggleSorting(column) : () => {}\"\n            :style=\"{ ...getFooterCSSVariables(column), ...getStyles(column.headerStyle) }\"\n            :class=\"['va-data-table__table-th', ...getClasses(column.headerClasses)]\"\n          >\n            <div class=\"va-data-table__table-th-wrapper\">\n              <span v-if=\"`footer(${column.key})` in $slots\">\n                <slot :name=\"`footer(${column.key})`\" v-bind=\"column\" />\n              </span>\n\n              <slot v-else name=\"footer\" v-bind=\"column\">\n                <span>{{ column.label }}</span>\n              </slot>\n\n              <div\n                v-if=\"allowFooterSorting && column.sortable\"\n                class=\"va-data-table__table-th-sorting\"\n                @selectstart.prevent\n              >\n                <va-icon\n                  :name=\"sortingOrderSync === 'asc' ? 'expand_less' : 'expand_more'\"\n                  size=\"small\"\n                  class=\"va-data-table__table-th-sorting-icon\"\n                  :class=\"{ active: sortBySync === column.key && sortingOrderSync !== null }\"\n                />\n              </div>\n            </div>\n          </th>\n        </tr>\n\n        <slot name=\"footerAppend\" />\n      </tfoot>\n    </table>\n  </va-inner-loading>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, HTMLAttributes, PropType, TableHTMLAttributes } from 'vue'\nimport omit from 'lodash/omit'\nimport pick from 'lodash/pick'\nimport VaInnerLoading from '../va-inner-loading'\nimport VaCheckbox from '../va-checkbox'\nimport VaIcon from '../va-icon'\nimport useColumns from './hooks/useColumns'\nimport useRows from './hooks/useRows'\nimport useFilterable from './hooks/useFilterable'\nimport useSortable from './hooks/useSortable'\nimport usePaginatedRows from './hooks/usePaginatedRows'\nimport useSelectableRow from './hooks/useSelectableRow'\nimport useStyleable from './hooks/useStyleable'\nimport {\n  TTableColumnSource,\n  ITableItem,\n  TableRow,\n  TFilterMethod,\n  TSortingOrder,\n  TSelectMode,\n} from './types'\n\ntype emitNames = 'update:modelValue' |\n  'update:sortBy' |\n  'update:sortingOrder' |\n  'filtered' |\n  'sorted' |\n  'selectionChange' |\n  'row:click' |\n  'row:dblclick' |\n  'row:contextmenu'\n\n/*\n  TODO: consider a possibility to lazy-load the hooks with dynamic imports based on respective props' values. E.G.\n\n  if (selectable.value) {\n    const { default: useSelectableRow } = await import(\"./hooks/useSelectableRow\");\n  }\n\n  // Would be a cool feature (if possible at all).\n*/\n\nexport default defineComponent({\n  name: 'VaDataTable',\n\n  components: {\n    VaInnerLoading,\n    VaCheckbox,\n    VaIcon,\n  },\n\n  inheritAttrs: false,\n\n  props: {\n    columns: { type: Array as PropType<TTableColumnSource[]>, default: () => [] as TTableColumnSource[] },\n    items: { type: Array as PropType<ITableItem[]>, default: () => [] as ITableItem[] },\n    modelValue: { type: Array as PropType<ITableItem[]> }, // selectedItems\n    sortingOrder: { type: String as PropType<TSortingOrder> }, // model-able\n    sortBy: { type: String }, // model-able\n    filter: { type: String, default: '' },\n    filterMethod: { type: Function as PropType<TFilterMethod> },\n    hoverable: { type: Boolean, default: false },\n    clickable: { type: Boolean, default: false },\n    animated: { type: Boolean, default: true },\n    selectable: { type: Boolean, default: false },\n    selectMode: { type: String as PropType<TSelectMode>, default: 'multiple' },\n    selectedColor: { type: String, default: 'primary' },\n    perPage: { type: Number },\n    currentPage: { type: Number },\n    loading: { type: Boolean, default: false },\n    loadingColor: { type: String, default: 'primary' },\n    noDataHtml: { type: String, default: 'No items' },\n    noDataFilteredHtml: { type: String, default: 'No items match the provided filtering condition' },\n    hideDefaultHeader: { type: Boolean, default: false },\n    footerClone: { type: Boolean, default: false },\n    allowFooterSorting: { type: Boolean, default: false },\n    striped: { type: Boolean, default: false },\n    stickyHeader: { type: Boolean, default: false },\n    height: { type: [String, Number] as PropType<string | number> },\n  },\n\n  emits: [\n    'update:modelValue', // `modelValue` is selectedItems\n    'update:sortBy',\n    'update:sortingOrder',\n    'filtered',\n    'sorted',\n    'selectionChange',\n    'row:click',\n    'row:dblclick',\n    'row:contextmenu',\n  ],\n\n  setup (props, { attrs, emit }) {\n    const { columnsComputed } = useColumns(props)\n\n    const { rowsComputed } = useRows(columnsComputed, props)\n\n    const { filteredRows } = useFilterable(rowsComputed, props, emit)\n\n    const {\n      sortBySync,\n      sortingOrderSync,\n      toggleSorting,\n      sortedRows,\n    } = useSortable(columnsComputed, filteredRows, props, emit)\n\n    const { paginatedRows } = usePaginatedRows(sortedRows, props)\n\n    const {\n      ctrlSelectRow,\n      shiftSelectRows,\n      toggleBulkSelection,\n      isRowSelected,\n      severalRowsSelected,\n      allRowsSelected,\n    } = useSelectableRow(paginatedRows, props, emit)\n\n    const {\n      getHeaderCSSVariables,\n      rowCSSVariables,\n      getCellCSSVariables,\n      getFooterCSSVariables,\n      getStickyCSSVariables,\n      getClasses,\n      getStyles,\n    } = useStyleable(props)\n\n    const showNoDataHtml = computed(() => props.items.length === 0)\n\n    const showNoDataFilteredHtml = computed(() => paginatedRows.value.length === 0)\n\n    const onRowClickHandler = (name: emitNames, $event: Event, row: TableRow) => {\n      if (props.clickable) {\n        emit(name, {\n          event: $event,\n          item: row.source,\n          itemIndex: row.initialIndex,\n        })\n      }\n    }\n\n    const componentAttributes = computed(() => ({\n      ...pick(attrs, ['class', 'style']),\n    }) as HTMLAttributes)\n\n    const tableAttributes = computed(() => ({\n      ...omit(attrs, ['class', 'style']),\n    }) as TableHTMLAttributes)\n\n    return {\n      columnsComputed,\n      rows: paginatedRows,\n      ctrlSelectRow,\n      shiftSelectRows,\n      toggleBulkSelection,\n      isRowSelected,\n      severalRowsSelected,\n      allRowsSelected,\n      sortBySync,\n      sortingOrderSync,\n      toggleSorting,\n      getHeaderCSSVariables,\n      rowCSSVariables,\n      getCellCSSVariables,\n      getFooterCSSVariables,\n      getStickyCSSVariables,\n      getClasses,\n      getStyles,\n      showNoDataHtml,\n      showNoDataFilteredHtml,\n      onRowClickHandler,\n      componentAttributes,\n      tableAttributes,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import '../../styles/resources/index.scss';\n@import \"variables\";\n// The calculated variables are taken from a respective element's `style` attribute. See the `useStyleable` hook\n\n.va-data-table {\n  overflow-x: auto;\n  overflow-y: hidden;\n  min-width: unset;\n  font-family: var(--va-font-family);\n\n  &--sticky,\n  &--scroll {\n    overflow-y: auto;\n    height: var(--scroll-table-height);\n\n    // 1) doesn't work in Firefox\n    // 2) doesn't disappear on mac (the standard one does)\n    // @include va-scroll(var(--scroll-table-color));\n  }\n\n  .va-data-table__table {\n    width: 100%;\n    cursor: default;\n    white-space: nowrap;\n\n    .va-data-table__table-thead {\n      border-bottom: var(--va-data-table-thead-border);\n\n      &--sticky {\n        position: sticky;\n        top: 0;\n        z-index: 1;\n        background-color: var(--scroll-table-color);\n      }\n    }\n\n    .va-data-table__table-tbody {\n      .no-data {\n        text-align: var(--va-data-table-no-data-text-align);\n        vertical-align: var(--va-data-table-no-data-vertical-align);\n      }\n    }\n\n    .va-data-table__table-tfoot {\n      border-top: var(--va-data-table-thead-border);\n    }\n\n    .va-data-table__table-th {\n      padding: var(--va-data-table-cell-padding);\n      width: var(--width);\n      min-width: var(--width);\n      text-align: var(--align);\n      vertical-align: var(--vertical-align);\n      color: var(--va-data-table-thead-color);\n      font-size: var(--va-data-table-thead-font-size);\n      line-height: var(--va-data-table-thead-line-height);\n      font-weight: var(--va-data-table-thead-font-weight);\n      text-transform: var(--va-data-table-thead-text-transform);\n      letter-spacing: var(--va-data-table-thead-letter-spacing);\n      cursor: var(--cursor);\n\n      .va-data-table__table-th-wrapper {\n        display: flex;\n        align-items: center;\n      }\n\n      .va-data-table__table-th-sorting {\n        justify-self: end;\n        line-height: 1;\n      }\n\n      .va-data-table__table-th-sorting-icon {\n        opacity: 0;\n        user-select: none;\n        pointer-events: none;\n\n        &.active {\n          opacity: 1;\n          pointer-events: initial;\n        }\n      }\n\n      span {\n        flex-grow: 1;\n      }\n\n      &:hover {\n        .va-data-table__table-th-sorting-icon:not(.active) {\n          opacity: var(--va-data-table-hover-th-opacity);\n        }\n      }\n    }\n\n    .va-data-table__table-td {\n      padding: var(--va-data-table-cell-padding);\n      text-align: var(--align);\n      vertical-align: var(--vertical-align);\n    }\n\n    .va-data-table__table-th,\n    .va-data-table__table-td {\n      &.va-data-table__table-cell-select {\n        width: var(--va-data-table-selectable-cell-width);\n        min-width: var(--va-data-table-selectable-cell-width);\n        text-align: var(--va-data-table-selectable-cell-text-align);\n        vertical-align: var(--va-data-table-selectable-cell-vertical-align);\n        cursor: var(--va-data-table-selectable-tr-cursor);\n      }\n    }\n\n    .va-data-table__table-tr {\n      &.selected {\n        background-color: var(--selected-color);\n      }\n    }\n\n    &.clickable {\n      .va-data-table__table-tr {\n        cursor: pointer;\n      }\n    }\n\n    &.striped {\n      .va-data-table__table-tr:nth-child(2n) {\n        &:not(.selected) {\n          background-color: var(--va-light-gray3);\n        }\n      }\n    }\n\n    &.selectable,\n    &.hoverable {\n      .va-data-table__table-tr {\n        &:hover {\n          background-color: var(--hover-color);\n        }\n      }\n\n      .va-data-table__table-tr:nth-child(2n) {\n        &:hover {\n          background-color: var(--hover-color);\n        }\n      }\n    }\n\n    .table-transition-leave-active {\n      transition: opacity var(--va-data-table-transition);\n    }\n\n    .table-transition-enter-active {\n      transition: opacity var(--va-data-table-transition) 0.2s;\n    }\n\n    .table-transition-enter-from,\n    .table-transition-rows-enter-from,\n    .table-transition-leave-to,\n    .table-transition-rows-leave-to {\n      opacity: 0;\n    }\n\n    .table-transition-rows-move {\n      transition: transform var(--va-data-table-transition);\n    }\n\n    .table-transition-rows-leave-active {\n      transition: none;\n    }\n\n    .table-transition-rows-enter-active {\n      transition: opacity var(--va-data-table-transition);\n    }\n  }\n}\n</style>\n","import { Ref, computed } from 'vue'\nimport { TableColumn, ITableItem, TableCell, TableRow } from '../types'\n\ninterface useRowsProps {\n  items: ITableItem[]\n  [prop: string]: unknown\n}\n\nconst buildTableCell = (rowIndex: number, column: TableColumn, source: any): TableCell => ({\n  source,\n  rowIndex,\n  column,\n  value: source?.toString?.() || '',\n})\n\nconst buildTableRow = (source: ITableItem, initialIndex: number, columns: TableColumn[]): TableRow => ({\n  source,\n  initialIndex,\n  cells: columns.map(column => buildTableCell(initialIndex, column, source[column.key])),\n})\n\nexport default function useRows (\n  columns: Ref<TableColumn[]>,\n  props: useRowsProps,\n) {\n  const rowsComputed = computed(() => {\n    return props.items.map((rawItem, index) => buildTableRow(rawItem, index, columns.value))\n  })\n\n  return {\n    rowsComputed,\n  }\n}\n","import { Ref, watch, computed } from 'vue'\nimport { TableRow, TFilterMethod, ITableItem } from '../types'\n\ninterface useFilterableProps {\n  filter: string\n  filterMethod: TFilterMethod | undefined\n  [prop: string]: unknown\n}\nexport type TFilteredArgs = { items: ITableItem[], itemsIndexes: number[] }\nexport type TFilterableEmits = (event: 'filtered', arg: TFilteredArgs) => void\n\nexport default function useFilterable (\n  rawRows: Ref<TableRow[]>,\n  props: useFilterableProps,\n  emit: TFilterableEmits,\n) {\n  const filteredRows = computed<TableRow[]>(() => {\n    if (!rawRows.value.length) {\n      return rawRows.value\n    }\n\n    if (props.filter === '' && !props.filterMethod) {\n      return rawRows.value\n    }\n\n    return rawRows.value.filter(row => row.cells.some(cell => {\n      return typeof props.filterMethod === 'function'\n        ? props.filterMethod(cell.source)\n        : cell.value.toLowerCase().includes(props.filter.toLowerCase())\n    }))\n  })\n\n  watch(filteredRows, () => {\n    emit('filtered', {\n      items: filteredRows.value.map(row => row.source),\n      itemsIndexes: filteredRows.value.map(row => row.initialIndex),\n    })\n  })\n\n  return {\n    filteredRows,\n  }\n}\n","import { computed, ref, Ref, watch } from 'vue'\nimport { TableColumn, TableRow, ITableItem, TSortingOrder } from '../types'\n\ninterface useSortableProps {\n  sortBy: string | undefined\n  sortingOrder: TSortingOrder | undefined\n  [prop: string]: unknown\n}\nexport type TSortedArgs = { sortBy: string, sortingOrder: TSortingOrder, items: ITableItem[], itemsIndexes: number[] }\nexport type TSortableEmits = (\n  event: 'update:sortBy' | 'update:sortingOrder' | 'sorted',\n  args: string | TSortingOrder | TSortedArgs,\n) => void\n\nexport default function useSortable (\n  columns: Ref<TableColumn[]>,\n  filteredRows: Ref<TableRow[]>,\n  props: useSortableProps,\n  emit: TSortableEmits,\n) {\n  const sortByFallback = ref('')\n  const sortBySync = computed<string>({\n    get () {\n      if (props.sortBy === undefined) {\n        return sortByFallback.value\n      } else {\n        return props.sortBy\n      }\n    },\n\n    set (value) {\n      if (props.sortBy === undefined) {\n        sortByFallback.value = value\n      }\n\n      emit('update:sortBy', value)\n    },\n  })\n\n  const sortingOrderFallback = ref(null as TSortingOrder)\n  const sortingOrderSync = computed<TSortingOrder>({\n    get () {\n      if (props.sortingOrder === undefined) {\n        return sortingOrderFallback.value\n      } else {\n        return props.sortingOrder\n      }\n    },\n\n    set (value) {\n      if (props.sortingOrder === undefined) {\n        sortingOrderFallback.value = value\n      }\n\n      emit('update:sortingOrder', value)\n    },\n  })\n\n  // sorts by string-value of a given row's cell (depending on by which column the table is sorted) if no sortingFn is\n  // provided. Otherwise uses that very sortingFn. If sortingOrder is `null` then restores the initial sorting order of\n  // the rows.\n  const sortedRows = computed(() => {\n    if (filteredRows.value.length <= 1) {\n      return filteredRows.value\n    }\n\n    const column = columns.value.find(column => column.key === sortBySync.value)\n\n    if (!column || !column.sortable) {\n      return filteredRows.value\n    }\n\n    const columnIndex = columns.value.indexOf(column)\n\n    return [...filteredRows.value].sort((a, b) => {\n      const firstValString = a.cells[columnIndex].value\n      const secondValString = b.cells[columnIndex].value\n      const firstValInitial = a.cells[columnIndex].source\n      const secondValInitial = b.cells[columnIndex].source\n\n      if (sortingOrderSync.value === null) {\n        return a.initialIndex - b.initialIndex\n      } else {\n        const sortingOrderRatio = sortingOrderSync.value === 'desc' ? -1 : 1\n\n        return sortingOrderRatio * (\n          typeof column.sortingFn === 'function'\n            ? column.sortingFn(firstValInitial, secondValInitial)\n            : firstValString.localeCompare(secondValString)\n        )\n      }\n    })\n  })\n\n  // sort each time the sortBy or sortingOrder is changed (and also initially). Also if columns definitions are changed\n  // (because that potentially means that the user runtime-introduced a custom sorting function for a specific column)\n  watch(sortedRows, () => {\n    emit('sorted', {\n      sortBy: sortBySync.value,\n      sortingOrder: sortingOrderSync.value,\n      items: sortedRows.value.map(row => row.source),\n      itemsIndexes: sortedRows.value.map(row => row.initialIndex),\n    })\n  })\n\n  // a function to invoke when a heading of the table is clicked.\n  // Sets the clicked heading's column as a one to sort by and toggles the sorting order from \"asc\" to \"desc\" to `null`\n  // (un-sorted) if the same column is clicked again or sets sorting order to \"asc\" if some other column is chosen.\n  function toggleSorting (column: TableColumn) {\n    if (column.key === sortBySync.value) {\n      if (sortingOrderSync.value === null) {\n        sortingOrderSync.value = 'asc'\n      } else if (sortingOrderSync.value === 'asc') {\n        sortingOrderSync.value = 'desc'\n      } else {\n        sortingOrderSync.value = null\n      }\n    } else {\n      sortBySync.value = column.key\n      sortingOrderSync.value = 'asc'\n    }\n  }\n\n  return {\n    sortBySync,\n    sortingOrderSync,\n    toggleSorting,\n    sortedRows,\n  }\n}\n","import { Ref, computed } from 'vue'\nimport { TableRow } from '../types'\n\ninterface useSelectableProps {\n  perPage: number | undefined\n  currentPage: number | undefined\n  [prop: string]: unknown\n}\n\nexport default function usePaginatedRows (\n  sortedRows: Ref<TableRow[]>,\n  props: useSelectableProps,\n) {\n  const paginatedRows = computed(() => {\n    if (!props.perPage || props.perPage < 0) {\n      return sortedRows.value\n    }\n\n    if (!props.currentPage || props.currentPage < 0) {\n      return sortedRows.value.slice(0, props.perPage)\n    }\n\n    const pageStartIndex = props.perPage * (props.currentPage - 1)\n    return sortedRows.value.slice(pageStartIndex, pageStartIndex + props.perPage)\n  })\n\n  return {\n    paginatedRows,\n  }\n}\n","<template>\n  <va-inner-loading\n    class=\"va-data-table\"\n    :class=\"[\n      { 'va-data-table--sticky': $props.stickyHeader },\n      { 'va-data-table--scroll': !!$props.height },\n    ]\"\n    :style=\"{ ...getStickyCSSVariables() }\"\n    :loading=\"loading\"\n    :color=\"loadingColor\"\n    v-bind=\"componentAttributes\"\n  >\n    <table\n      class=\"va-data-table__table\"\n      :class=\"{ striped, selectable, hoverable, clickable }\"\n      v-bind=\"tableAttributes\"\n    >\n      <colgroup v-if=\"'colgroup' in $slots\">\n        <slot name=\"colgroup\" v-bind=\"columnsComputed\" />\n      </colgroup>\n\n      <thead\n        class=\"va-data-table__table-thead\"\n        :class=\"{ 'va-data-table__table-thead--sticky': $props.stickyHeader }\">\n        <slot name=\"headerPrepend\" />\n\n        <tr\n          v-if=\"!hideDefaultHeader\"\n          class=\"va-data-table__table-tr\"\n        >\n          <th\n            v-if=\"selectable\"\n            :class=\"['va-data-table__table-th', 'va-data-table__table-cell-select']\"\n          >\n            <va-checkbox\n              v-if=\"selectMode === 'multiple'\"\n              :model-value=\"severalRowsSelected ? 'idl' : allRowsSelected\"\n              :true-value=\"true\"\n              :false-value=\"false\"\n              indeterminate-value=\"idl\"\n              indeterminate\n              @update:model-value=\"toggleBulkSelection\"\n              :color=\"selectedColor\"\n            />\n          </th>\n\n          <th\n            v-for=\"column in columnsComputed\"\n            :key=\"column.key\"\n            :title=\"column.headerTitle\"\n            @click.exact=\"column.sortable ? toggleSorting(column): () => {}\"\n            :style=\"{ ...getHeaderCSSVariables(column), ...getStyles(column.headerStyle) }\"\n            :class=\"['va-data-table__table-th', ...getClasses(column.headerClasses)]\"\n          >\n            <div class=\"va-data-table__table-th-wrapper\">\n              <span v-if=\"`header(${column.key})` in $slots\">\n                <slot :name=\"`header(${column.key})`\" v-bind=\"column\" />\n              </span>\n\n              <slot v-else name=\"header\" v-bind=\"column\">\n                <span>{{ column.label }}</span>\n              </slot>\n\n              <div\n                v-if=\"column.sortable\"\n                class=\"va-data-table__table-th-sorting\"\n                @selectstart.prevent\n              >\n                <va-icon\n                  :name=\"sortingOrderSync === 'asc' ? 'expand_less' : 'expand_more'\"\n                  size=\"small\"\n                  class=\"va-data-table__table-th-sorting-icon\"\n                  :class=\"{ active: sortBySync === column.key && sortingOrderSync !== null }\"\n                />\n              </div>\n            </div>\n          </th>\n        </tr>\n\n        <slot name=\"headerAppend\" />\n      </thead>\n\n      <tbody\n        v-if=\"$slots.bodyPrepend\"\n        class=\"va-data-table__table-tbody\"\n        :style=\"rowCSSVariables\"\n      >\n        <slot name=\"bodyPrepend\" />\n      </tbody>\n\n      <transition\n        :name=\"animated ? 'table-transition' : null\"\n        appear\n        mode=\"out-in\"\n      >\n        <tbody\n          v-if=\"showNoDataHtml\"\n          key=\"showNoDataHtml\"\n          class=\"va-data-table__table-tbody\"\n          :style=\"rowCSSVariables\"\n        >\n          <tr>\n            <td\n              :colspan=\"columnsComputed.length + (selectable ? 1 : 0)\"\n              v-html=\"noDataHtml\"\n              class=\"no-data\"\n            />\n          </tr>\n        </tbody>\n\n        <tbody\n          v-else-if=\"showNoDataFilteredHtml\"\n          key=\"showNoDataFilteredHtml\"\n          class=\"va-data-table__table-tbody\"\n          :style=\"rowCSSVariables\"\n        >\n          <tr>\n            <td\n              :colspan=\"columnsComputed.length + (selectable ? 1 : 0)\"\n              v-html=\"noDataFilteredHtml\"\n              class=\"no-data\"\n            />\n          </tr>\n        </tbody>\n\n        <tbody\n          v-else\n          key=\"showRows\"\n          class=\"va-data-table__table-tbody\"\n          :style=\"rowCSSVariables\"\n        >\n          <transition-group\n            :name=\"animated ? 'table-transition-rows' : null\"\n            appear\n          >\n            <tr\n              v-for=\"row in rows\"\n              :key=\"`table-row_${row.initialIndex}`\"\n              class=\"va-data-table__table-tr\"\n              :class=\"{ selected: isRowSelected(row) }\"\n              @click=\"onRowClickHandler('row:click', $event, row)\"\n              @dblclick=\"onRowClickHandler('row:dblclick', $event, row)\"\n              @contextmenu=\"onRowClickHandler('row:contextmenu', $event, row)\"\n            >\n              <td\n                v-if=\"selectable\"\n                :class=\"['va-data-table__table-td', 'va-data-table__table-cell-select']\"\n                :key=\"`selectable_${row.initialIndex}`\"\n                @selectstart.prevent\n              >\n                <va-checkbox\n                  :model-value=\"isRowSelected(row)\"\n                  @click.shift.exact=\"shiftSelectRows(row)\"\n                  @click.ctrl.exact=\"ctrlSelectRow(row)\"\n                  @click.exact=\"ctrlSelectRow(row)\"\n                  :color=\"selectedColor\"\n                />\n              </td>\n\n              <td\n                v-for=\"cell in row.cells\"\n                :key=\"`table-cell_${cell.column.key + cell.rowIndex}`\"\n                :style=\"{ ...getCellCSSVariables(cell), ...getStyles(cell.column.style) }\"\n                :class=\"['va-data-table__table-td', ...getClasses(cell.column.classes)]\"\n              >\n                <slot\n                  v-if=\"`cell(${cell.column.key})` in $slots\"\n                  :name=\"`cell(${cell.column.key})`\"\n                  v-bind=\"{ ...cell, cells: row.cells }\"\n                />\n\n                <slot v-else name=\"cell\" v-bind=\"cell\">\n                  {{ cell.value }}\n                </slot>\n              </td>\n            </tr>\n          </transition-group>\n        </tbody>\n      </transition>\n\n      <tbody\n        v-if=\"$slots.bodyAppend\"\n        class=\"va-data-table__table-tbody\"\n        :style=\"rowCSSVariables\"\n      >\n        <slot name=\"bodyAppend\" />\n      </tbody>\n\n      <tfoot v-if=\"footerClone\" class=\"va-data-table__table-tfoot\">\n        <slot name=\"footerPrepend\" />\n\n        <tr v-if=\"!hideDefaultHeader\" class=\"va-data-table__table-tr\">\n          <th v-if=\"selectable\" class=\"va-data-table__table-th\">\n            <va-checkbox\n              v-if=\"selectMode === 'multiple'\"\n              :model-value=\"severalRowsSelected ? 'idl' : allRowsSelected\"\n              :true-value=\"true\"\n              :false-value=\"false\"\n              indeterminate-value=\"idl\"\n              indeterminate\n              @update:model-value=\"toggleBulkSelection\"\n              :color=\"selectedColor\"\n            />\n          </th>\n\n          <th\n            v-for=\"column in columnsComputed\"\n            :key=\"column.key\"\n            :title=\"column.headerTitle\"\n            @click.exact=\"allowFooterSorting && column.sortable ? toggleSorting(column) : () => {}\"\n            :style=\"{ ...getFooterCSSVariables(column), ...getStyles(column.headerStyle) }\"\n            :class=\"['va-data-table__table-th', ...getClasses(column.headerClasses)]\"\n          >\n            <div class=\"va-data-table__table-th-wrapper\">\n              <span v-if=\"`footer(${column.key})` in $slots\">\n                <slot :name=\"`footer(${column.key})`\" v-bind=\"column\" />\n              </span>\n\n              <slot v-else name=\"footer\" v-bind=\"column\">\n                <span>{{ column.label }}</span>\n              </slot>\n\n              <div\n                v-if=\"allowFooterSorting && column.sortable\"\n                class=\"va-data-table__table-th-sorting\"\n                @selectstart.prevent\n              >\n                <va-icon\n                  :name=\"sortingOrderSync === 'asc' ? 'expand_less' : 'expand_more'\"\n                  size=\"small\"\n                  class=\"va-data-table__table-th-sorting-icon\"\n                  :class=\"{ active: sortBySync === column.key && sortingOrderSync !== null }\"\n                />\n              </div>\n            </div>\n          </th>\n        </tr>\n\n        <slot name=\"footerAppend\" />\n      </tfoot>\n    </table>\n  </va-inner-loading>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, HTMLAttributes, PropType, TableHTMLAttributes } from 'vue'\nimport omit from 'lodash/omit'\nimport pick from 'lodash/pick'\nimport VaInnerLoading from '../va-inner-loading'\nimport VaCheckbox from '../va-checkbox'\nimport VaIcon from '../va-icon'\nimport useColumns from './hooks/useColumns'\nimport useRows from './hooks/useRows'\nimport useFilterable from './hooks/useFilterable'\nimport useSortable from './hooks/useSortable'\nimport usePaginatedRows from './hooks/usePaginatedRows'\nimport useSelectableRow from './hooks/useSelectableRow'\nimport useStyleable from './hooks/useStyleable'\nimport {\n  TTableColumnSource,\n  ITableItem,\n  TableRow,\n  TFilterMethod,\n  TSortingOrder,\n  TSelectMode,\n} from './types'\n\ntype emitNames = 'update:modelValue' |\n  'update:sortBy' |\n  'update:sortingOrder' |\n  'filtered' |\n  'sorted' |\n  'selectionChange' |\n  'row:click' |\n  'row:dblclick' |\n  'row:contextmenu'\n\n/*\n  TODO: consider a possibility to lazy-load the hooks with dynamic imports based on respective props' values. E.G.\n\n  if (selectable.value) {\n    const { default: useSelectableRow } = await import(\"./hooks/useSelectableRow\");\n  }\n\n  // Would be a cool feature (if possible at all).\n*/\n\nexport default defineComponent({\n  name: 'VaDataTable',\n\n  components: {\n    VaInnerLoading,\n    VaCheckbox,\n    VaIcon,\n  },\n\n  inheritAttrs: false,\n\n  props: {\n    columns: { type: Array as PropType<TTableColumnSource[]>, default: () => [] as TTableColumnSource[] },\n    items: { type: Array as PropType<ITableItem[]>, default: () => [] as ITableItem[] },\n    modelValue: { type: Array as PropType<ITableItem[]> }, // selectedItems\n    sortingOrder: { type: String as PropType<TSortingOrder> }, // model-able\n    sortBy: { type: String }, // model-able\n    filter: { type: String, default: '' },\n    filterMethod: { type: Function as PropType<TFilterMethod> },\n    hoverable: { type: Boolean, default: false },\n    clickable: { type: Boolean, default: false },\n    animated: { type: Boolean, default: true },\n    selectable: { type: Boolean, default: false },\n    selectMode: { type: String as PropType<TSelectMode>, default: 'multiple' },\n    selectedColor: { type: String, default: 'primary' },\n    perPage: { type: Number },\n    currentPage: { type: Number },\n    loading: { type: Boolean, default: false },\n    loadingColor: { type: String, default: 'primary' },\n    noDataHtml: { type: String, default: 'No items' },\n    noDataFilteredHtml: { type: String, default: 'No items match the provided filtering condition' },\n    hideDefaultHeader: { type: Boolean, default: false },\n    footerClone: { type: Boolean, default: false },\n    allowFooterSorting: { type: Boolean, default: false },\n    striped: { type: Boolean, default: false },\n    stickyHeader: { type: Boolean, default: false },\n    height: { type: [String, Number] as PropType<string | number> },\n  },\n\n  emits: [\n    'update:modelValue', // `modelValue` is selectedItems\n    'update:sortBy',\n    'update:sortingOrder',\n    'filtered',\n    'sorted',\n    'selectionChange',\n    'row:click',\n    'row:dblclick',\n    'row:contextmenu',\n  ],\n\n  setup (props, { attrs, emit }) {\n    const { columnsComputed } = useColumns(props)\n\n    const { rowsComputed } = useRows(columnsComputed, props)\n\n    const { filteredRows } = useFilterable(rowsComputed, props, emit)\n\n    const {\n      sortBySync,\n      sortingOrderSync,\n      toggleSorting,\n      sortedRows,\n    } = useSortable(columnsComputed, filteredRows, props, emit)\n\n    const { paginatedRows } = usePaginatedRows(sortedRows, props)\n\n    const {\n      ctrlSelectRow,\n      shiftSelectRows,\n      toggleBulkSelection,\n      isRowSelected,\n      severalRowsSelected,\n      allRowsSelected,\n    } = useSelectableRow(paginatedRows, props, emit)\n\n    const {\n      getHeaderCSSVariables,\n      rowCSSVariables,\n      getCellCSSVariables,\n      getFooterCSSVariables,\n      getStickyCSSVariables,\n      getClasses,\n      getStyles,\n    } = useStyleable(props)\n\n    const showNoDataHtml = computed(() => props.items.length === 0)\n\n    const showNoDataFilteredHtml = computed(() => paginatedRows.value.length === 0)\n\n    const onRowClickHandler = (name: emitNames, $event: Event, row: TableRow) => {\n      if (props.clickable) {\n        emit(name, {\n          event: $event,\n          item: row.source,\n          itemIndex: row.initialIndex,\n        })\n      }\n    }\n\n    const componentAttributes = computed(() => ({\n      ...pick(attrs, ['class', 'style']),\n    }) as HTMLAttributes)\n\n    const tableAttributes = computed(() => ({\n      ...omit(attrs, ['class', 'style']),\n    }) as TableHTMLAttributes)\n\n    return {\n      columnsComputed,\n      rows: paginatedRows,\n      ctrlSelectRow,\n      shiftSelectRows,\n      toggleBulkSelection,\n      isRowSelected,\n      severalRowsSelected,\n      allRowsSelected,\n      sortBySync,\n      sortingOrderSync,\n      toggleSorting,\n      getHeaderCSSVariables,\n      rowCSSVariables,\n      getCellCSSVariables,\n      getFooterCSSVariables,\n      getStickyCSSVariables,\n      getClasses,\n      getStyles,\n      showNoDataHtml,\n      showNoDataFilteredHtml,\n      onRowClickHandler,\n      componentAttributes,\n      tableAttributes,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import '../../styles/resources/index.scss';\n@import \"variables\";\n// The calculated variables are taken from a respective element's `style` attribute. See the `useStyleable` hook\n\n.va-data-table {\n  overflow-x: auto;\n  overflow-y: hidden;\n  min-width: unset;\n  font-family: var(--va-font-family);\n\n  &--sticky,\n  &--scroll {\n    overflow-y: auto;\n    height: var(--scroll-table-height);\n\n    // 1) doesn't work in Firefox\n    // 2) doesn't disappear on mac (the standard one does)\n    // @include va-scroll(var(--scroll-table-color));\n  }\n\n  .va-data-table__table {\n    width: 100%;\n    cursor: default;\n    white-space: nowrap;\n\n    .va-data-table__table-thead {\n      border-bottom: var(--va-data-table-thead-border);\n\n      &--sticky {\n        position: sticky;\n        top: 0;\n        z-index: 1;\n        background-color: var(--scroll-table-color);\n      }\n    }\n\n    .va-data-table__table-tbody {\n      .no-data {\n        text-align: var(--va-data-table-no-data-text-align);\n        vertical-align: var(--va-data-table-no-data-vertical-align);\n      }\n    }\n\n    .va-data-table__table-tfoot {\n      border-top: var(--va-data-table-thead-border);\n    }\n\n    .va-data-table__table-th {\n      padding: var(--va-data-table-cell-padding);\n      width: var(--width);\n      min-width: var(--width);\n      text-align: var(--align);\n      vertical-align: var(--vertical-align);\n      color: var(--va-data-table-thead-color);\n      font-size: var(--va-data-table-thead-font-size);\n      line-height: var(--va-data-table-thead-line-height);\n      font-weight: var(--va-data-table-thead-font-weight);\n      text-transform: var(--va-data-table-thead-text-transform);\n      letter-spacing: var(--va-data-table-thead-letter-spacing);\n      cursor: var(--cursor);\n\n      .va-data-table__table-th-wrapper {\n        display: flex;\n        align-items: center;\n      }\n\n      .va-data-table__table-th-sorting {\n        justify-self: end;\n        line-height: 1;\n      }\n\n      .va-data-table__table-th-sorting-icon {\n        opacity: 0;\n        user-select: none;\n        pointer-events: none;\n\n        &.active {\n          opacity: 1;\n          pointer-events: initial;\n        }\n      }\n\n      span {\n        flex-grow: 1;\n      }\n\n      &:hover {\n        .va-data-table__table-th-sorting-icon:not(.active) {\n          opacity: var(--va-data-table-hover-th-opacity);\n        }\n      }\n    }\n\n    .va-data-table__table-td {\n      padding: var(--va-data-table-cell-padding);\n      text-align: var(--align);\n      vertical-align: var(--vertical-align);\n    }\n\n    .va-data-table__table-th,\n    .va-data-table__table-td {\n      &.va-data-table__table-cell-select {\n        width: var(--va-data-table-selectable-cell-width);\n        min-width: var(--va-data-table-selectable-cell-width);\n        text-align: var(--va-data-table-selectable-cell-text-align);\n        vertical-align: var(--va-data-table-selectable-cell-vertical-align);\n        cursor: var(--va-data-table-selectable-tr-cursor);\n      }\n    }\n\n    .va-data-table__table-tr {\n      &.selected {\n        background-color: var(--selected-color);\n      }\n    }\n\n    &.clickable {\n      .va-data-table__table-tr {\n        cursor: pointer;\n      }\n    }\n\n    &.striped {\n      .va-data-table__table-tr:nth-child(2n) {\n        &:not(.selected) {\n          background-color: var(--va-light-gray3);\n        }\n      }\n    }\n\n    &.selectable,\n    &.hoverable {\n      .va-data-table__table-tr {\n        &:hover {\n          background-color: var(--hover-color);\n        }\n      }\n\n      .va-data-table__table-tr:nth-child(2n) {\n        &:hover {\n          background-color: var(--hover-color);\n        }\n      }\n    }\n\n    .table-transition-leave-active {\n      transition: opacity var(--va-data-table-transition);\n    }\n\n    .table-transition-enter-active {\n      transition: opacity var(--va-data-table-transition) 0.2s;\n    }\n\n    .table-transition-enter-from,\n    .table-transition-rows-enter-from,\n    .table-transition-leave-to,\n    .table-transition-rows-leave-to {\n      opacity: 0;\n    }\n\n    .table-transition-rows-move {\n      transition: transform var(--va-data-table-transition);\n    }\n\n    .table-transition-rows-leave-active {\n      transition: none;\n    }\n\n    .table-transition-rows-enter-active {\n      transition: opacity var(--va-data-table-transition);\n    }\n  }\n}\n</style>\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\nimport VaDataTable from './VaDataTable.vue'\n\nexport default withConfigTransport(VaDataTable)\n"],"names":["upperFirst","require$$1","startCase_1","require$$0","result","word","index","buildTableColumn","source","initialIndex","input","key","label","startCase","headerTitle","sortable","sortingFn","undefined","alignHead","verticalAlignHead","align","verticalAlign","width","classes","headerClasses","style","headerStyle","useColumns","props","columnsComputed","computed","columns","length","items","Object","keys","merge","map","useSelectableRow","paginatedRows","emit","selectedItemsFallback","ref","selectedItemsSync","get","modelValue","value","set","prevSelectedRowIndex","watch","selectMode","newSelectMode","oldSelectMode","unselectAllRows","setPrevSelectedRowIndex","currentSelectedItems","previousSelectedItems","noRowsSelected","some","includes","allRowsSelected","every","severalRowsSelected","isRowSelected","row","paginatedRowsSource","filter","rowInitialIndex","prevSelectedRow","find","indexOf","toggleRowSelection","selectable","unselectRow","findIndex","selectedItem","slice","selectOnlyRow","selectRow","ctrlSelectRow","shiftSelectRows","mergeSelection","rowsToSelect","rowsToSelectSource","rowSource","Set","getRowsToSelect","targetIndex","start","end","Math","min","max","toggleBulkSelection","selectAllRows","getClasses","computedClasses","getStyles","styles","getColor","getFocusColor","getHoverColor","shiftHSLAColor","useColors","useStyleable","color","selectedColor","getHeaderCSSVariables","column","rowCSSVariables","getCellCSSVariables","cell","getFooterCSSVariables","allowFooterSorting","getStickyCSSVariables","height","stickyHeader","l","defineComponent","name","components","VaInnerLoading","VaCheckbox","VaIcon","inheritAttrs","type","Array","default","sortingOrder","String","sortBy","filterMethod","Function","hoverable","Boolean","clickable","animated","perPage","Number","currentPage","loading","loadingColor","noDataHtml","noDataFilteredHtml","hideDefaultHeader","footerClone","striped","emits","setup","attrs","rowsComputed","useRows","rawItem","cells","rowIndex","toString","buildTableCell","buildTableRow","filteredRows","useFilterable","rawRows","toLowerCase","itemsIndexes","sortBySync","sortingOrderSync","toggleSorting","sortedRows","useSortable","sortByFallback","sortingOrderFallback","columnIndex","sort","a","b","firstValString","secondValString","firstValInitial","secondValInitial","localeCompare","usePaginatedRows","pageStartIndex","showNoDataHtml","showNoDataFilteredHtml","componentAttributes","pick","tableAttributes","omit","rows","onRowClickHandler","$event","event","item","itemIndex","_mergeProps","class","_ctx","_createVNode","_createBlock","_renderSlot","indeterminate","title","onClick","onSelectstart","size","appear","mode","colspan","innerHTML","onDblclick","onContextmenu","bodyPrepend","bodyAppend","withConfigTransport","VaDataTable"],"mappings":"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"}