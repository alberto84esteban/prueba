{"version":3,"file":"VaDatePicker.js","sources":["../../src/components/va-date-picker/hooks/model-value-helper.ts","../../src/components/va-date-picker/hooks/view.ts","../../src/components/va-date-picker/components/VaDayPicker/va-date-picker-calendar-hook.ts","../../src/components/va-date-picker/hooks/grid-keyboard-navigation.ts","../../src/components/va-date-picker/utils/date-utils.ts","../../src/components/va-date-picker/hooks/use-picker.ts","../../src/components/va-date-picker/components/VaDatePickerCell.vue","../../src/components/va-date-picker/components/VaDatePickerCell.vue?vue&type=template&id=1c43554e&lang.js","../../src/components/va-date-picker/components/VaDayPicker/VaDayPicker.vue","../../src/components/va-date-picker/components/VaDayPicker/VaDayPicker.vue?vue&type=template&id=cfaf508c&lang.js","../../src/components/va-date-picker/components/VaDatePickerHeader/VaDatePickerHeader.vue","../../src/components/va-date-picker/components/VaDatePickerHeader/VaDatePickerHeader.vue?vue&type=template&id=0e4bae0c&lang.js","../../src/components/va-date-picker/components/VaMonthPicker/VaMonthPicker.vue","../../src/components/va-date-picker/components/VaMonthPicker/VaMonthPicker.vue?vue&type=template&id=299f7c82&lang.js","../../src/components/va-date-picker/components/VaYearPicker/VaYearPicker.vue","../../src/components/va-date-picker/components/VaYearPicker/VaYearPicker.vue?vue&type=template&id=01d8d4fa&lang.js","../../src/components/va-date-picker/VaDatePicker.vue","../../src/components/va-date-picker/VaDatePicker.vue?vue&type=template&id=efd6986a&lang.js"],"sourcesContent":["import { VaDatePickerModelValue, VaDatePickerModelValuePeriod, VaDatePickerMode } from '../types/types'\n\nexport const isRange = (value: VaDatePickerModelValue): value is VaDatePickerModelValuePeriod => {\n  return typeof (value as any).start !== 'undefined' && typeof (value as any).end !== 'undefined'\n}\nexport const isSingleDate = (value: VaDatePickerModelValue): value is Date => value instanceof Date\nexport const isDates = (value: VaDatePickerModelValue): value is Date[] => Array.isArray(value)\n\nconst modeInitialValue = (date: Date, mode: VaDatePickerMode) => {\n  if (mode === 'single') {\n    return date\n  } else if (mode === 'range') {\n    return { start: date, end: null }\n  } else if (mode === 'multiple') {\n    return [date]\n  } else if (mode === 'auto') {\n    return date\n  }\n\n  throw new Error('Unknown mode')\n}\n\nconst throwIncorrectModelValueError = (modelValue: VaDatePickerModelValue, mode: VaDatePickerMode) : never => {\n  throw Error(`Incorrect modelValue for mode ${mode}. Got ${JSON.stringify(modelValue)}`)\n}\n\nconst modeFromModelValue = (modelValue: VaDatePickerModelValue): VaDatePickerMode => {\n  if (isSingleDate(modelValue)) {\n    return 'single'\n  } else if (isRange(modelValue)) {\n    return 'range'\n  } else if (isDates(modelValue)) {\n    return 'multiple'\n  }\n\n  return throwIncorrectModelValueError(modelValue, 'auto')\n}\n\nconst sortRange = (modelValue: VaDatePickerModelValuePeriod) => {\n  if (modelValue.start && modelValue.end) {\n    if (modelValue.start > modelValue.end) {\n      return { start: modelValue.end, end: modelValue.start }\n    }\n  }\n\n  return modelValue\n}\n\nexport const useDatePickerModelValue = (\n  props: {\n    [key: string]: any,\n    modelValue?: VaDatePickerModelValue,\n    mode: VaDatePickerMode\n  },\n  emit: (event: 'update:modelValue', newValue: VaDatePickerModelValue) => any,\n  dateEqual: (date1: Date | null, date2: Date | null) => boolean,\n) => {\n  const updateModelValue = (date: Date) => {\n    if (!props.modelValue) {\n      emit('update:modelValue', modeInitialValue(date, props.mode))\n      return\n    }\n\n    const mode = props.mode === 'auto' ? modeFromModelValue(props.modelValue) : props.mode\n\n    if (mode === 'single') {\n      if (!isSingleDate(props.modelValue)) {\n        return throwIncorrectModelValueError(props.modelValue, mode)\n      }\n\n      emit('update:modelValue', date)\n    } else if (mode === 'range') {\n      if (!isRange(props.modelValue)) {\n        return throwIncorrectModelValueError(props.modelValue, mode)\n      }\n\n      if (props.modelValue.end && dateEqual(props.modelValue.end, date)) {\n        return emit('update:modelValue', { start: props.modelValue.start, end: null })\n      }\n      if (props.modelValue.start && dateEqual(props.modelValue.start, date)) {\n        return emit('update:modelValue', { start: null, end: props.modelValue.end })\n      }\n\n      if (props.modelValue.end === null) {\n        return emit('update:modelValue', sortRange({ start: props.modelValue.start, end: date }))\n      }\n      if (props.modelValue.start === null) {\n        return emit('update:modelValue', sortRange({ end: props.modelValue.end, start: date }))\n      }\n\n      emit('update:modelValue', { start: date, end: null })\n    } else if (mode === 'multiple') {\n      if (!isDates(props.modelValue)) {\n        return throwIncorrectModelValueError(props.modelValue, mode)\n      }\n\n      const isDatesIncludesDate = !!props.modelValue.find((d) => dateEqual(d, date))\n\n      if (isDatesIncludesDate) {\n        emit('update:modelValue', props.modelValue.filter((d) => !dateEqual(d, date)))\n      } else {\n        emit('update:modelValue', [...props.modelValue, date].sort((a, b) => a.getTime() - b.getTime()))\n      }\n    }\n  }\n\n  return {\n    updateModelValue,\n  }\n}\n","import { VaDatePickerView, VaDatePickerViewProp } from './../types/types'\nimport { computed, ref } from 'vue'\n\nconst JANUARY_MONTH_INDEX = 0\nconst DECEMBER_MONTH_INDEX = 11\n\nconst addMonth = (view: VaDatePickerView) => {\n  if (view.month === DECEMBER_MONTH_INDEX) {\n    return { ...view, year: view.year + 1, month: JANUARY_MONTH_INDEX }\n  } else {\n    return { ...view, month: view.month + 1 }\n  }\n}\n\nconst subMonth = (view: VaDatePickerView) => {\n  if (view.month === JANUARY_MONTH_INDEX) {\n    return { ...view, year: view.year - 1, month: DECEMBER_MONTH_INDEX }\n  } else {\n    return { ...view, month: view.month - 1 }\n  }\n}\n\nexport const useView = (\n  props: { [key: string]: any, 'view'?: VaDatePickerViewProp },\n  emit: (event: any | 'update:view', newValue: VaDatePickerViewProp) => any,\n  defaultOverride?: VaDatePickerViewProp,\n) => {\n  const defaultView: VaDatePickerView = {\n    type: 'day',\n    year: new Date().getFullYear(),\n    month: new Date().getMonth(),\n    ...defaultOverride,\n  }\n\n  const statefulView = ref(defaultView)\n\n  const syncView = computed<VaDatePickerView>({\n    get () {\n      // Merge default view and user view prop\n      return { ...statefulView.value, ...props.view }\n    },\n    set (view: VaDatePickerView) {\n      statefulView.value = view\n\n      emit('update:view', view)\n    },\n  })\n\n  const next = () => {\n    if (syncView.value.type === 'day') {\n      syncView.value = addMonth(syncView.value)\n    } else if (syncView.value.type === 'month') {\n      syncView.value = { ...syncView.value, year: syncView.value.year + 1 }\n    }\n  }\n\n  const prev = () => {\n    if (syncView.value.type === 'day') {\n      syncView.value = subMonth(syncView.value)\n    } else if (syncView.value.type === 'month') {\n      syncView.value = { ...syncView.value, year: syncView.value.year - 1 }\n    }\n  }\n\n  return {\n    syncView,\n    next,\n    prev,\n  }\n}\n","import { computed, Ref } from 'vue'\nimport { VaDatePickerView } from '../../types/types'\n\n/** Returns last day of previous month */\nexport const getMonthDaysCount = (year: number, month: number): number => new Date(year, month + 1, 0).getDate()\n\nexport const getMonthStartWeekday = (year: number, month: number) => new Date(year, month, 1).getDay()\n\n/** Returns array from 1 to length */\nexport const getNumbersArray = (length: number) => Array.from(Array(length).keys()).map((k) => k + 1)\n\nexport const useVaDatePickerCalendar = (view: Ref<VaDatePickerView>, options?: { firstWeekday?: Ref<'Monday' | 'Sunday'> }) => {\n  const CALENDAR_ROWS_COUNT = 6 // Need 6 rows if first day of a month is Saturday and the last day is Monday 31th.\n\n  const localizeWeekday = (weekdayNumber: number) => {\n    if (options && options.firstWeekday?.value === 'Monday') {\n      // Set Sunday as 7th day of the week and Monday as first day of the week.\n      return weekdayNumber === 0 ? 6 : weekdayNumber - 1\n    }\n\n    return weekdayNumber\n  }\n\n  const currentMonthStartWeekday = computed(() => localizeWeekday(getMonthStartWeekday(view.value.year, view.value.month)))\n\n  const getPreviousDates = () => {\n    if (currentMonthStartWeekday.value === 0) { return [] }\n\n    const prevMonthDaysCount = getMonthDaysCount(view.value.year, view.value.month - 1)\n    const prevMonthDays: number[] = getNumbersArray(prevMonthDaysCount)\n\n    return prevMonthDays\n      .slice(-currentMonthStartWeekday.value)\n      .map((d) => new Date(view.value.year, view.value.month - 1, d))\n  }\n\n  const getCurrentDates = () => {\n    const currentMonthDays: number[] = getNumbersArray(getMonthDaysCount(view.value.year, view.value.month))\n\n    return currentMonthDays.map((d) => new Date(view.value.year, view.value.month, d))\n  }\n\n  const prevAndCurrentDays = computed(() => [...getPreviousDates(), ...getCurrentDates()])\n  const currentMonthEndIndex = computed(() => prevAndCurrentDays.value.length)\n\n  const calendarDates = computed(() => {\n    const days = prevAndCurrentDays.value\n\n    const daysRemaining = 7 * CALENDAR_ROWS_COUNT - days.length\n\n    const nextMonthDaysCount = getMonthDaysCount(view.value.year, view.value.month + 1)\n    const nextMonthDays: number[] = getNumbersArray(nextMonthDaysCount)\n\n    return [\n      ...days,\n      ...nextMonthDays\n        .slice(0, daysRemaining)\n        .map((d) => new Date(view.value.year, view.value.month + 1, d)),\n    ]\n  })\n\n  return { calendarDates, currentMonthStartIndex: currentMonthStartWeekday, currentMonthEndIndex }\n}\n","import { ref, Ref, isRef, unref } from 'vue'\n\nfunction safeUnref<T> (refOrRaw: Ref<T> | T): T {\n  if (isRef(refOrRaw)) {\n    return unref(refOrRaw)\n  }\n\n  return refOrRaw\n}\n\nfunction isUndefined<T> (t: T | undefined): t is undefined {\n  return t === undefined\n}\n\nexport const useGridKeyboardNavigation = (\n  {\n    rowSize,\n    start,\n    end,\n    onSelected,\n    onFocusIndex,\n  }: {\n    rowSize: number,\n    start?: Ref<number> | number,\n    end?: Ref<number> | number,\n    onFocusIndex?: Ref<number> | number,\n    onSelected?: (selectedValue: number) => any | null,\n  },\n) => {\n  const focusedCellIndex = ref(-1)\n\n  let previouslyClicked = false\n  const onMousedown = () => { previouslyClicked = true }\n\n  const onFocus = () => {\n    if (previouslyClicked) { return }\n    previouslyClicked = false\n\n    const index = onFocusIndex === undefined ? safeUnref(start) || 0 : safeUnref(onFocusIndex)\n\n    focusedCellIndex.value = index\n  }\n\n  const onBlur = () => {\n    previouslyClicked = false\n\n    focusedCellIndex.value = -1\n  }\n\n  const onKeydown = (e: KeyboardEvent) => {\n    if (['ArrowRight', 'ArrowLeft', 'ArrowDown', 'ArrowUp', 'Enter', 'Space'].includes(e.key)) {\n      // Prevent default for arrow keys and enter. Do not prevent default for tab! :)\n      e.preventDefault()\n    }\n\n    if (e.key === 'Enter' || e.key === 'Space') {\n      if (onSelected === undefined) { return }\n\n      onSelected(focusedCellIndex.value)\n      return\n    }\n\n    if (e.key === 'ArrowRight') {\n      focusedCellIndex.value += 1\n    }\n    if (e.key === 'ArrowLeft') {\n      focusedCellIndex.value -= 1\n    }\n    if (e.key === 'ArrowDown') {\n      focusedCellIndex.value += rowSize\n    }\n    if (e.key === 'ArrowUp') {\n      focusedCellIndex.value -= rowSize\n    }\n\n    if (!isUndefined(start) && focusedCellIndex.value < safeUnref(start)) {\n      focusedCellIndex.value = safeUnref(start)\n    }\n    if (!isUndefined(end) && focusedCellIndex.value > safeUnref(end) - 1) {\n      focusedCellIndex.value = safeUnref(end) - 1\n    }\n  }\n\n  const containerAttributes = {\n    onFocus, onKeydown, onBlur, onMousedown, tabindex: 0,\n  }\n\n  return {\n    focusedCellIndex, containerAttributes,\n  }\n}\n","\nexport const isDatesDayEqual = (date1: Date | null, date2: Date | null): boolean => date1?.toDateString() === date2?.toDateString()\n\nexport const isDatesMonthEqual = (date1: Date | null, date2: Date | null): boolean => {\n  return date1?.getFullYear() === date2?.getFullYear() && date1?.getMonth() === date2?.getMonth()\n}\n\nexport const isDatesYearEqual = (date1: Date | null, date2: Date | null): boolean => {\n  return date1?.getFullYear() === date2?.getFullYear()\n}\n\nexport const createYearDate = (year: number) => {\n  const date = new Date()\n  date.setFullYear(year)\n  return date\n}\n\nexport const isDatesArrayIncludeDay = (dates: Date[], date: Date): boolean => {\n  return !!dates.find((d) => isDatesDayEqual(d, date))\n}\n\nexport const isDatesArrayIncludeMonth = (dates: Date[], date: Date): boolean => {\n  return !!dates.find((d) => isDatesMonthEqual(d, date))\n}\n","import { isDatesMonthEqual, isDatesDayEqual, isDatesYearEqual } from './../utils/date-utils'\nimport { VaDatePickerMode, VaDatePickerModelValue, VaDatePickerType } from '../types/types'\nimport { isDates, isRange, isSingleDate, useDatePickerModelValue } from './model-value-helper'\nimport { computed, ComputedRef, ref, watch } from 'vue'\n\nconst getDateEqualFunction = (type: VaDatePickerType) => {\n  return {\n    month: isDatesMonthEqual,\n    day: isDatesDayEqual,\n    year: isDatesYearEqual,\n  }[type]\n}\n\nexport const useDatePicker = (\n  type: VaDatePickerType,\n  dates: ComputedRef<Date[]>,\n  props: {\n    [key: string]: any,\n    modelValue?: VaDatePickerModelValue,\n    mode: VaDatePickerMode,\n  },\n  emit: (\n    event: 'update:modelValue' | any,\n    ...args: any[]\n  ) => any,\n) => {\n  const datesEqual = getDateEqualFunction(type)\n\n  const hoveredIndex = ref(0)\n  const hoveredValue = computed(() => dates.value[hoveredIndex.value])\n\n  const { updateModelValue } = useDatePickerModelValue(\n    props,\n    emit,\n    datesEqual,\n  )\n\n  const onClick = (date: Date) => {\n    updateModelValue(date)\n    emit(`click:${type}`, date)\n  }\n\n  const isToday = (date: Date): boolean => {\n    const today = new Date()\n    return datesEqual(today, date)\n  }\n\n  const isSelected = (date: Date): boolean => {\n    if (!props.modelValue) { return false }\n\n    if (isSingleDate(props.modelValue)) {\n      return datesEqual(props.modelValue, date)\n    } else if (isDates(props.modelValue)) {\n      return !!props.modelValue.find((d) => datesEqual(d, date))\n    } else if (isRange(props.modelValue)) {\n      return datesEqual(props.modelValue.start, date) || datesEqual(props.modelValue.end, date)\n    }\n\n    return false\n  }\n\n  const isInRange = (date: Date): boolean => {\n    if (!props.modelValue) { return false }\n\n    if (!isRange(props.modelValue)) { return false }\n\n    if (props.modelValue.start && props.modelValue.end) {\n      return props.modelValue.start < date && props.modelValue.end > date\n    }\n\n    const selectedDate = props.modelValue.start || props.modelValue.end\n\n    if (selectedDate) {\n      if (!hoveredValue.value) { return false }\n\n      return selectedDate < date\n        ? (hoveredValue.value >= date)\n        : (hoveredValue.value <= date)\n    }\n\n    return false\n  }\n\n  watch(hoveredValue, (date) => { emit(`hover:${type}`, date) })\n\n  return {\n    hoveredIndex,\n    hoveredValue,\n    onClick,\n    isToday,\n    isSelected,\n    isInRange,\n  }\n}\n","<template>\n  <div\n    v-if=\"hidden\"\n    class=\"va-date-picker-cell va-date-picker-cell_clear\"\n  />\n  <div\n    v-else\n    class=\"va-date-picker-cell\"\n    :class=\"{\n      'va-date-picker-cell_other-month': otherMonth,\n      'va-date-picker-cell_today': highlightToday && today,\n      'va-date-picker-cell_in-range': inRange,\n      'va-date-picker-cell_disabled': disabled,\n      'va-date-picker-cell_highlighted-weekend': highlightWeekend && weekend,\n      'va-date-picker-cell_selected': selected,\n      'va-date-picker-cell_focused': focused,\n      'va-date-picker-cell_readonly': readonly,\n    }\"\n    @click=\"onClick\"\n    @keypress.space.enter.prevent.stop=\"onClick\"\n  >\n    <slot />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\n\nexport default defineComponent({\n  name: 'VaDatePickerCell',\n\n  props: {\n    otherMonth: { type: Boolean, default: false },\n    today: { type: Boolean, default: false },\n    inRange: { type: Boolean, default: false },\n    disabled: { type: Boolean, default: false },\n    selected: { type: Boolean, default: false },\n    weekend: { type: Boolean, default: false },\n    hidden: { type: Boolean, default: false },\n    focused: { type: Boolean, default: false },\n    highlightWeekend: { type: Boolean, default: false },\n    highlightToday: { type: Boolean, default: false },\n    readonly: { type: Boolean, default: false },\n  },\n\n  emits: ['click'],\n\n  setup (props, { emit }) {\n    const onClick = () => {\n      if (!props.disabled) { emit('click') }\n    }\n\n    return {\n      onClick,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n.va-date-picker-cell {\n  position: relative;\n  color: var(--va-date-picker-text-color);\n  font-style: normal;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: var(--va-date-picker-cell-size);\n  min-height: var(--va-date-picker-cell-size);\n  min-width: var(--va-date-picker-cell-size);\n  cursor: pointer;\n  user-select: none;\n  border-radius: var(--va-date-picker-cell-radius);\n  box-sizing: border-box;\n  text-align: center;\n  z-index: 1;\n\n  &::after,\n  &::before {\n    content: '';\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    left: 0;\n    z-index: -1;\n    user-select: none;\n    box-sizing: border-box;\n    border-radius: var(--va-date-picker-cell-radius);\n  }\n\n  &_clear {\n    cursor: default;\n    opacity: 0;\n  }\n\n  &_highlighted-weekend { color: var(--va-date-picker-weekends-color); }\n\n  &_selected {\n    background-color: var(--va-date-picker-selected-background);\n    color: var(--va-date-picker-selected-text);\n  }\n\n  &_in-range {\n    &::before {\n      border: 2px solid var(--va-date-picker-color);\n      opacity: 0.5;\n    }\n  }\n\n  &_today {\n    color: var(--va-date-picker-today-text);\n\n    &::after {\n      background-color: var(--va-date-picker-today-background);\n      opacity: var(--va-date-picker-today-background-opacity);\n    }\n  }\n\n  &_selected.va-date-picker-cell_today {\n    &::before {\n      border: 2px solid var(--va-date-picker-selected-text);\n      opacity: 1;\n    }\n\n    &::after {\n      opacity: 1;\n    }\n  }\n\n  &_other-month {\n    opacity: 0.5;\n  }\n\n  &:hover,\n  &_focused,\n  &_focused:hover {\n    $focus-border-opacity: 0.8;\n\n    &::before {\n      border: 2px solid var(--va-date-picker-focused-border-color);\n      opacity: $focus-border-opacity;\n    }\n\n    &.va-date-picker-cell_selected {\n      &::before {\n        width: calc(100% - 4px);\n        height: calc(100% - 4px);\n        transform: translateY(2px) translateX(2px);\n        padding: 2px;\n        border: 2px solid var(--va-date-picker-focused-selected-border-color);\n        opacity: $focus-border-opacity;\n      }\n\n      &.va-date-picker-cell_today {\n        &::after {\n          opacity: 0;\n        }\n      }\n    }\n  }\n\n  &_disabled {\n    cursor: default;\n    color: var(--va-date-picker-secondary);\n    opacity: 0.5;\n\n    &::after {\n      // Crossline\n      opacity: 0.5;\n      border: none;\n      height: 2px;\n      width: 50%;\n      background: var(--va-date-picker-secondary);\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n    }\n\n    &.va-date-picker-cell_today {\n      color: var(--va-date-picker-today-text);\n\n      &::after {\n        background: var(--va-date-picker-today-text);\n      }\n\n      &::before {\n        background-color: var(--va-date-picker-today-background);\n        opacity: var(--va-date-picker-today-background-opacity);\n      }\n    }\n  }\n\n  &_readonly {\n    cursor: default;\n\n    &::before {\n      display: none;\n    }\n  }\n}\n</style>\n","<template>\n  <div\n    v-if=\"hidden\"\n    class=\"va-date-picker-cell va-date-picker-cell_clear\"\n  />\n  <div\n    v-else\n    class=\"va-date-picker-cell\"\n    :class=\"{\n      'va-date-picker-cell_other-month': otherMonth,\n      'va-date-picker-cell_today': highlightToday && today,\n      'va-date-picker-cell_in-range': inRange,\n      'va-date-picker-cell_disabled': disabled,\n      'va-date-picker-cell_highlighted-weekend': highlightWeekend && weekend,\n      'va-date-picker-cell_selected': selected,\n      'va-date-picker-cell_focused': focused,\n      'va-date-picker-cell_readonly': readonly,\n    }\"\n    @click=\"onClick\"\n    @keypress.space.enter.prevent.stop=\"onClick\"\n  >\n    <slot />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\n\nexport default defineComponent({\n  name: 'VaDatePickerCell',\n\n  props: {\n    otherMonth: { type: Boolean, default: false },\n    today: { type: Boolean, default: false },\n    inRange: { type: Boolean, default: false },\n    disabled: { type: Boolean, default: false },\n    selected: { type: Boolean, default: false },\n    weekend: { type: Boolean, default: false },\n    hidden: { type: Boolean, default: false },\n    focused: { type: Boolean, default: false },\n    highlightWeekend: { type: Boolean, default: false },\n    highlightToday: { type: Boolean, default: false },\n    readonly: { type: Boolean, default: false },\n  },\n\n  emits: ['click'],\n\n  setup (props, { emit }) {\n    const onClick = () => {\n      if (!props.disabled) { emit('click') }\n    }\n\n    return {\n      onClick,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n.va-date-picker-cell {\n  position: relative;\n  color: var(--va-date-picker-text-color);\n  font-style: normal;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: var(--va-date-picker-cell-size);\n  min-height: var(--va-date-picker-cell-size);\n  min-width: var(--va-date-picker-cell-size);\n  cursor: pointer;\n  user-select: none;\n  border-radius: var(--va-date-picker-cell-radius);\n  box-sizing: border-box;\n  text-align: center;\n  z-index: 1;\n\n  &::after,\n  &::before {\n    content: '';\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    left: 0;\n    z-index: -1;\n    user-select: none;\n    box-sizing: border-box;\n    border-radius: var(--va-date-picker-cell-radius);\n  }\n\n  &_clear {\n    cursor: default;\n    opacity: 0;\n  }\n\n  &_highlighted-weekend { color: var(--va-date-picker-weekends-color); }\n\n  &_selected {\n    background-color: var(--va-date-picker-selected-background);\n    color: var(--va-date-picker-selected-text);\n  }\n\n  &_in-range {\n    &::before {\n      border: 2px solid var(--va-date-picker-color);\n      opacity: 0.5;\n    }\n  }\n\n  &_today {\n    color: var(--va-date-picker-today-text);\n\n    &::after {\n      background-color: var(--va-date-picker-today-background);\n      opacity: var(--va-date-picker-today-background-opacity);\n    }\n  }\n\n  &_selected.va-date-picker-cell_today {\n    &::before {\n      border: 2px solid var(--va-date-picker-selected-text);\n      opacity: 1;\n    }\n\n    &::after {\n      opacity: 1;\n    }\n  }\n\n  &_other-month {\n    opacity: 0.5;\n  }\n\n  &:hover,\n  &_focused,\n  &_focused:hover {\n    $focus-border-opacity: 0.8;\n\n    &::before {\n      border: 2px solid var(--va-date-picker-focused-border-color);\n      opacity: $focus-border-opacity;\n    }\n\n    &.va-date-picker-cell_selected {\n      &::before {\n        width: calc(100% - 4px);\n        height: calc(100% - 4px);\n        transform: translateY(2px) translateX(2px);\n        padding: 2px;\n        border: 2px solid var(--va-date-picker-focused-selected-border-color);\n        opacity: $focus-border-opacity;\n      }\n\n      &.va-date-picker-cell_today {\n        &::after {\n          opacity: 0;\n        }\n      }\n    }\n  }\n\n  &_disabled {\n    cursor: default;\n    color: var(--va-date-picker-secondary);\n    opacity: 0.5;\n\n    &::after {\n      // Crossline\n      opacity: 0.5;\n      border: none;\n      height: 2px;\n      width: 50%;\n      background: var(--va-date-picker-secondary);\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n    }\n\n    &.va-date-picker-cell_today {\n      color: var(--va-date-picker-today-text);\n\n      &::after {\n        background: var(--va-date-picker-today-text);\n      }\n\n      &::before {\n        background-color: var(--va-date-picker-today-background);\n        opacity: var(--va-date-picker-today-background-opacity);\n      }\n    }\n  }\n\n  &_readonly {\n    cursor: default;\n\n    &::before {\n      display: none;\n    }\n  }\n}\n</style>\n","<template>\n  <div class=\"va-day-picker\" v-bind=\"containerAttributes\">\n    <template v-if=\"!hideWeekDays\">\n      <div\n        v-for=\"weekday in weekdayNamesComputed\" :key=\"weekday\"\n        class=\"va-day-picker__weekday\"\n      >\n        <slot name=\"weekday\">\n          {{ weekday }}\n        </slot>\n      </div>\n    </template>\n\n    <div\n      class=\"va-day-picker__calendar__day-wrapper\"\n      v-for=\"(date, index) in calendarDates\"\n      :key=\"index\"\n      @mouseenter=\"hoveredIndex = index\"\n      @mouseleave=\"hoveredIndex = -1\"\n    >\n      <va-date-picker-cell\n        :hidden=\"isOtherMonth(date) && !showOtherMonths\"\n        :today=\"isToday(date)\"\n        :selected=\"isSelected(date)\"\n        :in-range=\"isInRange(date)\"\n        :other-month=\"isOtherMonth(date)\"\n        :weekend=\"isDateWeekend(date)\"\n        :disabled=\"isDateDisabled(date)\"\n        :focused=\"hoveredIndex === index\"\n        :highlight-today=\"highlightToday\"\n        :highlight-weekend=\"highlightWeekend\"\n        :readonly=\"readonly\"\n        @click=\"onClick(date); focusedCellIndex = index\"\n      >\n        <span class=\"va-date-picker-cell__day\">\n          <slot name=\"day\" v-bind=\"{ date }\">\n            {{ date.getDate() }}\n          </slot>\n        </span>\n      </va-date-picker-cell>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, toRefs, PropType, watch } from 'vue'\nimport { useVaDatePickerCalendar } from './va-date-picker-calendar-hook'\nimport { VaDatePickerMode, VaDatePickerModelValue, VaDatePickerView } from '../../types/types'\nimport { extractComponentProps, filterComponentProps } from '../../../../utils/child-props'\nimport { useGridKeyboardNavigation } from '../../hooks/grid-keyboard-navigation'\nimport { useDatePicker } from '../../hooks/use-picker'\nimport VaDatePickerCell from '../VaDatePickerCell.vue'\n\nconst VaDatePickerCellProps = extractComponentProps(VaDatePickerCell, ['date', 'selectedValue', 'focusedDate', 'focused'])\n\nexport default defineComponent({\n  name: 'VaDayPicker',\n\n  components: { VaDatePickerCell },\n\n  props: {\n    ...VaDatePickerCellProps,\n    monthNames: { type: Array as PropType<string[]>, required: true },\n    weekdayNames: { type: Array as PropType<string[]>, required: true },\n    firstWeekday: { type: String as PropType<'Monday' | 'Sunday'>, default: 'Sunday' },\n    hideWeekDays: { type: Boolean, default: false },\n    view: { type: Object as PropType<VaDatePickerView>, default: () => ({ type: 'day' }) },\n    modelValue: { type: [Date, Array, Object] as PropType<VaDatePickerModelValue> },\n    mode: { type: String as PropType<VaDatePickerMode>, default: 'auto' },\n    showOtherMonths: { type: Boolean, default: false },\n    allowedDays: { type: Function as PropType<(date: Date) => boolean> },\n    weekends: { type: [Function] as PropType<(d: Date) => boolean> },\n    highlightWeekend: { type: Boolean, default: false },\n    highlightToday: { type: Boolean, default: false },\n    readonly: { type: Boolean, default: false },\n  },\n\n  emits: ['update:modelValue', 'hover:day', 'click:day'],\n\n  setup (props, { emit }) {\n    const { firstWeekday, weekdayNames, view } = toRefs(props)\n\n    const VaDayPickerCellPropValues = filterComponentProps(props, VaDatePickerCellProps)\n\n    const { calendarDates, currentMonthStartIndex, currentMonthEndIndex } = useVaDatePickerCalendar(view, { firstWeekday })\n\n    const weekdayNamesComputed = computed(() => {\n      return firstWeekday.value === 'Sunday'\n        ? weekdayNames.value\n        : [...weekdayNames.value.slice(1), weekdayNames.value[0]]\n    })\n\n    const {\n      hoveredIndex,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange,\n    } = useDatePicker('day', calendarDates, props, emit)\n\n    const gridStartIndex = computed(() => props.showOtherMonths ? 0 : currentMonthStartIndex.value)\n    const gridEndIndex = computed(() => props.showOtherMonths ? calendarDates.value.length : currentMonthEndIndex.value)\n\n    const {\n      focusedCellIndex, containerAttributes,\n    } = useGridKeyboardNavigation({\n      rowSize: 7,\n      start: gridStartIndex,\n      end: gridEndIndex,\n      onSelected: (selectedValue) => onClick(calendarDates.value[selectedValue]),\n    })\n\n    watch(focusedCellIndex, (index) => { hoveredIndex.value = index })\n    watch(hoveredIndex, (index) => { focusedCellIndex.value = index })\n\n    const isOtherMonth = (date: Date) => props.view.month !== date.getMonth()\n    const isDateDisabled = (date: Date) => props.allowedDays === undefined ? false : !props.allowedDays(date)\n    const isDateWeekend = (date: Date) => {\n      if (props.weekends === undefined) {\n        return date.getDay() === 6 || date.getDay() === 0 // 0 - Sunday, 6 - Saturday\n      }\n\n      return props.weekends(date)\n    }\n\n    return {\n      hoveredIndex,\n      calendarDates,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange,\n      isOtherMonth,\n      isDateDisabled,\n      isDateWeekend,\n      containerAttributes,\n      weekdayNamesComputed,\n      VaDayPickerCellPropValues,\n      focusedCellIndex,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n.va-day-picker {\n  display: grid;\n  // 7 columns\n  grid-template-columns: repeat(7, 1fr);\n  grid-gap: var(--va-date-picker-cell-gap);\n\n  &__weekday {\n    text-align: center;\n    font-size: 9px;\n    color: var(--va-secondary);\n    font-weight: bold;\n    height: var(--va-date-picker-cell-size);\n    line-height: var(--va-date-picker-cell-size);\n  }\n}\n</style>\n","<template>\n  <div class=\"va-day-picker\" v-bind=\"containerAttributes\">\n    <template v-if=\"!hideWeekDays\">\n      <div\n        v-for=\"weekday in weekdayNamesComputed\" :key=\"weekday\"\n        class=\"va-day-picker__weekday\"\n      >\n        <slot name=\"weekday\">\n          {{ weekday }}\n        </slot>\n      </div>\n    </template>\n\n    <div\n      class=\"va-day-picker__calendar__day-wrapper\"\n      v-for=\"(date, index) in calendarDates\"\n      :key=\"index\"\n      @mouseenter=\"hoveredIndex = index\"\n      @mouseleave=\"hoveredIndex = -1\"\n    >\n      <va-date-picker-cell\n        :hidden=\"isOtherMonth(date) && !showOtherMonths\"\n        :today=\"isToday(date)\"\n        :selected=\"isSelected(date)\"\n        :in-range=\"isInRange(date)\"\n        :other-month=\"isOtherMonth(date)\"\n        :weekend=\"isDateWeekend(date)\"\n        :disabled=\"isDateDisabled(date)\"\n        :focused=\"hoveredIndex === index\"\n        :highlight-today=\"highlightToday\"\n        :highlight-weekend=\"highlightWeekend\"\n        :readonly=\"readonly\"\n        @click=\"onClick(date); focusedCellIndex = index\"\n      >\n        <span class=\"va-date-picker-cell__day\">\n          <slot name=\"day\" v-bind=\"{ date }\">\n            {{ date.getDate() }}\n          </slot>\n        </span>\n      </va-date-picker-cell>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, toRefs, PropType, watch } from 'vue'\nimport { useVaDatePickerCalendar } from './va-date-picker-calendar-hook'\nimport { VaDatePickerMode, VaDatePickerModelValue, VaDatePickerView } from '../../types/types'\nimport { extractComponentProps, filterComponentProps } from '../../../../utils/child-props'\nimport { useGridKeyboardNavigation } from '../../hooks/grid-keyboard-navigation'\nimport { useDatePicker } from '../../hooks/use-picker'\nimport VaDatePickerCell from '../VaDatePickerCell.vue'\n\nconst VaDatePickerCellProps = extractComponentProps(VaDatePickerCell, ['date', 'selectedValue', 'focusedDate', 'focused'])\n\nexport default defineComponent({\n  name: 'VaDayPicker',\n\n  components: { VaDatePickerCell },\n\n  props: {\n    ...VaDatePickerCellProps,\n    monthNames: { type: Array as PropType<string[]>, required: true },\n    weekdayNames: { type: Array as PropType<string[]>, required: true },\n    firstWeekday: { type: String as PropType<'Monday' | 'Sunday'>, default: 'Sunday' },\n    hideWeekDays: { type: Boolean, default: false },\n    view: { type: Object as PropType<VaDatePickerView>, default: () => ({ type: 'day' }) },\n    modelValue: { type: [Date, Array, Object] as PropType<VaDatePickerModelValue> },\n    mode: { type: String as PropType<VaDatePickerMode>, default: 'auto' },\n    showOtherMonths: { type: Boolean, default: false },\n    allowedDays: { type: Function as PropType<(date: Date) => boolean> },\n    weekends: { type: [Function] as PropType<(d: Date) => boolean> },\n    highlightWeekend: { type: Boolean, default: false },\n    highlightToday: { type: Boolean, default: false },\n    readonly: { type: Boolean, default: false },\n  },\n\n  emits: ['update:modelValue', 'hover:day', 'click:day'],\n\n  setup (props, { emit }) {\n    const { firstWeekday, weekdayNames, view } = toRefs(props)\n\n    const VaDayPickerCellPropValues = filterComponentProps(props, VaDatePickerCellProps)\n\n    const { calendarDates, currentMonthStartIndex, currentMonthEndIndex } = useVaDatePickerCalendar(view, { firstWeekday })\n\n    const weekdayNamesComputed = computed(() => {\n      return firstWeekday.value === 'Sunday'\n        ? weekdayNames.value\n        : [...weekdayNames.value.slice(1), weekdayNames.value[0]]\n    })\n\n    const {\n      hoveredIndex,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange,\n    } = useDatePicker('day', calendarDates, props, emit)\n\n    const gridStartIndex = computed(() => props.showOtherMonths ? 0 : currentMonthStartIndex.value)\n    const gridEndIndex = computed(() => props.showOtherMonths ? calendarDates.value.length : currentMonthEndIndex.value)\n\n    const {\n      focusedCellIndex, containerAttributes,\n    } = useGridKeyboardNavigation({\n      rowSize: 7,\n      start: gridStartIndex,\n      end: gridEndIndex,\n      onSelected: (selectedValue) => onClick(calendarDates.value[selectedValue]),\n    })\n\n    watch(focusedCellIndex, (index) => { hoveredIndex.value = index })\n    watch(hoveredIndex, (index) => { focusedCellIndex.value = index })\n\n    const isOtherMonth = (date: Date) => props.view.month !== date.getMonth()\n    const isDateDisabled = (date: Date) => props.allowedDays === undefined ? false : !props.allowedDays(date)\n    const isDateWeekend = (date: Date) => {\n      if (props.weekends === undefined) {\n        return date.getDay() === 6 || date.getDay() === 0 // 0 - Sunday, 6 - Saturday\n      }\n\n      return props.weekends(date)\n    }\n\n    return {\n      hoveredIndex,\n      calendarDates,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange,\n      isOtherMonth,\n      isDateDisabled,\n      isDateWeekend,\n      containerAttributes,\n      weekdayNamesComputed,\n      VaDayPickerCellPropValues,\n      focusedCellIndex,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n.va-day-picker {\n  display: grid;\n  // 7 columns\n  grid-template-columns: repeat(7, 1fr);\n  grid-gap: var(--va-date-picker-cell-gap);\n\n  &__weekday {\n    text-align: center;\n    font-size: 9px;\n    color: var(--va-secondary);\n    font-weight: bold;\n    height: var(--va-date-picker-cell-size);\n    line-height: var(--va-date-picker-cell-size);\n  }\n}\n</style>\n","<template>\n  <div class=\"va-date-picker-header va-date-picker__header\" v-if=\"syncView.type !== 'year'\">\n    <slot name=\"buttonPrev\" v-bind=\"{ onClick: prev }\">\n      <va-button icon=\"chevron_left\" flat size=\"small\" :color=\"color\" @click=\"prev\" />\n    </slot>\n\n    <div class=\"va-date-picker-header__text\">\n      <slot name=\"header\" v-bind=\"{ year: syncView.year, month: syncView.month, monthNames, view: syncView, changeView, switchView }\">\n        <va-button flat @click=\"switchView\" size=\"small\" :color=\"color\">\n          <span class=\"mr-1\">\n            <slot name=\"year\" v-bind=\"{ year: syncView.year }\">{{ syncView.year }}</slot>\n          </span>\n\n          <slot v-if=\"syncView.type === 'day'\" name=\"month\" v-bind=\"{ month: syncView.month }\">{{ monthNames[syncView.month] }}</slot>\n        </va-button>\n      </slot>\n    </div>\n\n    <slot name=\"buttonNext\" v-bind=\"{ onClick: next }\">\n      <va-button icon=\"chevron_right\" flat size=\"small\" :color=\"color\" @click=\"next\" />\n    </slot>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType } from 'vue'\nimport { VaDatePickerView } from '../../types/types'\nimport { useView } from '../../hooks/view'\nimport VaButton from '../../../va-button'\n\nexport default defineComponent({\n  name: 'VaDatePickerHeader',\n\n  components: { VaButton },\n\n  emits: ['update:view'],\n\n  props: {\n    monthNames: { type: Array, required: true },\n    view: { type: Object as PropType<VaDatePickerView> },\n\n    // Colors\n    color: { type: String, default: undefined },\n  },\n\n  setup (props, { emit }) {\n    const { syncView, prev, next } = useView(props, emit)\n\n    const switchView = () => {\n      if (syncView.value.type === 'day') {\n        syncView.value = { ...syncView.value, type: 'month' }\n      } else if (syncView.value.type === 'month') {\n        syncView.value = { ...syncView.value, type: 'year' }\n      }\n    }\n\n    const changeView = (view: VaDatePickerView) => {\n      syncView.value = view\n    }\n\n    return { prev, next, changeView, switchView, syncView }\n  },\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.va-date-picker {\n  &__header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    &__text {\n      color: var(--va-dark);\n      font-family: Source Sans Pro;\n      font-style: normal;\n      font-weight: 600;\n      font-size: 12px;\n      line-height: 15px;\n    }\n  }\n}\n</style>\n","<template>\n  <div class=\"va-date-picker-header va-date-picker__header\" v-if=\"syncView.type !== 'year'\">\n    <slot name=\"buttonPrev\" v-bind=\"{ onClick: prev }\">\n      <va-button icon=\"chevron_left\" flat size=\"small\" :color=\"color\" @click=\"prev\" />\n    </slot>\n\n    <div class=\"va-date-picker-header__text\">\n      <slot name=\"header\" v-bind=\"{ year: syncView.year, month: syncView.month, monthNames, view: syncView, changeView, switchView }\">\n        <va-button flat @click=\"switchView\" size=\"small\" :color=\"color\">\n          <span class=\"mr-1\">\n            <slot name=\"year\" v-bind=\"{ year: syncView.year }\">{{ syncView.year }}</slot>\n          </span>\n\n          <slot v-if=\"syncView.type === 'day'\" name=\"month\" v-bind=\"{ month: syncView.month }\">{{ monthNames[syncView.month] }}</slot>\n        </va-button>\n      </slot>\n    </div>\n\n    <slot name=\"buttonNext\" v-bind=\"{ onClick: next }\">\n      <va-button icon=\"chevron_right\" flat size=\"small\" :color=\"color\" @click=\"next\" />\n    </slot>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType } from 'vue'\nimport { VaDatePickerView } from '../../types/types'\nimport { useView } from '../../hooks/view'\nimport VaButton from '../../../va-button'\n\nexport default defineComponent({\n  name: 'VaDatePickerHeader',\n\n  components: { VaButton },\n\n  emits: ['update:view'],\n\n  props: {\n    monthNames: { type: Array, required: true },\n    view: { type: Object as PropType<VaDatePickerView> },\n\n    // Colors\n    color: { type: String, default: undefined },\n  },\n\n  setup (props, { emit }) {\n    const { syncView, prev, next } = useView(props, emit)\n\n    const switchView = () => {\n      if (syncView.value.type === 'day') {\n        syncView.value = { ...syncView.value, type: 'month' }\n      } else if (syncView.value.type === 'month') {\n        syncView.value = { ...syncView.value, type: 'year' }\n      }\n    }\n\n    const changeView = (view: VaDatePickerView) => {\n      syncView.value = view\n    }\n\n    return { prev, next, changeView, switchView, syncView }\n  },\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.va-date-picker {\n  &__header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    &__text {\n      color: var(--va-dark);\n      font-family: Source Sans Pro;\n      font-style: normal;\n      font-weight: 600;\n      font-size: 12px;\n      line-height: 15px;\n    }\n  }\n}\n</style>\n","<template>\n  <div class=\"va-month-picker\" v-bind=\"containerAttributes\">\n    <div\n      class=\"va-month-picker__month-wrapper\"\n      v-for=\"(month, monthIndex) in months\"\n      :key=\"monthIndex\"\n      @mouseenter=\"hoveredIndex = monthIndex\"\n      @mouseleave=\"hoveredIndex = -1\"\n    >\n      <va-date-picker-cell\n        :in-range=\"!!isInRange(month)\"\n        :selected=\"!!isSelected(month)\"\n        :disabled=\"!!isDisabled(month)\"\n        :today=\"!!isToday(month)\"\n        :focused=\"hoveredIndex === monthIndex\"\n        :highlight-today=\"highlightToday\"\n        :readonly=\"readonly\"\n        @click=\"onClick(month); focusedCellIndex = monthIndex\"\n      >\n        <slot name=\"month\" v-bind=\"{ monthIndex, month: monthNames[monthIndex] }\">\n          {{ monthNames[monthIndex] }}\n        </slot>\n      </va-date-picker-cell>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, PropType, toRefs, watch } from 'vue'\nimport { VaDatePickerMode, VaDatePickerView, VaDatePickerModelValue } from '../../types/types'\nimport VaDatePickerCell from '../VaDatePickerCell.vue'\nimport { useGridKeyboardNavigation } from '../../hooks/grid-keyboard-navigation'\nimport { useDatePicker } from '../../hooks/use-picker'\n\nexport default defineComponent({\n  name: 'VaMonthPicker',\n\n  components: { VaDatePickerCell },\n\n  props: {\n    modelValue: { type: [Date, Array, Object] as PropType<VaDatePickerModelValue> },\n    monthNames: { type: Array as PropType<string[]>, required: true },\n    view: { type: Object as PropType<VaDatePickerView>, default: () => ({ type: 'month' }) },\n    allowedMonths: { type: Function as PropType<(date: Date) => boolean>, default: undefined },\n    highlightToday: { type: Boolean, default: true },\n    mode: { type: String as PropType<VaDatePickerMode>, default: 'auto' },\n    readonly: { type: Boolean, default: false },\n  },\n\n  emits: ['update:modelValue', 'hover:month', 'click:month'],\n\n  setup (props, { emit }) {\n    const { view } = toRefs(props)\n\n    const months = computed(() => Array.from(Array(12).keys()).map((month) => new Date(view.value.year, month)))\n\n    const {\n      hoveredIndex,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange,\n    } = useDatePicker('month', months, props, emit)\n\n    const isDisabled = (date: Date) => props.allowedMonths === undefined ? false : !props.allowedMonths(date)\n\n    const {\n      focusedCellIndex, containerAttributes,\n    } = useGridKeyboardNavigation({\n      rowSize: 3,\n      start: 0,\n      end: months.value.length,\n      onSelected: (selectedIndex) => onClick(months.value[selectedIndex]),\n    })\n\n    watch(focusedCellIndex, (index) => { hoveredIndex.value = index })\n    watch(hoveredIndex, (index) => { focusedCellIndex.value = index })\n\n    return {\n      months,\n      hoveredIndex,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange,\n      isDisabled,\n      containerAttributes,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n.va-month-picker {\n  display: grid;\n  // 4 columns\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: var(--va-date-picker-cell-gap);\n  // 7 days + gap\n  min-width: calc(var(--va-date-picker-cell-size) * 7 + var(--va-date-picker-cell-gap) * 6);\n  width: 100%;\n\n  &__month-wrapper {\n    padding: 1px;\n    border-radius: 6px;\n    text-align: center;\n    user-select: none;\n    overflow: hidden;\n  }\n\n  &__month {\n    color: var(--va-secondary);\n    font-style: normal;\n    font-weight: bold;\n    font-size: 12px;\n    height: var(--va-date-picker-cell-size);\n    line-height: var(--va-date-picker-cell-size);\n    position: relative;\n  }\n}\n</style>\n","<template>\n  <div class=\"va-month-picker\" v-bind=\"containerAttributes\">\n    <div\n      class=\"va-month-picker__month-wrapper\"\n      v-for=\"(month, monthIndex) in months\"\n      :key=\"monthIndex\"\n      @mouseenter=\"hoveredIndex = monthIndex\"\n      @mouseleave=\"hoveredIndex = -1\"\n    >\n      <va-date-picker-cell\n        :in-range=\"!!isInRange(month)\"\n        :selected=\"!!isSelected(month)\"\n        :disabled=\"!!isDisabled(month)\"\n        :today=\"!!isToday(month)\"\n        :focused=\"hoveredIndex === monthIndex\"\n        :highlight-today=\"highlightToday\"\n        :readonly=\"readonly\"\n        @click=\"onClick(month); focusedCellIndex = monthIndex\"\n      >\n        <slot name=\"month\" v-bind=\"{ monthIndex, month: monthNames[monthIndex] }\">\n          {{ monthNames[monthIndex] }}\n        </slot>\n      </va-date-picker-cell>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, PropType, toRefs, watch } from 'vue'\nimport { VaDatePickerMode, VaDatePickerView, VaDatePickerModelValue } from '../../types/types'\nimport VaDatePickerCell from '../VaDatePickerCell.vue'\nimport { useGridKeyboardNavigation } from '../../hooks/grid-keyboard-navigation'\nimport { useDatePicker } from '../../hooks/use-picker'\n\nexport default defineComponent({\n  name: 'VaMonthPicker',\n\n  components: { VaDatePickerCell },\n\n  props: {\n    modelValue: { type: [Date, Array, Object] as PropType<VaDatePickerModelValue> },\n    monthNames: { type: Array as PropType<string[]>, required: true },\n    view: { type: Object as PropType<VaDatePickerView>, default: () => ({ type: 'month' }) },\n    allowedMonths: { type: Function as PropType<(date: Date) => boolean>, default: undefined },\n    highlightToday: { type: Boolean, default: true },\n    mode: { type: String as PropType<VaDatePickerMode>, default: 'auto' },\n    readonly: { type: Boolean, default: false },\n  },\n\n  emits: ['update:modelValue', 'hover:month', 'click:month'],\n\n  setup (props, { emit }) {\n    const { view } = toRefs(props)\n\n    const months = computed(() => Array.from(Array(12).keys()).map((month) => new Date(view.value.year, month)))\n\n    const {\n      hoveredIndex,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange,\n    } = useDatePicker('month', months, props, emit)\n\n    const isDisabled = (date: Date) => props.allowedMonths === undefined ? false : !props.allowedMonths(date)\n\n    const {\n      focusedCellIndex, containerAttributes,\n    } = useGridKeyboardNavigation({\n      rowSize: 3,\n      start: 0,\n      end: months.value.length,\n      onSelected: (selectedIndex) => onClick(months.value[selectedIndex]),\n    })\n\n    watch(focusedCellIndex, (index) => { hoveredIndex.value = index })\n    watch(hoveredIndex, (index) => { focusedCellIndex.value = index })\n\n    return {\n      months,\n      hoveredIndex,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange,\n      isDisabled,\n      containerAttributes,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n.va-month-picker {\n  display: grid;\n  // 4 columns\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: var(--va-date-picker-cell-gap);\n  // 7 days + gap\n  min-width: calc(var(--va-date-picker-cell-size) * 7 + var(--va-date-picker-cell-gap) * 6);\n  width: 100%;\n\n  &__month-wrapper {\n    padding: 1px;\n    border-radius: 6px;\n    text-align: center;\n    user-select: none;\n    overflow: hidden;\n  }\n\n  &__month {\n    color: var(--va-secondary);\n    font-style: normal;\n    font-weight: bold;\n    font-size: 12px;\n    height: var(--va-date-picker-cell-size);\n    line-height: var(--va-date-picker-cell-size);\n    position: relative;\n  }\n}\n</style>\n","<template>\n  <div\n    class=\"va-year-picker\"\n    ref=\"rootNode\"\n    v-bind=\"containerAttributes\"\n    @keydown.space.prevent\n  >\n    <va-date-picker-cell\n      v-for=\"(year, index) in years\"\n      :key=\"year\"\n      :in-range=\"isInRange(year)\"\n      :selected=\"isSelected(year)\"\n      :disabled=\"isYearDisabled(year)\"\n      :today=\"isToday(year)\"\n      :focused=\"focusedCellIndex === index\"\n      :highlight-today=\"highlightToday\"\n      :readonly=\"readonly\"\n      @click=\"onClick(year); focusedCellIndex = index\"\n      @mouseenter=\"hoveredIndex = index\"\n      @mouseleave=\"hoveredIndex = -1\"\n    >\n      {{ year.getFullYear() }}\n    </va-date-picker-cell>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, toRefs, onMounted, ref, computed, watch } from 'vue'\nimport { VaDatePickerMode, VaDatePickerModelValue, VaDatePickerView } from '../../types/types'\nimport VaDatePickerCell from '../VaDatePickerCell.vue'\nimport { createYearDate, isDatesYearEqual } from '../../utils/date-utils'\nimport { useGridKeyboardNavigation } from '../../hooks/grid-keyboard-navigation'\nimport { useDatePicker } from '../../hooks/use-picker'\n\nexport default defineComponent({\n  name: 'VaYearPicker',\n  components: { VaDatePickerCell },\n\n  props: {\n    modelValue: { type: [Date, Array, Object] as PropType<VaDatePickerModelValue> },\n    allowedYears: { type: Function as PropType<(date: Date) => boolean>, default: undefined },\n    highlightToday: { type: Boolean, default: true },\n    mode: { type: String as PropType<VaDatePickerMode>, default: 'auto' },\n    view: { type: Object as PropType<VaDatePickerView>, default: () => ({ type: 'year' }) },\n    startYear: { type: Number, default: () => 1970 },\n    endYear: { type: Number, default: () => new Date().getFullYear() + 50 },\n    readonly: { type: Boolean, default: false },\n  },\n\n  emits: ['update:modelValue', 'hover:year', 'click:year'],\n\n  setup (props, { emit }) {\n    const { view } = toRefs(props)\n    const rootNode = ref<HTMLElement | null>(null)\n\n    const generateYearsArray = (start: number, end: number) => {\n      const yearsCount = end - start + 1\n      return Array.from(Array(yearsCount).keys())\n        .map((i) => createYearDate(start + i))\n    }\n\n    const years = computed(() => generateYearsArray(props.startYear, props.endYear))\n\n    const scrollIntoYearIndex = (index: number) => {\n      if (!rootNode.value) { return }\n\n      const scrollHeight = rootNode.value.scrollHeight\n      const rootNodeHeight = rootNode.value.offsetHeight\n      const currentYearOffset = scrollHeight / years.value.length * index\n      const cellSize = scrollHeight / years.value.length\n      const relativeScrollPosition = currentYearOffset - rootNode.value.scrollTop\n\n      if (relativeScrollPosition < 0) {\n        // First element in view\n        rootNode.value.scrollTo({ top: currentYearOffset })\n      } else if (relativeScrollPosition > rootNodeHeight) {\n        // Last element in view\n        rootNode.value.scrollTo({ top: currentYearOffset - rootNodeHeight + cellSize })\n      }\n    }\n\n    const scrollIntoYearIndexCenter = (index: number) => {\n      if (!rootNode.value) { return }\n\n      const scrollHeight = rootNode.value.scrollHeight\n      const rootNodeHeight = rootNode.value.offsetHeight\n      const currentYearOffset = scrollHeight / years.value.length * index\n\n      rootNode.value.scrollTo({ top: currentYearOffset - rootNodeHeight / 2 })\n    }\n\n    onMounted(() => {\n      const currentYearIndex = years.value.findIndex((date) => date.getFullYear() === view.value.year)\n\n      scrollIntoYearIndexCenter(currentYearIndex)\n    })\n\n    const {\n      hoveredIndex,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange,\n    } = useDatePicker('year', years, props, emit)\n\n    const isYearDisabled = (year: Date) => props.allowedYears === undefined ? false : !props.allowedYears(year)\n\n    const {\n      focusedCellIndex, containerAttributes,\n    } = useGridKeyboardNavigation({\n      rowSize: 1,\n      start: 0,\n      end: years.value.length,\n      onFocusIndex: computed(() => years.value.findIndex((date) => date.getFullYear() === view.value.year)),\n      onSelected: (selectedIndex) => onClick(years.value[selectedIndex]),\n    })\n\n    watch(focusedCellIndex, (index) => index !== -1 && scrollIntoYearIndex(index))\n    watch(focusedCellIndex, (index) => { hoveredIndex.value = index })\n    watch(hoveredIndex, (index) => { focusedCellIndex.value = index })\n\n    return {\n      hoveredIndex,\n      years,\n      rootNode,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange,\n      isYearDisabled,\n      focusedCellIndex,\n      containerAttributes,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n.va-year-picker {\n  display: flex;\n  flex-direction: column;\n  overflow: auto;\n  grid-gap: var(--va-date-picker-cell-gap);\n  max-height: 100%;\n  position: relative;\n\n  .va-year-picker-cell {\n    width: 100%;\n    height: 30px;\n  }\n}\n</style>\n","<template>\n  <div\n    class=\"va-year-picker\"\n    ref=\"rootNode\"\n    v-bind=\"containerAttributes\"\n    @keydown.space.prevent\n  >\n    <va-date-picker-cell\n      v-for=\"(year, index) in years\"\n      :key=\"year\"\n      :in-range=\"isInRange(year)\"\n      :selected=\"isSelected(year)\"\n      :disabled=\"isYearDisabled(year)\"\n      :today=\"isToday(year)\"\n      :focused=\"focusedCellIndex === index\"\n      :highlight-today=\"highlightToday\"\n      :readonly=\"readonly\"\n      @click=\"onClick(year); focusedCellIndex = index\"\n      @mouseenter=\"hoveredIndex = index\"\n      @mouseleave=\"hoveredIndex = -1\"\n    >\n      {{ year.getFullYear() }}\n    </va-date-picker-cell>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, toRefs, onMounted, ref, computed, watch } from 'vue'\nimport { VaDatePickerMode, VaDatePickerModelValue, VaDatePickerView } from '../../types/types'\nimport VaDatePickerCell from '../VaDatePickerCell.vue'\nimport { createYearDate, isDatesYearEqual } from '../../utils/date-utils'\nimport { useGridKeyboardNavigation } from '../../hooks/grid-keyboard-navigation'\nimport { useDatePicker } from '../../hooks/use-picker'\n\nexport default defineComponent({\n  name: 'VaYearPicker',\n  components: { VaDatePickerCell },\n\n  props: {\n    modelValue: { type: [Date, Array, Object] as PropType<VaDatePickerModelValue> },\n    allowedYears: { type: Function as PropType<(date: Date) => boolean>, default: undefined },\n    highlightToday: { type: Boolean, default: true },\n    mode: { type: String as PropType<VaDatePickerMode>, default: 'auto' },\n    view: { type: Object as PropType<VaDatePickerView>, default: () => ({ type: 'year' }) },\n    startYear: { type: Number, default: () => 1970 },\n    endYear: { type: Number, default: () => new Date().getFullYear() + 50 },\n    readonly: { type: Boolean, default: false },\n  },\n\n  emits: ['update:modelValue', 'hover:year', 'click:year'],\n\n  setup (props, { emit }) {\n    const { view } = toRefs(props)\n    const rootNode = ref<HTMLElement | null>(null)\n\n    const generateYearsArray = (start: number, end: number) => {\n      const yearsCount = end - start + 1\n      return Array.from(Array(yearsCount).keys())\n        .map((i) => createYearDate(start + i))\n    }\n\n    const years = computed(() => generateYearsArray(props.startYear, props.endYear))\n\n    const scrollIntoYearIndex = (index: number) => {\n      if (!rootNode.value) { return }\n\n      const scrollHeight = rootNode.value.scrollHeight\n      const rootNodeHeight = rootNode.value.offsetHeight\n      const currentYearOffset = scrollHeight / years.value.length * index\n      const cellSize = scrollHeight / years.value.length\n      const relativeScrollPosition = currentYearOffset - rootNode.value.scrollTop\n\n      if (relativeScrollPosition < 0) {\n        // First element in view\n        rootNode.value.scrollTo({ top: currentYearOffset })\n      } else if (relativeScrollPosition > rootNodeHeight) {\n        // Last element in view\n        rootNode.value.scrollTo({ top: currentYearOffset - rootNodeHeight + cellSize })\n      }\n    }\n\n    const scrollIntoYearIndexCenter = (index: number) => {\n      if (!rootNode.value) { return }\n\n      const scrollHeight = rootNode.value.scrollHeight\n      const rootNodeHeight = rootNode.value.offsetHeight\n      const currentYearOffset = scrollHeight / years.value.length * index\n\n      rootNode.value.scrollTo({ top: currentYearOffset - rootNodeHeight / 2 })\n    }\n\n    onMounted(() => {\n      const currentYearIndex = years.value.findIndex((date) => date.getFullYear() === view.value.year)\n\n      scrollIntoYearIndexCenter(currentYearIndex)\n    })\n\n    const {\n      hoveredIndex,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange,\n    } = useDatePicker('year', years, props, emit)\n\n    const isYearDisabled = (year: Date) => props.allowedYears === undefined ? false : !props.allowedYears(year)\n\n    const {\n      focusedCellIndex, containerAttributes,\n    } = useGridKeyboardNavigation({\n      rowSize: 1,\n      start: 0,\n      end: years.value.length,\n      onFocusIndex: computed(() => years.value.findIndex((date) => date.getFullYear() === view.value.year)),\n      onSelected: (selectedIndex) => onClick(years.value[selectedIndex]),\n    })\n\n    watch(focusedCellIndex, (index) => index !== -1 && scrollIntoYearIndex(index))\n    watch(focusedCellIndex, (index) => { hoveredIndex.value = index })\n    watch(hoveredIndex, (index) => { focusedCellIndex.value = index })\n\n    return {\n      hoveredIndex,\n      years,\n      rootNode,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange,\n      isYearDisabled,\n      focusedCellIndex,\n      containerAttributes,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n.va-year-picker {\n  display: flex;\n  flex-direction: column;\n  overflow: auto;\n  grid-gap: var(--va-date-picker-cell-gap);\n  max-height: 100%;\n  position: relative;\n\n  .va-year-picker-cell {\n    width: 100%;\n    height: 30px;\n  }\n}\n</style>\n","<template>\n  <div class=\"va-date-picker\" :class=\"classComputed\" :style=\"colorsStyle\">\n    <va-date-picker-header\n      v-bind=\"headerProps\"\n      v-model:view=\"syncView\"\n    >\n      <template v-for=\"(_, name) in $slots\" v-slot:[name]=\"bind\">\n        <slot :name=\"name\" v-bind=\"bind\" />\n      </template>\n    </va-date-picker-header>\n\n    <div class=\"va-date-picker__picker-wrapper\">\n      <va-day-picker\n        v-if=\"syncView.type === 'day'\"\n        v-bind=\"dayPickerProps\"\n        ref=\"currentPicker\"\n        :model-value=\"valueComputed\"\n        :view=\"syncView\"\n        :readonly=\"isPickerReadonly('day')\"\n        @update:model-value=\"onDayModelValueUpdate\"\n        @hover:day=\"(value) => $emit('hover:day', value)\"\n        @click:day=\"(value) => $emit('click:day', value)\"\n      >\n        <template v-for=\"(_, name) in $slots\" v-slot:[name]=\"bind\">\n          <slot :name=\"name\" v-bind=\"bind\" />\n        </template>\n      </va-day-picker>\n\n      <va-month-picker\n        v-if=\"syncView.type === 'month'\"\n        v-bind=\"monthPickerProps\"\n        ref=\"currentPicker\"\n        :view=\"syncView\"\n        :model-value=\"valueComputed\"\n        :readonly=\"isPickerReadonly('month')\"\n        @update:model-value=\"onMonthModelValueUpdate\"\n        @hover:month=\"(value) => $emit('hover:month', value)\"\n        @click:month=\"onMonthClick\"\n      >\n        <template v-for=\"(_, name) in $slots\" v-slot:[name]=\"bind\">\n          <slot :name=\"name\" v-bind=\"bind\" />\n        </template>\n      </va-month-picker>\n\n      <va-year-picker\n        v-if=\"syncView.type === 'year'\"\n        v-bind=\"yearPickerProps\"\n        ref=\"currentPicker\"\n        :view=\"syncView\"\n        :model-value=\"valueComputed\"\n        :readonly=\"isPickerReadonly('year')\"\n        @hover:year=\"(value) => $emit('hover:year', value)\"\n        @update:model-value=\"onYearModelValueUpdate\"\n        @click:year=\"onYearClick\"\n      >\n        <template v-for=\"(_, name) in $slots\" v-slot:[name]=\"bind\">\n          <slot :name=\"name\" v-bind=\"bind\" />\n        </template>\n      </va-year-picker>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { ComponentOptions, computed, defineComponent, nextTick, PropType, ref, watch } from 'vue'\nimport { useStateful, useStatefulProps, useStatefulEmits } from '../../composables/useStateful'\nimport { useColors } from '../../services/color-config/color-config'\n\nimport { VaDatePickerModelValue, VaDatePickerType, VaDatePickerView } from './types/types'\nimport { filterComponentProps, extractComponentProps, extractComponentEmits } from '../../utils/child-props'\nimport { useView } from './hooks/view'\n\nimport VaDayPicker from './components/VaDayPicker/VaDayPicker.vue'\nimport VaDatePickerHeader from './components/VaDatePickerHeader/VaDatePickerHeader.vue'\nimport VaMonthPicker from './components/VaMonthPicker/VaMonthPicker.vue'\nimport VaYearPicker from './components/VaYearPicker/VaYearPicker.vue'\n\nconst DEFAULT_MONTH_NAMES = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\nconst DEFAULT_WEEKDAY_NAMES = ['SU', 'MO', 'TU', 'WE', 'TH', 'FR', 'SA']\n\nexport default defineComponent({\n  name: 'VaDatePicker',\n\n  components: { VaDayPicker, VaDatePickerHeader, VaMonthPicker, VaYearPicker },\n\n  props: {\n    ...useStatefulProps,\n    ...extractComponentProps(VaDatePickerHeader),\n    ...extractComponentProps(VaDayPicker),\n    ...extractComponentProps(VaMonthPicker),\n    ...extractComponentProps(VaYearPicker),\n    modelValue: { type: [Date, Array, Object] as PropType<VaDatePickerModelValue | undefined> },\n    monthNames: { type: Array as PropType<string[]>, required: false, default: DEFAULT_MONTH_NAMES },\n    weekdayNames: { type: Array as PropType<string[]>, required: false, default: DEFAULT_WEEKDAY_NAMES },\n    view: { type: Object as PropType<VaDatePickerView> },\n    type: { type: String as PropType<VaDatePickerType>, default: 'day' },\n    readonly: { type: Boolean, default: false },\n    disabled: { type: Boolean, default: false },\n\n    // Colors\n    color: { type: String, default: undefined },\n    weekendsColor: { type: String, default: undefined },\n  },\n\n  emits: [\n    ...useStatefulEmits,\n    ...extractComponentEmits(VaDatePickerHeader),\n    ...extractComponentEmits(VaYearPicker),\n    ...extractComponentEmits(VaDayPicker),\n    ...extractComponentEmits(VaMonthPicker),\n  ],\n\n  setup (props, { emit }) {\n    const { valueComputed } = useStateful(props, emit)\n\n    const { syncView } = useView(props, emit, { type: props.type })\n\n    const classComputed = computed(() => ({\n      'va-date-picker_without-week-days': props.hideWeekDays,\n      'va-date-picker_disabled': props.disabled,\n    }))\n\n    const onDayModelValueUpdate = (modelValue: VaDatePickerModelValue) => {\n      if (props.readonly) { return }\n\n      // Do not update model value if we just want to change view (We can change it for now, but later we can add here timepicker)\n      if (props.type === 'day') { valueComputed.value = modelValue }\n    }\n\n    const onMonthClick = (date: Date) => {\n      emit('click:month', date)\n      const year = date.getFullYear()\n      const month = date.getMonth()\n      if (props.type !== 'month') {\n        syncView.value = { type: 'day', year, month }\n      }\n    }\n\n    const onMonthModelValueUpdate = (modelValue: VaDatePickerModelValue) => {\n      // Do not update model value if we just want to change view\n      if (props.type === 'month') { valueComputed.value = modelValue }\n    }\n\n    const onYearClick = (date : Date) => {\n      emit('click:year', date)\n\n      const year = date.getFullYear()\n\n      if (props.type !== 'year') {\n        syncView.value = { type: 'month', year, month: syncView.value.month }\n      }\n    }\n\n    const onYearModelValueUpdate = (modelValue: VaDatePickerModelValue) => {\n      // Do not update model value if we just want to change view\n      if (props.type === 'year') { valueComputed.value = modelValue }\n    }\n\n    const { colorsToCSSVariable } = useColors()\n\n    const colorsStyle = colorsToCSSVariable({\n      color: props.color,\n      'weekends-color': props.weekendsColor,\n    }, 'va-date-picker')\n\n    const currentPicker = ref<ComponentOptions | null>(null)\n\n    watch(syncView, (newValue, prevValue) => {\n      // Don't focus new picker if user does not change type\n      if (newValue.type === prevValue.type) { return }\n\n      nextTick(() => {\n        if (currentPicker.value) { currentPicker.value.$el.focus() }\n      })\n    })\n\n    const isPickerReadonly = (pickerName: 'year' | 'month' | 'day') => {\n      return props.readonly && props.type === pickerName\n    }\n\n    return {\n      dayPickerProps: filterComponentProps(props, extractComponentProps(VaDayPicker)),\n      headerProps: filterComponentProps(props, extractComponentProps(VaDatePickerHeader)),\n      monthPickerProps: filterComponentProps(props, extractComponentProps(VaMonthPicker)),\n      yearPickerProps: filterComponentProps(props, extractComponentProps(VaYearPicker)),\n\n      syncView,\n\n      classComputed,\n      valueComputed,\n\n      onDayModelValueUpdate,\n\n      onMonthClick,\n      onMonthModelValueUpdate,\n\n      onYearClick,\n      onYearModelValueUpdate,\n\n      colorsStyle,\n      currentPicker,\n\n      isPickerReadonly,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import 'variables';\n\n.va-date-picker {\n  --va-date-picker-content-height: calc(var(--va-date-picker-cell-size) * 7 + var(--va-date-picker-cell-gap) * 6);\n\n  width: calc(var(--va-date-picker-cell-size) * 7 + var(--va-date-picker-cell-gap) * 6);\n  font-family: var(--va-font-family);\n\n  &__picker-wrapper {\n    height: var(--va-date-picker-content-height);\n  }\n\n  &_without-week-days {\n    --va-date-picker-content-height: calc(var(--va-date-picker-cell-size) * 6 + var(--va-date-picker-cell-gap) * 6);\n  }\n\n  &_mobile {\n    .va-day-picker,\n    .va-month-picker,\n    .va-year-picker {\n      height: 100%;\n    }\n  }\n\n  &_disabled {\n    opacity: 0.4;\n    position: relative;\n\n    &::before {\n      content: '';\n      position: absolute;\n      height: 100%;\n      width: 100%;\n      z-index: 100;\n    }\n  }\n}\n\n.va-date-picker-header {\n  padding-bottom: 0.25rem;\n}\n</style>\n","<template>\n  <div class=\"va-date-picker\" :class=\"classComputed\" :style=\"colorsStyle\">\n    <va-date-picker-header\n      v-bind=\"headerProps\"\n      v-model:view=\"syncView\"\n    >\n      <template v-for=\"(_, name) in $slots\" v-slot:[name]=\"bind\">\n        <slot :name=\"name\" v-bind=\"bind\" />\n      </template>\n    </va-date-picker-header>\n\n    <div class=\"va-date-picker__picker-wrapper\">\n      <va-day-picker\n        v-if=\"syncView.type === 'day'\"\n        v-bind=\"dayPickerProps\"\n        ref=\"currentPicker\"\n        :model-value=\"valueComputed\"\n        :view=\"syncView\"\n        :readonly=\"isPickerReadonly('day')\"\n        @update:model-value=\"onDayModelValueUpdate\"\n        @hover:day=\"(value) => $emit('hover:day', value)\"\n        @click:day=\"(value) => $emit('click:day', value)\"\n      >\n        <template v-for=\"(_, name) in $slots\" v-slot:[name]=\"bind\">\n          <slot :name=\"name\" v-bind=\"bind\" />\n        </template>\n      </va-day-picker>\n\n      <va-month-picker\n        v-if=\"syncView.type === 'month'\"\n        v-bind=\"monthPickerProps\"\n        ref=\"currentPicker\"\n        :view=\"syncView\"\n        :model-value=\"valueComputed\"\n        :readonly=\"isPickerReadonly('month')\"\n        @update:model-value=\"onMonthModelValueUpdate\"\n        @hover:month=\"(value) => $emit('hover:month', value)\"\n        @click:month=\"onMonthClick\"\n      >\n        <template v-for=\"(_, name) in $slots\" v-slot:[name]=\"bind\">\n          <slot :name=\"name\" v-bind=\"bind\" />\n        </template>\n      </va-month-picker>\n\n      <va-year-picker\n        v-if=\"syncView.type === 'year'\"\n        v-bind=\"yearPickerProps\"\n        ref=\"currentPicker\"\n        :view=\"syncView\"\n        :model-value=\"valueComputed\"\n        :readonly=\"isPickerReadonly('year')\"\n        @hover:year=\"(value) => $emit('hover:year', value)\"\n        @update:model-value=\"onYearModelValueUpdate\"\n        @click:year=\"onYearClick\"\n      >\n        <template v-for=\"(_, name) in $slots\" v-slot:[name]=\"bind\">\n          <slot :name=\"name\" v-bind=\"bind\" />\n        </template>\n      </va-year-picker>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { ComponentOptions, computed, defineComponent, nextTick, PropType, ref, watch } from 'vue'\nimport { useStateful, useStatefulProps, useStatefulEmits } from '../../composables/useStateful'\nimport { useColors } from '../../services/color-config/color-config'\n\nimport { VaDatePickerModelValue, VaDatePickerType, VaDatePickerView } from './types/types'\nimport { filterComponentProps, extractComponentProps, extractComponentEmits } from '../../utils/child-props'\nimport { useView } from './hooks/view'\n\nimport VaDayPicker from './components/VaDayPicker/VaDayPicker.vue'\nimport VaDatePickerHeader from './components/VaDatePickerHeader/VaDatePickerHeader.vue'\nimport VaMonthPicker from './components/VaMonthPicker/VaMonthPicker.vue'\nimport VaYearPicker from './components/VaYearPicker/VaYearPicker.vue'\n\nconst DEFAULT_MONTH_NAMES = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\nconst DEFAULT_WEEKDAY_NAMES = ['SU', 'MO', 'TU', 'WE', 'TH', 'FR', 'SA']\n\nexport default defineComponent({\n  name: 'VaDatePicker',\n\n  components: { VaDayPicker, VaDatePickerHeader, VaMonthPicker, VaYearPicker },\n\n  props: {\n    ...useStatefulProps,\n    ...extractComponentProps(VaDatePickerHeader),\n    ...extractComponentProps(VaDayPicker),\n    ...extractComponentProps(VaMonthPicker),\n    ...extractComponentProps(VaYearPicker),\n    modelValue: { type: [Date, Array, Object] as PropType<VaDatePickerModelValue | undefined> },\n    monthNames: { type: Array as PropType<string[]>, required: false, default: DEFAULT_MONTH_NAMES },\n    weekdayNames: { type: Array as PropType<string[]>, required: false, default: DEFAULT_WEEKDAY_NAMES },\n    view: { type: Object as PropType<VaDatePickerView> },\n    type: { type: String as PropType<VaDatePickerType>, default: 'day' },\n    readonly: { type: Boolean, default: false },\n    disabled: { type: Boolean, default: false },\n\n    // Colors\n    color: { type: String, default: undefined },\n    weekendsColor: { type: String, default: undefined },\n  },\n\n  emits: [\n    ...useStatefulEmits,\n    ...extractComponentEmits(VaDatePickerHeader),\n    ...extractComponentEmits(VaYearPicker),\n    ...extractComponentEmits(VaDayPicker),\n    ...extractComponentEmits(VaMonthPicker),\n  ],\n\n  setup (props, { emit }) {\n    const { valueComputed } = useStateful(props, emit)\n\n    const { syncView } = useView(props, emit, { type: props.type })\n\n    const classComputed = computed(() => ({\n      'va-date-picker_without-week-days': props.hideWeekDays,\n      'va-date-picker_disabled': props.disabled,\n    }))\n\n    const onDayModelValueUpdate = (modelValue: VaDatePickerModelValue) => {\n      if (props.readonly) { return }\n\n      // Do not update model value if we just want to change view (We can change it for now, but later we can add here timepicker)\n      if (props.type === 'day') { valueComputed.value = modelValue }\n    }\n\n    const onMonthClick = (date: Date) => {\n      emit('click:month', date)\n      const year = date.getFullYear()\n      const month = date.getMonth()\n      if (props.type !== 'month') {\n        syncView.value = { type: 'day', year, month }\n      }\n    }\n\n    const onMonthModelValueUpdate = (modelValue: VaDatePickerModelValue) => {\n      // Do not update model value if we just want to change view\n      if (props.type === 'month') { valueComputed.value = modelValue }\n    }\n\n    const onYearClick = (date : Date) => {\n      emit('click:year', date)\n\n      const year = date.getFullYear()\n\n      if (props.type !== 'year') {\n        syncView.value = { type: 'month', year, month: syncView.value.month }\n      }\n    }\n\n    const onYearModelValueUpdate = (modelValue: VaDatePickerModelValue) => {\n      // Do not update model value if we just want to change view\n      if (props.type === 'year') { valueComputed.value = modelValue }\n    }\n\n    const { colorsToCSSVariable } = useColors()\n\n    const colorsStyle = colorsToCSSVariable({\n      color: props.color,\n      'weekends-color': props.weekendsColor,\n    }, 'va-date-picker')\n\n    const currentPicker = ref<ComponentOptions | null>(null)\n\n    watch(syncView, (newValue, prevValue) => {\n      // Don't focus new picker if user does not change type\n      if (newValue.type === prevValue.type) { return }\n\n      nextTick(() => {\n        if (currentPicker.value) { currentPicker.value.$el.focus() }\n      })\n    })\n\n    const isPickerReadonly = (pickerName: 'year' | 'month' | 'day') => {\n      return props.readonly && props.type === pickerName\n    }\n\n    return {\n      dayPickerProps: filterComponentProps(props, extractComponentProps(VaDayPicker)),\n      headerProps: filterComponentProps(props, extractComponentProps(VaDatePickerHeader)),\n      monthPickerProps: filterComponentProps(props, extractComponentProps(VaMonthPicker)),\n      yearPickerProps: filterComponentProps(props, extractComponentProps(VaYearPicker)),\n\n      syncView,\n\n      classComputed,\n      valueComputed,\n\n      onDayModelValueUpdate,\n\n      onMonthClick,\n      onMonthModelValueUpdate,\n\n      onYearClick,\n      onYearModelValueUpdate,\n\n      colorsStyle,\n      currentPicker,\n\n      isPickerReadonly,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import 'variables';\n\n.va-date-picker {\n  --va-date-picker-content-height: calc(var(--va-date-picker-cell-size) * 7 + var(--va-date-picker-cell-gap) * 6);\n\n  width: calc(var(--va-date-picker-cell-size) * 7 + var(--va-date-picker-cell-gap) * 6);\n  font-family: var(--va-font-family);\n\n  &__picker-wrapper {\n    height: var(--va-date-picker-content-height);\n  }\n\n  &_without-week-days {\n    --va-date-picker-content-height: calc(var(--va-date-picker-cell-size) * 6 + var(--va-date-picker-cell-gap) * 6);\n  }\n\n  &_mobile {\n    .va-day-picker,\n    .va-month-picker,\n    .va-year-picker {\n      height: 100%;\n    }\n  }\n\n  &_disabled {\n    opacity: 0.4;\n    position: relative;\n\n    &::before {\n      content: '';\n      position: absolute;\n      height: 100%;\n      width: 100%;\n      z-index: 100;\n    }\n  }\n}\n\n.va-date-picker-header {\n  padding-bottom: 0.25rem;\n}\n</style>\n"],"names":["isRange","value","start","end","isSingleDate","Date","isDates","Array","isArray","throwIncorrectModelValueError","modelValue","mode","Error","JSON","stringify","sortRange","useDatePickerModelValue","props","emit","dateEqual","updateModelValue","date","modeInitialValue","isDatesIncludesDate","find","d","filter","sort","a","b","getTime","useView","defaultOverride","defaultView","type","year","getFullYear","month","getMonth","statefulView","ref","syncView","computed","get","view","set","next","prev","getMonthDaysCount","getDate","getNumbersArray","length","from","keys","map","k","useVaDatePickerCalendar","options","currentMonthStartWeekday","localizeWeekday","weekdayNumber","getDay","firstWeekday","getPreviousDates","prevMonthDaysCount","slice","prevAndCurrentDays","currentMonthEndIndex","calendarDates","days","daysRemaining","nextMonthDaysCount","nextMonthDays","currentMonthStartIndex","safeUnref","refOrRaw","isRef","unref","isUndefined","t","undefined","useGridKeyboardNavigation","rowSize","onSelected","onFocusIndex","focusedCellIndex","previouslyClicked","containerAttributes","onFocus","index","onKeydown","e","includes","key","preventDefault","onBlur","onMousedown","tabindex","isDatesDayEqual","date1","date2","toDateString","isDatesMonthEqual","isDatesYearEqual","useDatePicker","dates","datesEqual","day","getDateEqualFunction","hoveredIndex","hoveredValue","watch","onClick","isToday","today","isSelected","isInRange","selectedDate","defineComponent","name","otherMonth","Boolean","default","inRange","disabled","selected","weekend","hidden","focused","highlightWeekend","highlightToday","readonly","emits","setup","_ctx","_mergeProps","class","VaDatePickerCellProps","extractComponentProps","VaDatePickerCell","components","monthNames","required","weekdayNames","String","hideWeekDays","Object","showOtherMonths","allowedDays","Function","weekends","toRefs","VaDayPickerCellPropValues","filterComponentProps","weekdayNamesComputed","gridStartIndex","gridEndIndex","selectedValue","isOtherMonth","isDateDisabled","isDateWeekend","weekday","_createVNode","_renderSlot","VaButton","color","changeView","switchView","icon","flat","size","allowedMonths","months","selectedIndex","isDisabled","monthIndex","allowedYears","startYear","Number","endYear","rootNode","generateYearsArray","yearsCount","i","setFullYear","createYearDate","years","onMounted","scrollHeight","rootNodeHeight","offsetHeight","currentYearOffset","scrollTo","top","scrollIntoYearIndexCenter","findIndex","cellSize","relativeScrollPosition","scrollTop","scrollIntoYearIndex","isYearDisabled","VaDayPicker","VaDatePickerHeader","VaMonthPicker","VaYearPicker","useStatefulProps","weekendsColor","useStatefulEmits","extractComponentEmits","valueComputed","useStateful","classComputed","colorsToCSSVariable","useColors","colorsStyle","currentPicker","newValue","prevValue","nextTick","$el","focus","dayPickerProps","headerProps","monthPickerProps","yearPickerProps","onDayModelValueUpdate","onMonthClick","onMonthModelValueUpdate","onYearClick","onYearModelValueUpdate","isPickerReadonly","pickerName","style","_","bind"],"mappings":"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"}