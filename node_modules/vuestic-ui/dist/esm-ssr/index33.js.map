{"version":3,"file":"index33.js","sources":["../../src/components/va-modal/VaModal.vue","../../src/components/va-modal/VaModal.vue?vue&type=template&id=fb3de2a4&lang.js","../../src/components/va-modal/index.ts"],"sourcesContent":["<template>\n  <teleport v-if='valueComputed' :to=\"attachElement\" :disabled=\"disableAttachment\">\n    <div class=\"va-modal\">\n      <modal-element\n        name=\"va-modal__overlay--transition\"\n        :isTransition=\"!$props.withoutTransitions\"\n        @click=\"onOutsideClick\"\n        appear\n      >\n        <div\n          class=\"va-modal__overlay\"\n          :style=\"$props.overlay && computedOverlayStyles\"\n        />\n      </modal-element>\n      <modal-element\n        name=\"va-modal__container--transition\"\n        :isTransition=\"!$props.withoutTransitions\"\n        appear\n        @beforeEnter=\"onBeforeEnterTransition\"\n        @afterEnter=\"onAfterEnterTransition\"\n        @beforeLeave=\"onBeforeLeaveTransition\"\n        @afterLeave=\"onAfterLeaveTransition\"\n      >\n        <div\n          v-if=\"valueComputed\"\n          class=\"va-modal__container\"\n          :style=\"computedModalContainerStyle\"\n        >\n          <div\n            class=\"va-modal__dialog\"\n            :class=\"computedClass\"\n            :style=\"{ maxWidth: $props.maxWidth, maxHeight: $props.maxHeight }\"\n            ref=\"modal\"\n          >\n            <va-icon\n              v-if=\"$props.fullscreen\"\n              @click=\"cancel()\"\n              name=\"close\"\n              class=\"va-modal__close\"\n            />\n\n            <div\n              class=\"va-modal__inner\"\n              :style=\"{ maxWidth: $props.maxWidth, maxHeight: $props.maxHeight }\"\n            >\n              <div\n                v-if=\"title\"\n                class=\"va-modal__title\"\n                :style=\"{ color: theme.getColor('primary') }\"\n              >\n                {{ $props.title }}\n              </div>\n              <div v-if=\"hasHeaderSlot\" class=\"va-modal__header\">\n                <slot name=\"header\" />\n              </div>\n              <div v-if=\"$props.message\" class=\"va-modal__message\">\n                {{ $props.message }}\n              </div>\n              <div v-if=\"hasContentSlot\" class=\"va-modal__message\">\n                <slot />\n              </div>\n              <div\n                v-if=\"($props.cancelText || $props.okText) && !$props.hideDefaultActions\"\n                class=\"va-modal__footer\"\n              >\n                <va-button v-if=\"$props.cancelText\" color=\"gray\" class=\"mr-2\" flat @click=\"cancel\">\n                  {{ $props.cancelText }}\n                </va-button>\n                <va-button @click=\"ok\">\n                  {{ $props.okText }}\n                </va-button>\n              </div>\n              <div v-if=\"hasFooterSlot\" class=\"va-modal__footer\">\n                <slot name=\"footer\" />\n              </div>\n            </div>\n          </div>\n        </div>\n      </modal-element>\n    </div>\n  </teleport>\n</template>\n\n<script lang=\"ts\">\nimport { watch, h, Transition } from 'vue'\nimport { Options, prop, Vue, mixins } from 'vue-class-component'\n\nimport ColorMixin from '../../services/color-config/ColorMixin'\nimport { StatefulMixin } from '../../mixins/StatefulMixin/StatefulMixin'\nimport VaButton from '../va-button'\nimport VaIcon from '../va-icon'\n\nclass ModalProps {\n  modelValue = prop<boolean>({ type: Boolean, default: false })\n  attachElement = prop<string>({ type: String, default: 'body' })\n  disableAttachment = prop<boolean>({ type: Boolean, default: false })\n  title = prop<string>({ type: String, default: '' })\n  message = prop<string>({ type: String, default: '' })\n  okText = prop<string>({ type: String, default: 'OK' })\n  cancelText = prop<string>({ type: String, default: 'Cancel' })\n  hideDefaultActions = prop<boolean>({ type: Boolean, default: false })\n  fullscreen = prop<boolean>({ type: Boolean, default: false })\n  mobileFullscreen = prop<boolean>({ type: Boolean, default: true })\n  noDismiss = prop<boolean>({ type: Boolean, default: false })\n  noOutsideDismiss = prop<boolean>({ type: Boolean, default: false })\n  noEscDismiss = prop<boolean>({ type: Boolean, default: false })\n  maxWidth = prop<string>({ type: String, default: '' })\n  maxHeight = prop<string>({ type: String, default: '' })\n  size = prop<string>({\n    type: String,\n    default: 'medium',\n    validator: (size: string) => {\n      return ['medium', 'small', 'large'].includes(size)\n    },\n  })\n\n  fixedLayout = prop<boolean>({ type: Boolean, default: false })\n  withoutTransitions = prop<boolean>({ type: Boolean, default: false })\n  overlay = prop<boolean>({ type: Boolean, default: true })\n  overlayOpacity = prop<number | string>({\n    type: [Number, String],\n    default: 0.6,\n  })\n\n  zIndex = prop<number | string>({ type: [Number, String], default: undefined })\n}\n\nconst ModalPropsMixin = Vue.with(ModalProps)\n\nclass ModalElementProps {\n  isTransition = prop<boolean>({\n    type: Boolean,\n    default: true,\n  })\n}\n\n@Options({\n  name: 'ModalElement',\n})\nclass ModalElement extends Vue.with(ModalElementProps) {\n  render (): any {\n    const children = this.$slots.default ? this.$slots.default(this.$attrs) : null\n\n    return this.$props.isTransition\n      ? h(\n        Transition,\n        { ...this.$attrs },\n        this.$slots,\n      )\n      : children\n  }\n}\n\n@Options({\n  name: 'VaModal',\n  components: { VaButton, VaIcon, ModalElement },\n  emits: ['update:modelValue', 'cancel', 'ok', 'before-open', 'open', 'before-close', 'close', 'click-outside'],\n})\nexport default class VaModal extends mixins(\n  ColorMixin,\n  StatefulMixin,\n  ModalPropsMixin,\n) {\n  created () {\n    watch(() => this.valueComputed, (valueComputed: boolean) => {\n      if (valueComputed) {\n        window.addEventListener('keyup', this.listenKeyUp)\n      } else {\n        window.removeEventListener('keyup', this.listenKeyUp)\n      }\n    })\n  }\n\n  get computedClass () {\n    return {\n      'va-modal--fullscreen': this.$props.fullscreen,\n      'va-modal--mobile-fullscreen': this.$props.mobileFullscreen,\n      'va-modal--fixed-layout': this.$props.fixedLayout,\n      [`va-modal--size-${this.$props.size}`]: this.$props.size !== 'medium',\n    }\n  }\n\n  get computedOverlayStyles () {\n    // NOTE Not sure exactly what that does.\n    // Supposedly solves some case when background wasn't shown.\n    // As a side effect removes background from nested modals.\n\n    const moreThanOneModalIsOpen = !!document.querySelectorAll(\n      '.va-modal__overlay',\n    ).length\n\n    return moreThanOneModalIsOpen\n      ? {}\n      : {\n        'background-color': `rgba(0, 0, 0, ${this.$props.overlayOpacity})`,\n        'z-index': this.$props.zIndex ? Number(this.$props.zIndex) - 1 : undefined,\n      }\n  }\n\n  get computedModalContainerStyle () {\n    return {\n      'z-index': this.$props.zIndex,\n    }\n  }\n\n  get hasContentSlot () {\n    return this.$slots.default\n  }\n\n  get hasHeaderSlot () {\n    return this.$slots.header\n  }\n\n  get hasFooterSlot () {\n    return this.$slots.footer\n  }\n\n  show () {\n    this.valueComputed = true\n  }\n\n  hide () {\n    this.valueComputed = false\n  }\n\n  toggle () {\n    this.valueComputed = !this.valueComputed\n  }\n\n  cancel () {\n    this.hide()\n    this.$emit('cancel')\n  }\n\n  ok () {\n    this.hide()\n    this.$emit('ok')\n  }\n\n  listenKeyUp (e: KeyboardEvent) {\n    if (e.code === 'Escape' && !this.$props.noEscDismiss && !this.$props.noDismiss) {\n      this.cancel()\n    }\n  }\n\n  onOutsideClick () {\n    if (this.$props.noOutsideDismiss || this.$props.noDismiss) { return }\n\n    this.$emit('click-outside')\n    this.cancel()\n  }\n\n  onBeforeEnterTransition (el: HTMLElement) {\n    this.$emit('before-open', el)\n  }\n\n  onAfterEnterTransition (el: HTMLElement) {\n    this.$emit('open', el)\n  }\n\n  onBeforeLeaveTransition (el: HTMLElement) {\n    this.$emit('before-close', el)\n  }\n\n  onAfterLeaveTransition (el: HTMLElement) {\n    this.$emit('close', el)\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import '../../styles/resources';\n@import 'variables';\n\n.va-modal {\n  position: var(--va-modal-position);\n  display: var(--va-modal-display);\n  align-items: var(--va-modal-align-items);\n  justify-content: var(--va-modal-justify-content);\n  width: var(--va-modal-width);\n  height: var(--va-modal-height);\n  top: var(--va-modal-top);\n  left: var(--va-modal-left);\n  overflow: var(--va-modal-overflow);\n  outline: var(--va-modal-outline);\n  z-index: var(--va-modal-z-index);\n  font-family: var(--va-font-family);\n\n  &__title {\n    margin-bottom: 1.5rem;\n\n    @include va-title();\n  }\n\n  &__container {\n    z-index: var(--va-modal-container-z-index);\n\n    &--transition {\n      @include va-modal-transition();\n    }\n  }\n\n  &__dialog {\n    background: var(--va-modal-dialog-background);\n    min-height: var(--va-modal-dialog-min-height);\n    height: var(--va-modal-dialog-height);\n    border-radius: var(--va-modal-dialog-border-radius, var(--va-block-border-radius));\n    margin: var(--va-modal-dialog-margin);\n    box-shadow: var(--va-modal-dialog-box-shadow, var(--va-block-box-shadow));\n    max-width: var(--va-modal-dialog-max-width);\n    max-height: var(--va-modal-dialog-max-height);\n    position: var(--va-modal-dialog-position);\n    overflow: auto;\n  }\n\n  &__overlay {\n    position: var(--va-modal-overlay-position);\n    top: var(--va-modal-overlay-top);\n    left: var(--va-modal-overlay-left);\n    z-index: var(--va-modal-overlay-z-index);\n    width: var(--va-modal-overlay-width);\n    height: var(--va-modal-overlay-height);\n\n    &--transition {\n      @include va-modal-transition(true);\n    }\n  }\n\n  &--fullscreen {\n    min-width: 100vw !important;\n    min-height: 100vh !important;\n    border-radius: 0;\n    margin: 0;\n  }\n\n  &--mobile-fullscreen {\n    @media all and (max-width: map-get($grid-breakpoints, sm)) {\n      margin: 0 !important;\n      min-width: 100vw !important;\n      min-height: 100vh !important;\n      border-radius: 0;\n    }\n  }\n\n  &--size {\n    &-small {\n      max-width: map_get($grid-breakpoints, sm);\n\n      @media all and (max-width: map-get($grid-breakpoints, sm)) {\n        max-width: 100vw !important;\n      }\n\n      .va-modal__inner {\n        max-width: map_get($grid-breakpoints, sm);\n\n        @media all and (max-width: map-get($grid-breakpoints, sm)) {\n          max-width: 100vw !important;\n        }\n      }\n    }\n\n    &-large {\n      max-width: map-get($grid-breakpoints, lg);\n\n      .va-modal__inner {\n        max-width: map-get($grid-breakpoints, lg);\n      }\n    }\n  }\n\n  &--fixed-layout {\n    .va-modal__inner {\n      overflow: hidden;\n      padding: $modal-padding-top 0 $modal-padding-bottom;\n      max-height: calc(100vh - 2rem);\n\n      .va-modal__header,\n      .va-modal__footer,\n      .va-modal__title {\n        padding: 0 $modal-padding-right 0 $modal-padding-left;\n      }\n\n      .va-modal__message {\n        padding: 0 $modal-padding-right 0 $modal-padding-left;\n        overflow: auto;\n      }\n    }\n\n    .va-modal__dialog {\n      overflow: hidden;\n    }\n  }\n\n  &__message {\n    margin-bottom: 1.5rem;\n  }\n\n  &__inner {\n    overflow: visible;\n    display: flex;\n    position: relative;\n    flex-flow: column;\n    padding: $modal-padding-top $modal-padding-right $modal-padding-bottom $modal-padding-left;\n    max-width: map_get($grid-breakpoints, md);\n    margin: auto;\n\n    > div:last-of-type {\n      margin-bottom: 0 !important;\n    }\n  }\n\n  &__close {\n    position: absolute;\n    top: 1rem;\n    right: 1rem;\n    cursor: pointer;\n    font-size: 1.5rem !important;\n    font-style: normal !important;\n    color: $brand-secondary;\n    z-index: 1;\n  }\n\n  &__footer {\n    margin-top: auto;\n    min-height: fit-content;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n\n    &:last-of-type {\n      margin-bottom: 0 !important;\n    }\n  }\n}\n</style>\n","<template>\n  <teleport v-if='valueComputed' :to=\"attachElement\" :disabled=\"disableAttachment\">\n    <div class=\"va-modal\">\n      <modal-element\n        name=\"va-modal__overlay--transition\"\n        :isTransition=\"!$props.withoutTransitions\"\n        @click=\"onOutsideClick\"\n        appear\n      >\n        <div\n          class=\"va-modal__overlay\"\n          :style=\"$props.overlay && computedOverlayStyles\"\n        />\n      </modal-element>\n      <modal-element\n        name=\"va-modal__container--transition\"\n        :isTransition=\"!$props.withoutTransitions\"\n        appear\n        @beforeEnter=\"onBeforeEnterTransition\"\n        @afterEnter=\"onAfterEnterTransition\"\n        @beforeLeave=\"onBeforeLeaveTransition\"\n        @afterLeave=\"onAfterLeaveTransition\"\n      >\n        <div\n          v-if=\"valueComputed\"\n          class=\"va-modal__container\"\n          :style=\"computedModalContainerStyle\"\n        >\n          <div\n            class=\"va-modal__dialog\"\n            :class=\"computedClass\"\n            :style=\"{ maxWidth: $props.maxWidth, maxHeight: $props.maxHeight }\"\n            ref=\"modal\"\n          >\n            <va-icon\n              v-if=\"$props.fullscreen\"\n              @click=\"cancel()\"\n              name=\"close\"\n              class=\"va-modal__close\"\n            />\n\n            <div\n              class=\"va-modal__inner\"\n              :style=\"{ maxWidth: $props.maxWidth, maxHeight: $props.maxHeight }\"\n            >\n              <div\n                v-if=\"title\"\n                class=\"va-modal__title\"\n                :style=\"{ color: theme.getColor('primary') }\"\n              >\n                {{ $props.title }}\n              </div>\n              <div v-if=\"hasHeaderSlot\" class=\"va-modal__header\">\n                <slot name=\"header\" />\n              </div>\n              <div v-if=\"$props.message\" class=\"va-modal__message\">\n                {{ $props.message }}\n              </div>\n              <div v-if=\"hasContentSlot\" class=\"va-modal__message\">\n                <slot />\n              </div>\n              <div\n                v-if=\"($props.cancelText || $props.okText) && !$props.hideDefaultActions\"\n                class=\"va-modal__footer\"\n              >\n                <va-button v-if=\"$props.cancelText\" color=\"gray\" class=\"mr-2\" flat @click=\"cancel\">\n                  {{ $props.cancelText }}\n                </va-button>\n                <va-button @click=\"ok\">\n                  {{ $props.okText }}\n                </va-button>\n              </div>\n              <div v-if=\"hasFooterSlot\" class=\"va-modal__footer\">\n                <slot name=\"footer\" />\n              </div>\n            </div>\n          </div>\n        </div>\n      </modal-element>\n    </div>\n  </teleport>\n</template>\n\n<script lang=\"ts\">\nimport { watch, h, Transition } from 'vue'\nimport { Options, prop, Vue, mixins } from 'vue-class-component'\n\nimport ColorMixin from '../../services/color-config/ColorMixin'\nimport { StatefulMixin } from '../../mixins/StatefulMixin/StatefulMixin'\nimport VaButton from '../va-button'\nimport VaIcon from '../va-icon'\n\nclass ModalProps {\n  modelValue = prop<boolean>({ type: Boolean, default: false })\n  attachElement = prop<string>({ type: String, default: 'body' })\n  disableAttachment = prop<boolean>({ type: Boolean, default: false })\n  title = prop<string>({ type: String, default: '' })\n  message = prop<string>({ type: String, default: '' })\n  okText = prop<string>({ type: String, default: 'OK' })\n  cancelText = prop<string>({ type: String, default: 'Cancel' })\n  hideDefaultActions = prop<boolean>({ type: Boolean, default: false })\n  fullscreen = prop<boolean>({ type: Boolean, default: false })\n  mobileFullscreen = prop<boolean>({ type: Boolean, default: true })\n  noDismiss = prop<boolean>({ type: Boolean, default: false })\n  noOutsideDismiss = prop<boolean>({ type: Boolean, default: false })\n  noEscDismiss = prop<boolean>({ type: Boolean, default: false })\n  maxWidth = prop<string>({ type: String, default: '' })\n  maxHeight = prop<string>({ type: String, default: '' })\n  size = prop<string>({\n    type: String,\n    default: 'medium',\n    validator: (size: string) => {\n      return ['medium', 'small', 'large'].includes(size)\n    },\n  })\n\n  fixedLayout = prop<boolean>({ type: Boolean, default: false })\n  withoutTransitions = prop<boolean>({ type: Boolean, default: false })\n  overlay = prop<boolean>({ type: Boolean, default: true })\n  overlayOpacity = prop<number | string>({\n    type: [Number, String],\n    default: 0.6,\n  })\n\n  zIndex = prop<number | string>({ type: [Number, String], default: undefined })\n}\n\nconst ModalPropsMixin = Vue.with(ModalProps)\n\nclass ModalElementProps {\n  isTransition = prop<boolean>({\n    type: Boolean,\n    default: true,\n  })\n}\n\n@Options({\n  name: 'ModalElement',\n})\nclass ModalElement extends Vue.with(ModalElementProps) {\n  render (): any {\n    const children = this.$slots.default ? this.$slots.default(this.$attrs) : null\n\n    return this.$props.isTransition\n      ? h(\n        Transition,\n        { ...this.$attrs },\n        this.$slots,\n      )\n      : children\n  }\n}\n\n@Options({\n  name: 'VaModal',\n  components: { VaButton, VaIcon, ModalElement },\n  emits: ['update:modelValue', 'cancel', 'ok', 'before-open', 'open', 'before-close', 'close', 'click-outside'],\n})\nexport default class VaModal extends mixins(\n  ColorMixin,\n  StatefulMixin,\n  ModalPropsMixin,\n) {\n  created () {\n    watch(() => this.valueComputed, (valueComputed: boolean) => {\n      if (valueComputed) {\n        window.addEventListener('keyup', this.listenKeyUp)\n      } else {\n        window.removeEventListener('keyup', this.listenKeyUp)\n      }\n    })\n  }\n\n  get computedClass () {\n    return {\n      'va-modal--fullscreen': this.$props.fullscreen,\n      'va-modal--mobile-fullscreen': this.$props.mobileFullscreen,\n      'va-modal--fixed-layout': this.$props.fixedLayout,\n      [`va-modal--size-${this.$props.size}`]: this.$props.size !== 'medium',\n    }\n  }\n\n  get computedOverlayStyles () {\n    // NOTE Not sure exactly what that does.\n    // Supposedly solves some case when background wasn't shown.\n    // As a side effect removes background from nested modals.\n\n    const moreThanOneModalIsOpen = !!document.querySelectorAll(\n      '.va-modal__overlay',\n    ).length\n\n    return moreThanOneModalIsOpen\n      ? {}\n      : {\n        'background-color': `rgba(0, 0, 0, ${this.$props.overlayOpacity})`,\n        'z-index': this.$props.zIndex ? Number(this.$props.zIndex) - 1 : undefined,\n      }\n  }\n\n  get computedModalContainerStyle () {\n    return {\n      'z-index': this.$props.zIndex,\n    }\n  }\n\n  get hasContentSlot () {\n    return this.$slots.default\n  }\n\n  get hasHeaderSlot () {\n    return this.$slots.header\n  }\n\n  get hasFooterSlot () {\n    return this.$slots.footer\n  }\n\n  show () {\n    this.valueComputed = true\n  }\n\n  hide () {\n    this.valueComputed = false\n  }\n\n  toggle () {\n    this.valueComputed = !this.valueComputed\n  }\n\n  cancel () {\n    this.hide()\n    this.$emit('cancel')\n  }\n\n  ok () {\n    this.hide()\n    this.$emit('ok')\n  }\n\n  listenKeyUp (e: KeyboardEvent) {\n    if (e.code === 'Escape' && !this.$props.noEscDismiss && !this.$props.noDismiss) {\n      this.cancel()\n    }\n  }\n\n  onOutsideClick () {\n    if (this.$props.noOutsideDismiss || this.$props.noDismiss) { return }\n\n    this.$emit('click-outside')\n    this.cancel()\n  }\n\n  onBeforeEnterTransition (el: HTMLElement) {\n    this.$emit('before-open', el)\n  }\n\n  onAfterEnterTransition (el: HTMLElement) {\n    this.$emit('open', el)\n  }\n\n  onBeforeLeaveTransition (el: HTMLElement) {\n    this.$emit('before-close', el)\n  }\n\n  onAfterLeaveTransition (el: HTMLElement) {\n    this.$emit('close', el)\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import '../../styles/resources';\n@import 'variables';\n\n.va-modal {\n  position: var(--va-modal-position);\n  display: var(--va-modal-display);\n  align-items: var(--va-modal-align-items);\n  justify-content: var(--va-modal-justify-content);\n  width: var(--va-modal-width);\n  height: var(--va-modal-height);\n  top: var(--va-modal-top);\n  left: var(--va-modal-left);\n  overflow: var(--va-modal-overflow);\n  outline: var(--va-modal-outline);\n  z-index: var(--va-modal-z-index);\n  font-family: var(--va-font-family);\n\n  &__title {\n    margin-bottom: 1.5rem;\n\n    @include va-title();\n  }\n\n  &__container {\n    z-index: var(--va-modal-container-z-index);\n\n    &--transition {\n      @include va-modal-transition();\n    }\n  }\n\n  &__dialog {\n    background: var(--va-modal-dialog-background);\n    min-height: var(--va-modal-dialog-min-height);\n    height: var(--va-modal-dialog-height);\n    border-radius: var(--va-modal-dialog-border-radius, var(--va-block-border-radius));\n    margin: var(--va-modal-dialog-margin);\n    box-shadow: var(--va-modal-dialog-box-shadow, var(--va-block-box-shadow));\n    max-width: var(--va-modal-dialog-max-width);\n    max-height: var(--va-modal-dialog-max-height);\n    position: var(--va-modal-dialog-position);\n    overflow: auto;\n  }\n\n  &__overlay {\n    position: var(--va-modal-overlay-position);\n    top: var(--va-modal-overlay-top);\n    left: var(--va-modal-overlay-left);\n    z-index: var(--va-modal-overlay-z-index);\n    width: var(--va-modal-overlay-width);\n    height: var(--va-modal-overlay-height);\n\n    &--transition {\n      @include va-modal-transition(true);\n    }\n  }\n\n  &--fullscreen {\n    min-width: 100vw !important;\n    min-height: 100vh !important;\n    border-radius: 0;\n    margin: 0;\n  }\n\n  &--mobile-fullscreen {\n    @media all and (max-width: map-get($grid-breakpoints, sm)) {\n      margin: 0 !important;\n      min-width: 100vw !important;\n      min-height: 100vh !important;\n      border-radius: 0;\n    }\n  }\n\n  &--size {\n    &-small {\n      max-width: map_get($grid-breakpoints, sm);\n\n      @media all and (max-width: map-get($grid-breakpoints, sm)) {\n        max-width: 100vw !important;\n      }\n\n      .va-modal__inner {\n        max-width: map_get($grid-breakpoints, sm);\n\n        @media all and (max-width: map-get($grid-breakpoints, sm)) {\n          max-width: 100vw !important;\n        }\n      }\n    }\n\n    &-large {\n      max-width: map-get($grid-breakpoints, lg);\n\n      .va-modal__inner {\n        max-width: map-get($grid-breakpoints, lg);\n      }\n    }\n  }\n\n  &--fixed-layout {\n    .va-modal__inner {\n      overflow: hidden;\n      padding: $modal-padding-top 0 $modal-padding-bottom;\n      max-height: calc(100vh - 2rem);\n\n      .va-modal__header,\n      .va-modal__footer,\n      .va-modal__title {\n        padding: 0 $modal-padding-right 0 $modal-padding-left;\n      }\n\n      .va-modal__message {\n        padding: 0 $modal-padding-right 0 $modal-padding-left;\n        overflow: auto;\n      }\n    }\n\n    .va-modal__dialog {\n      overflow: hidden;\n    }\n  }\n\n  &__message {\n    margin-bottom: 1.5rem;\n  }\n\n  &__inner {\n    overflow: visible;\n    display: flex;\n    position: relative;\n    flex-flow: column;\n    padding: $modal-padding-top $modal-padding-right $modal-padding-bottom $modal-padding-left;\n    max-width: map_get($grid-breakpoints, md);\n    margin: auto;\n\n    > div:last-of-type {\n      margin-bottom: 0 !important;\n    }\n  }\n\n  &__close {\n    position: absolute;\n    top: 1rem;\n    right: 1rem;\n    cursor: pointer;\n    font-size: 1.5rem !important;\n    font-style: normal !important;\n    color: $brand-secondary;\n    z-index: 1;\n  }\n\n  &__footer {\n    margin-top: auto;\n    min-height: fit-content;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n\n    &:last-of-type {\n      margin-bottom: 0 !important;\n    }\n  }\n}\n</style>\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\nimport VaModal from './VaModal.vue'\n\nexport default withConfigTransport(VaModal)\n"],"names":["ModalPropsMixin","Vue","with","ModalProps","constructor","this","prop","type","Boolean","default","String","validator","size","includes","Number","undefined","ModalElementProps","ModalElement","render","children","$slots","$attrs","$props","isTransition","h","Transition","Options","name","VaModal","mixins","ColorMixin","StatefulMixin","created","watch","valueComputed","window","addEventListener","listenKeyUp","removeEventListener","computedClass","fullscreen","mobileFullscreen","fixedLayout","computedOverlayStyles","document","querySelectorAll","length","overlayOpacity","zIndex","computedModalContainerStyle","hasContentSlot","hasHeaderSlot","header","hasFooterSlot","footer","show","hide","toggle","cancel","$emit","ok","e","code","noEscDismiss","noDismiss","onOutsideClick","noOutsideDismiss","onBeforeEnterTransition","el","onAfterEnterTransition","onBeforeLeaveTransition","onAfterLeaveTransition","components","VaButton","VaIcon","emits","_ctx","withoutTransitions","appear","_createVNode","class","style","overlay","_createBlock","maxWidth","maxHeight","ref","onClick","getColor","title","_renderSlot","message","cancelText","okText","hideDefaultActions","color","flat","withConfigTransport"],"mappings":"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"}