{"version":3,"file":"VaIcon.js","sources":["../../../../node_modules/lodash/_isKey.js","../../../../node_modules/lodash/memoize.js","../../../../node_modules/lodash/_memoizeCapped.js","../../../../node_modules/lodash/_stringToPath.js","../../../../node_modules/lodash/_castPath.js","../../../../node_modules/lodash/_toKey.js","../../../../node_modules/lodash/_baseGet.js","../../../../node_modules/lodash/_parent.js","../../../../node_modules/lodash/_baseUnset.js","../../../../node_modules/lodash/last.js","../../../../node_modules/lodash/_customOmitClone.js","../../../../node_modules/lodash/_flatRest.js","../../../../node_modules/lodash/omit.js","../../src/services/icon-config/utils/regex.ts","../../src/services/icon-config/utils/dynamic-segment.ts","../../src/services/icon-config/types.ts","../../src/services/icon-config/icon-helpers.ts","../../src/services/icon-config/icon-config-hooks.ts","../../src/components/va-icon/VaIcon.vue","../../src/components/va-icon/VaIcon.vue?vue&type=template&id=28d73628&lang.js"],"sourcesContent":["var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n","var MapCache = require('./_MapCache');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n","var memoize = require('./memoize');\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n","var memoizeCapped = require('./_memoizeCapped');\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n","var isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n","var baseGet = require('./_baseGet'),\n    baseSlice = require('./_baseSlice');\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n}\n\nmodule.exports = parent;\n","var castPath = require('./_castPath'),\n    last = require('./last'),\n    parent = require('./_parent'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.unset`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The property path to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n */\nfunction baseUnset(object, path) {\n  path = castPath(path, object);\n  object = parent(object, path);\n  return object == null || delete object[toKey(last(path))];\n}\n\nmodule.exports = baseUnset;\n","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nmodule.exports = last;\n","var isPlainObject = require('./isPlainObject');\n\n/**\n * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n * objects.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {string} key The key of the property to inspect.\n * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n */\nfunction customOmitClone(value) {\n  return isPlainObject(value) ? undefined : value;\n}\n\nmodule.exports = customOmitClone;\n","var flatten = require('./flatten'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * A specialized version of `baseRest` which flattens the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @returns {Function} Returns the new function.\n */\nfunction flatRest(func) {\n  return setToString(overRest(func, undefined, flatten), func + '');\n}\n\nmodule.exports = flatRest;\n","var arrayMap = require('./_arrayMap'),\n    baseClone = require('./_baseClone'),\n    baseUnset = require('./_baseUnset'),\n    castPath = require('./_castPath'),\n    copyObject = require('./_copyObject'),\n    customOmitClone = require('./_customOmitClone'),\n    flatRest = require('./_flatRest'),\n    getAllKeysIn = require('./_getAllKeysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * The opposite of `_.pick`; this method creates an object composed of the\n * own and inherited enumerable property paths of `object` that are not omitted.\n *\n * **Note:** This method is considerably slower than `_.pick`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to omit.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omit(object, ['a', 'c']);\n * // => { 'b': '2' }\n */\nvar omit = flatRest(function(object, paths) {\n  var result = {};\n  if (object == null) {\n    return result;\n  }\n  var isDeep = false;\n  paths = arrayMap(paths, function(path) {\n    path = castPath(path, object);\n    isDeep || (isDeep = path.length > 1);\n    return path;\n  });\n  copyObject(object, getAllKeysIn(object), result);\n  if (isDeep) {\n    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n  }\n  var length = paths.length;\n  while (length--) {\n    baseUnset(result, paths[length]);\n  }\n  return result;\n});\n\nmodule.exports = omit;\n","export const isMatchRegex = (str: string, regex: RegExp) => {\n  return regex.test(str)\n}\n\n/**\n * Return values from regex groups\n * @example\n * ```\n * \"fa-phone-o\", /fa-(.*)-(.*)/ -> [\"phone\", \"o\"]\n * \"any string\", /(.*)/ -> [\"any string\"]\n * \"global regex test\", /global (regex) (test)/g -> [['regex', 'test']]\n * ```\n */\nexport const regexGroupsValues = (str: string, regex: RegExp | string): string[] | string[][] => {\n  if (typeof regex !== 'string' && regex.global) {\n    // Global regex can return multiple matches array. So we need to map this all matches and remove non group values.\n    return [...str.matchAll(regex)].map(g => g.slice(1))\n  }\n\n  const match = str.match(regex) || []\n  if (!match) { return [] }\n  /**\n   * If there is groups in result - we need to slice first match\n   * ```\n   * \"test\".match(/(s)/)\n   * > Array [ \"s\", \"s\" ]\n   * ```\n   */\n  if (match.length > 1) { return match.slice(1) }\n\n  return match\n}\n","import { regexGroupsValues } from './regex'\n\nconst dynamicSegmentRegex = /{[^}]*}/g // match {any-thing}, {even with space}\n\n/**\n * Replace {anything} to regex (.*) group\n * @example\n * ```\n * \"fa-{code}\" -> \"fa-(.*)\"\n * \"fa-{code}-{suffix}\" -> \"fa-(.*)-(.*)\"\n * ```\n */\nconst dynamicSegmentStringToRegex = (template: string) => {\n  return template.replace(dynamicSegmentRegex, '(.*)')\n}\n\n/**\n Returns content from string in {}\n @example\n ```\n \"fa-{code}-{suffix}\" -> ['code', 'suffix']\n ```\n */\nconst dynamicSegmentsNames = (template: string) => {\n  return (template.match(dynamicSegmentRegex) || []) // 'fa-{code}-{suffix}' -> ['{code}', '{suffix}']\n    .map((g) => g.replace(/{|}/g, '')) // ['{code}', '{suffix}'] -> ['code', 'suffix']\n}\n\n/**\n * Transform template to regex and returns regex group values\n * @example\n * ```\n * \"fa-clock-o\", \"fa-{code}-{suffix}\" -> [\"clock\", \"o\"]\n * ```\n */\nconst dynamicSegmentsValues = (str: string, template: string) => {\n  return regexGroupsValues(str, dynamicSegmentStringToRegex(template))\n}\n\n/**\n * Returns object with param name from template and match value from str\n * @example\n * ```\n * \"fa-phone\", \"fa-{icon code}\" -> { 'icon code': 'phone' }\n * \"fa4 clock-o\", \"fa4 {icon-code}-{suffix}\" -> { 'icon-code': 'clock', 'suffix': 'o' }\n * \"fa4 clock-o\", \"fa4 {icon-code}\" -> { 'icon-code': 'clock-o' }\n * ```\n */\nexport const dynamicSegments = (str: string, template: string) => {\n  const params = dynamicSegmentsNames(template)\n  const values = dynamicSegmentsValues(str, template)\n\n  return params.reduce((acc, paramValue, i) => ({ ...acc, [paramValue]: values[i] }), {})\n}\n\n/**\n * Returns true if match string equals to input `str`\n * @example\n * ```\n * \"vuestic-home-open\", /vuestic-(.*)-o/ -> false\n * \"vuestic-home-open\", /vuestic-(.*)-open/ -> true\n * ```\n */\nconst strictMatch = (str: string, regex: RegExp) => {\n  return (str.match(regex) || [])[0] === str\n}\n\n/**\n * Returns true if str match template\n * @example\n *  ```\n * \"fa-phone\", \"fa-{icon code}\" -> true\n * \"fa4 clock-o\", \"fa4 {icon-code}-{suffix}\" -> true\n * \"fa4 clock-o\", \"fa4 {icon-code}\" -> false\n * ```\n */\nexport const isMatchDynamicSegments = (str: string, template: string) => {\n  const templateRegex = dynamicSegmentStringToRegex(template)\n  return strictMatch(str, new RegExp(templateRegex))\n}\n","export interface IconProps {\n  attrs?: Record<string, string | ((...args: any[]) => unknown)>\n\n  /** Vue component */\n  component?: any\n  /** Content that will be passed as text inside icon tag or as slot in component */\n  content?: string\n\n  class?: string,\n  tag?: string\n  color?: string\n  rotation?: number | string\n  spin?: 'clockwise' | 'counter-clockwise' | boolean\n  to?: string\n}\n\nexport interface IconConfigurationString extends IconProps {\n  name: string\n  resolve?: ((dynamicSegments: {[dynamicSegment: string]: string }) => IconProps)\n}\n\nexport interface IconConfigurationRegex extends IconProps {\n  name: RegExp\n  // Need a different resolve method name because ts don't understand types\n  resolveFromRegex?: ((...regexGroupValues: string[]) => IconProps)\n}\n\nexport type IconConfiguration = IconConfigurationString | IconConfigurationRegex\n\nexport type IconConfig = IconConfiguration[]\n\nexport const isIconConfigurationString = (config: IconConfiguration): config is IconConfigurationString => {\n  return typeof config.name === 'string'\n}\n\nexport const isIconConfigurationRegex = (config: IconConfiguration): config is IconConfigurationRegex => {\n  return config.name instanceof RegExp\n}\n","import merge from 'lodash/merge'\nimport { getGlobalConfig } from '../global-config/global-config'\nimport { isMatchDynamicSegments, dynamicSegments } from './utils/dynamic-segment'\nimport { isMatchRegex, regexGroupsValues } from './utils/regex'\nimport {\n  IconConfig,\n  IconConfiguration,\n  IconConfigurationString,\n  IconConfigurationRegex,\n  isIconConfigurationString,\n  isIconConfigurationRegex,\n  IconProps,\n} from './types'\n\nconst getIconConfig = (): IconConfig => {\n  return getGlobalConfig().icons || []\n}\n\nconst isMatchConfiguration = (iconName: string, iconConfiguration: IconConfiguration) => {\n  if (isIconConfigurationString(iconConfiguration)) {\n    return isMatchDynamicSegments(iconName, iconConfiguration.name)\n  }\n  if (isIconConfigurationRegex(iconConfiguration)) {\n    return isMatchRegex(iconName, iconConfiguration.name)\n  }\n\n  return false\n}\n\nconst resolveIconConfigurationString = (iconName: string, iconConfiguration: IconConfigurationString) => {\n  const args = dynamicSegments(iconName, iconConfiguration.name)\n  return iconConfiguration.resolve && iconConfiguration.resolve(args)\n}\n\nconst resolveIconConfigurationRegex = (iconName: string, iconConfig: IconConfigurationRegex) => {\n  if (iconConfig.name.global) {\n    throw new Error(`Bad icon config with name ${iconConfig.name}. Please, don't use global regex as name.`)\n  }\n  const args = regexGroupsValues(iconName, iconConfig.name) as string[]\n  return iconConfig.resolveFromRegex && iconConfig.resolveFromRegex(...args)\n}\n\nconst resolveIconConfiguration = (iconName: string, iconConfiguration: IconConfiguration): IconProps | undefined => {\n  if (isIconConfigurationString(iconConfiguration)) {\n    return resolveIconConfigurationString(iconName, iconConfiguration)\n  }\n  if (isIconConfigurationRegex(iconConfiguration)) {\n    return resolveIconConfigurationRegex(iconName, iconConfiguration)\n  }\n\n  throw Error('Unknown icon config')\n}\n\nconst findMatchedIconConfiguration = (iconName: string, globalIconConfig: IconConfig, namesToIgnore: string[] = []): IconConfiguration => {\n  const matchedConfig = globalIconConfig.find((config) => {\n    if (namesToIgnore.includes(config.name.toString())) { return false }\n\n    return isMatchConfiguration(iconName, config)\n  })\n\n  if (!matchedConfig) { throw new Error(`Can not find icon config from ${iconName}. Please provide default config.`) }\n\n  return matchedConfig\n}\n\nconst findIconConfiguration = (iconName: string | undefined, globalIconConfig: IconConfig, namesToIgnore: string[] = []): IconConfiguration | undefined => {\n  if (!iconName) { return }\n\n  const matchedIconConfiguration = findMatchedIconConfiguration(iconName, globalIconConfig, namesToIgnore)\n  const resolvedIconConfiguration = merge(resolveIconConfiguration(iconName, matchedIconConfiguration), matchedIconConfiguration)\n\n  namesToIgnore = [...namesToIgnore, matchedIconConfiguration.name.toString()]\n\n  return merge(\n    findIconConfiguration(resolvedIconConfiguration.to, globalIconConfig, namesToIgnore),\n    resolvedIconConfiguration,\n  )\n}\n\n/** Removes name, to, resolveFromRegex and resolve from IconConfiguration */\nconst iconPropsFromIconConfiguration = (iconConfiguration: IconConfiguration): IconProps => {\n  const junkKeys = ['name', 'to', 'resolve', 'resolveFromRegex']\n\n  const configuration: Record<string, string> = iconConfiguration as any\n  junkKeys.forEach((key) => { delete configuration[key] })\n  return configuration\n}\n\nexport const getIconConfiguration = (name: string, iconConfig: IconConfig = getIconConfig()): IconProps => {\n  const configuration = findIconConfiguration(name, iconConfig)\n\n  if (configuration === undefined) { return {} }\n\n  return iconPropsFromIconConfiguration(configuration)\n}\n","import { getIconConfiguration } from './icon-helpers'\n\nexport const useIcons = (props: any) => {\n  return {\n    // TODO: export here function that can dynamically change icons config\n    getIcon: (name: string) => getIconConfiguration(name),\n  }\n}\n","<template>\n  <component\n    v-bind=\"computedAttrs\"\n    aria-hidden=\"true\"\n    notranslate\n    class=\"va-icon\"\n    :is=\"computedTag\"\n    :class=\"computedClass\"\n    :style=\"computedStyle\"\n  >\n    <slot>{{ iconConfig.content }}</slot>\n  </component>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, computed } from 'vue'\nimport omit from 'lodash/omit'\n\nimport { useColors } from '../../services/color-config/color-config'\nimport { useIcons } from '../../services/icon-config/icon-config'\nimport { useSize, useSizeProps } from '../../composables/useSize'\n\nexport default defineComponent({\n  name: 'VaIcon',\n  props: {\n    ...useSizeProps,\n    name: { type: String as PropType<string>, default: '' },\n    tag: { type: String as PropType<string> },\n    component: { type: Object as PropType<Record<string, any>> },\n    color: { type: String as PropType<string> },\n    rotation: { type: [String, Number] as PropType<number | string> },\n    spin: { type: [String, Boolean] as PropType<string | boolean> },\n    flip: {\n      type: String as PropType<'off' | 'horizontal' | 'vertical' | 'both'>,\n      default: 'off',\n      validator: (value: string) => ['off', 'horizontal', 'vertical', 'both'].includes(value),\n    },\n  },\n  setup (props, { attrs }) {\n    const { getColor } = useColors()\n    const { sizeComputed } = useSize(props)\n    const { getIcon } = useIcons(props)\n\n    const iconConfig = computed(() => getIcon(props.name))\n\n    const computedTag = computed(() => props.component || props.tag || iconConfig.value.component || iconConfig.value.tag || 'i')\n\n    const computedAttrs = computed(() => ({ ...iconConfig.value.attrs, ...omit(attrs, ['class']) }))\n\n    const getSpinClass = (spin?: string | boolean) => {\n      if (!spin) { return }\n      return spin === 'counter-clockwise' ? 'va-icon--spin-reverse' : 'va-icon--spin'\n    }\n\n    const computedClass = computed(() => [\n      iconConfig.value.class,\n      getSpinClass(props.spin ?? iconConfig.value.spin),\n    ])\n\n    const transformStyle = computed(() => {\n      const rotation = props.rotation ? `rotate(${props.rotation}deg)` : ''\n\n      const flipY = (props.flip === 'vertical' || props.flip === 'both') ? -1 : 1\n      const flipX = (props.flip === 'horizontal' || props.flip === 'both') ? -1 : 1\n      const scale = props.flip === 'off' ? '' : `scale(${flipY}, ${flipX})`\n\n      return `${scale} ${rotation}`.trim()\n    })\n\n    const computedStyle = computed(() => ({\n      transform: transformStyle.value,\n      cursor: attrs.onClick ? 'pointer' : null,\n      color: props.color ? getColor(props.color) : iconConfig.value.color,\n      fontSize: sizeComputed.value,\n    }))\n\n    return {\n      iconConfig,\n      computedTag,\n      computedAttrs,\n      computedClass,\n      computedStyle,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"variables\";\n\n.va-icon {\n  vertical-align: var(--va-icon-vertical-align);\n  user-select: var(--va-icon-user-select);\n\n  &#{&} {\n    // need 2 classes to make it work\n    font-style: normal;\n  }\n\n  &--spin {\n    animation: va-icon--spin-animation 1500ms linear infinite;\n\n    &-reverse {\n      animation: va-icon--spin-animation 1500ms linear infinite;\n      animation-direction: reverse;\n    }\n  }\n\n  @keyframes va-icon--spin-animation {\n    from {\n      transform: rotate(0deg);\n    }\n\n    to {\n      transform: rotate(360deg);\n    }\n  }\n}\n</style>\n","<template>\n  <component\n    v-bind=\"computedAttrs\"\n    aria-hidden=\"true\"\n    notranslate\n    class=\"va-icon\"\n    :is=\"computedTag\"\n    :class=\"computedClass\"\n    :style=\"computedStyle\"\n  >\n    <slot>{{ iconConfig.content }}</slot>\n  </component>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, computed } from 'vue'\nimport omit from 'lodash/omit'\n\nimport { useColors } from '../../services/color-config/color-config'\nimport { useIcons } from '../../services/icon-config/icon-config'\nimport { useSize, useSizeProps } from '../../composables/useSize'\n\nexport default defineComponent({\n  name: 'VaIcon',\n  props: {\n    ...useSizeProps,\n    name: { type: String as PropType<string>, default: '' },\n    tag: { type: String as PropType<string> },\n    component: { type: Object as PropType<Record<string, any>> },\n    color: { type: String as PropType<string> },\n    rotation: { type: [String, Number] as PropType<number | string> },\n    spin: { type: [String, Boolean] as PropType<string | boolean> },\n    flip: {\n      type: String as PropType<'off' | 'horizontal' | 'vertical' | 'both'>,\n      default: 'off',\n      validator: (value: string) => ['off', 'horizontal', 'vertical', 'both'].includes(value),\n    },\n  },\n  setup (props, { attrs }) {\n    const { getColor } = useColors()\n    const { sizeComputed } = useSize(props)\n    const { getIcon } = useIcons(props)\n\n    const iconConfig = computed(() => getIcon(props.name))\n\n    const computedTag = computed(() => props.component || props.tag || iconConfig.value.component || iconConfig.value.tag || 'i')\n\n    const computedAttrs = computed(() => ({ ...iconConfig.value.attrs, ...omit(attrs, ['class']) }))\n\n    const getSpinClass = (spin?: string | boolean) => {\n      if (!spin) { return }\n      return spin === 'counter-clockwise' ? 'va-icon--spin-reverse' : 'va-icon--spin'\n    }\n\n    const computedClass = computed(() => [\n      iconConfig.value.class,\n      getSpinClass(props.spin ?? iconConfig.value.spin),\n    ])\n\n    const transformStyle = computed(() => {\n      const rotation = props.rotation ? `rotate(${props.rotation}deg)` : ''\n\n      const flipY = (props.flip === 'vertical' || props.flip === 'both') ? -1 : 1\n      const flipX = (props.flip === 'horizontal' || props.flip === 'both') ? -1 : 1\n      const scale = props.flip === 'off' ? '' : `scale(${flipY}, ${flipX})`\n\n      return `${scale} ${rotation}`.trim()\n    })\n\n    const computedStyle = computed(() => ({\n      transform: transformStyle.value,\n      cursor: attrs.onClick ? 'pointer' : null,\n      color: props.color ? getColor(props.color) : iconConfig.value.color,\n      fontSize: sizeComputed.value,\n    }))\n\n    return {\n      iconConfig,\n      computedTag,\n      computedAttrs,\n      computedClass,\n      computedStyle,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"variables\";\n\n.va-icon {\n  vertical-align: var(--va-icon-vertical-align);\n  user-select: var(--va-icon-user-select);\n\n  &#{&} {\n    // need 2 classes to make it work\n    font-style: normal;\n  }\n\n  &--spin {\n    animation: va-icon--spin-animation 1500ms linear infinite;\n\n    &-reverse {\n      animation: va-icon--spin-animation 1500ms linear infinite;\n      animation-direction: reverse;\n    }\n  }\n\n  @keyframes va-icon--spin-animation {\n    from {\n      transform: rotate(0deg);\n    }\n\n    to {\n      transform: rotate(360deg);\n    }\n  }\n}\n</style>\n"],"names":["isArray","require$$0","isSymbol","require$$1","reIsDeepProp","reIsPlainProp","_isKey","isKey","value","object","type","test","Object","MapCache","memoize","func","resolver","TypeError","memoized","args","arguments","key","apply","this","cache","has","get","result","set","Cache","rePropName","reEscapeChar","stringToPath","memoizeCapped","size","clear","string","charCodeAt","push","replace","match","number","quote","subString","toString","require$$3","_castPath","castPath","_toKey","toKey","_baseGet","baseGet","path","index","length","undefined","baseSlice","last","array","parent","isPlainObject","flatten","overRest","setToString","require$$2","_flatRest","flatRest","arrayMap","baseClone","baseUnset","copyObject","require$$4","customOmitClone","getAllKeysIn","require$$7","require$$6","paths","isDeep","CLONE_DEEP_FLAG","regexGroupsValues","str","regex","global","matchAll","map","g","slice","dynamicSegmentRegex","dynamicSegmentStringToRegex","template","dynamicSegments","params","dynamicSegmentsNames","values","dynamicSegmentsValues","reduce","acc","paramValue","i","isIconConfigurationString","config","name","isIconConfigurationRegex","RegExp","isMatchConfiguration","iconName","iconConfiguration","templateRegex","strictMatch","isMatchDynamicSegments","resolveIconConfiguration","resolve","resolveIconConfigurationString","iconConfig","Error","resolveFromRegex","resolveIconConfigurationRegex","findIconConfiguration","globalIconConfig","namesToIgnore","matchedIconConfiguration","matchedConfig","find","includes","findMatchedIconConfiguration","resolvedIconConfiguration","merge","to","getIconConfiguration","getGlobalConfig","icons","getIconConfig","configuration","forEach","iconPropsFromIconConfiguration","useIcons","props","getIcon","defineComponent","useSizeProps","String","default","tag","component","color","rotation","Number","spin","Boolean","flip","validator","setup","attrs","getColor","useColors","sizeComputed","useSize","computed","computedTag","computedAttrs","omit","getSpinClass","computedClass","class","transformStyle","flipY","flipX","trim","computedStyle","transform","cursor","onClick","fontSize","_ctx","_mergeProps","notranslate","style","_renderSlot","content"],"mappings":"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"}