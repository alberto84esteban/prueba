{"version":3,"file":"useFocus.js","sources":["../../src/composables/useFocus.ts"],"sourcesContent":["import { ref, onMounted, onBeforeUnmount, Ref } from 'vue'\n\nexport const useFocusEmits = ['focus', 'blur']\n\nexport function useFocus (\n  el?: Ref<HTMLElement | null | undefined>,\n  emit?: (event: 'focus' | 'blur', e?: Event) => void,\n) {\n  const isFocused = ref(false)\n\n  const onFocus = (e?: Event) => {\n    isFocused.value = true\n    emit?.('focus', e)\n  }\n\n  const onBlur = (e?: Event) => {\n    isFocused.value = false\n    emit?.('blur', e)\n  }\n\n  const focus = (): void => {\n    el?.value?.focus()\n  }\n\n  const blur = (): void => {\n    el?.value?.blur()\n  }\n\n  if (el) {\n    onMounted(() => {\n      el.value?.addEventListener('focus', onFocus)\n      el.value?.addEventListener('blur', onBlur)\n    })\n    onBeforeUnmount(() => {\n      el.value?.removeEventListener('focus', onFocus)\n      el.value?.removeEventListener('blur', onBlur)\n    })\n  }\n\n  return {\n    isFocused,\n    onFocus,\n    onBlur,\n    focus,\n    blur,\n  }\n}\n"],"names":["useFocusEmits","useFocus","el","emit","isFocused","ref","onFocus","e","value","onBlur","onMounted","addEventListener","onBeforeUnmount","removeEventListener","focus","blur"],"mappings":"oEAEaA,EAAgB,CAAC,QAAS,iBAEvBC,SACdC,EACAC,GAEA,MAAMC,EAAYC,GAAI,GAEhBC,QAAWC,IACfH,EAAUI,OAAQ,EAClBL,MAAAA,GAAAA,EAAO,QAASI,IAGZE,OAAUF,IACdH,EAAUI,OAAQ,EAClBL,MAAAA,GAAAA,EAAO,OAAQI,IAsBjB,OAXIL,IACFQ,GAAU,uBACRR,EAAGM,sBAAOG,iBAAiB,QAASL,mBACpCJ,EAAGM,sBAAOG,iBAAiB,OAAQF,WAErCG,GAAgB,uBACdV,EAAGM,sBAAOK,oBAAoB,QAASP,mBACvCJ,EAAGM,sBAAOK,oBAAoB,OAAQJ,YAInC,CACLL,UAAAA,EACAE,QAAAA,QACAG,OAAAA,OACAK,MAvBY,qBACZZ,MAAAA,SAAAA,EAAIM,sBAAOM,SAuBXC,KApBW,qBACXb,MAAAA,SAAAA,EAAIM,sBAAOO"}