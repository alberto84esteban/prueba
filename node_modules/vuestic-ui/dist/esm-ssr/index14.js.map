{"version":3,"file":"index14.js","sources":["../../src/components/va-checkbox/useSelectable.ts","../../src/components/va-checkbox/VaCheckbox.vue","../../src/components/va-checkbox/VaCheckbox.vue?vue&type=template&id=828af530&lang.js","../../src/components/va-checkbox/index.ts"],"sourcesContent":["import { PropType, computed, SetupContext, Ref } from 'vue'\n\nimport { useStateful, useStatefulProps, StatefulProps } from '../../composables/useStateful'\nimport { useLoadingProps, LoadingProps } from '../../composables/useLoading'\nimport { useValidation, useValidationProps, ValidationProps, useValidationEmits } from '../../composables/useValidation'\n\nexport interface SelectableProps extends StatefulProps<unknown>, LoadingProps, ValidationProps {\n  arrayValue: unknown | null,\n  label: string,\n  leftLabel: boolean,\n  trueValue: boolean,\n  falseValue: boolean,\n  indeterminate: boolean,\n  indeterminateValue: unknown | null,\n  disabled: boolean,\n  readonly: boolean,\n}\n\ntype Elements = {\n  input: Ref<HTMLElement | null>,\n  label: Ref<HTMLElement | null>,\n  container: Ref<HTMLElement | null>,\n}\n\nexport const useSelectableProps = {\n  ...useStatefulProps,\n  ...useLoadingProps,\n  ...useValidationProps,\n  arrayValue: { type: null as any as PropType<unknown>, default: null },\n  label: { type: String as PropType<string>, default: '' },\n  leftLabel: { type: Boolean as PropType<boolean>, default: false },\n  trueValue: { type: null as any as PropType<unknown>, default: true },\n  falseValue: { type: null as any as PropType<unknown>, default: false },\n  indeterminate: { type: Boolean as PropType<boolean>, default: false },\n  indeterminateValue: { type: null as any as PropType<unknown>, default: null },\n  disabled: { type: Boolean, default: false },\n  readonly: { type: Boolean, default: false },\n}\n\nexport const useSelectableEmits = [...useValidationEmits, 'update:modelValue', 'focus', 'blur']\n\nconst checkDuplicates = (props: SelectableProps) => {\n  // Just validating state values.\n  const values: unknown[] = [props.falseValue, props.trueValue]\n\n  if (props.indeterminate) {\n    values.push(props.indeterminateValue)\n  }\n\n  const hasDuplicates = new Set(values).size !== values.length\n\n  if (hasDuplicates) {\n    throw new Error('falseValue, trueValue, indeterminateValue props should have strictly different values, which is not the case.')\n  }\n}\n\nexport const useSelectable = (\n  props: SelectableProps,\n  emit: SetupContext['emit'],\n  { input, label, container }: Elements,\n) => {\n  checkDuplicates(props)\n\n  /** @public */\n  const reset = () => emit('update:modelValue', false)\n  const focus = () => input.value?.focus()\n\n  const { isFocused, computedError, computedErrorMessages, validate } = useValidation(props, emit, reset, focus)\n  const { valueComputed } = useStateful(props, emit)\n\n  const isElementRelated = (element: HTMLElement | null) => {\n    return !!element && [label.value, container.value].includes(element)\n  }\n  const onBlur = (event: FocusEvent) => {\n    if ((input.value === event.target) && !isElementRelated(event.relatedTarget as HTMLElement)) {\n      isFocused.value = false\n      computedError.value = false\n      validate()\n      emit('blur', event)\n    }\n  }\n  const onFocus = (event: FocusEvent) => emit('focus', event)\n\n  const isIndeterminate = computed(() => !!props.indeterminate && valueComputed.value === props.indeterminateValue)\n  const modelIsArray = computed(() => props.arrayValue !== null)\n  const isChecked = computed(() => {\n    if (modelIsArray.value) {\n      return (props.modelValue as unknown[])?.includes(props.arrayValue)\n    }\n\n    return valueComputed.value === props.trueValue\n  })\n  const toggleSelection = () => {\n    if (props.readonly || props.disabled || props.loading) {\n      return\n    }\n\n    // For array access we pretend computedValue does not exist and use modelValue + emit input directly.\n    if (modelIsArray.value) {\n      if (!props.modelValue) {\n        emit('update:modelValue', [props.arrayValue])\n      } else if (!Array.isArray(props.modelValue)) {\n        return\n      } else if (props.modelValue.includes(props.arrayValue)) {\n        emit('update:modelValue', props.modelValue.filter((option) => option !== props.arrayValue))\n      } else {\n        emit('update:modelValue', props.modelValue.concat(props.arrayValue))\n      }\n      return\n    }\n\n    if (props.indeterminate) {\n      if (isIndeterminate.value) {\n        valueComputed.value = props.trueValue\n      } else if (isChecked.value) {\n        valueComputed.value = props.falseValue\n      } else {\n        // unchecked\n        valueComputed.value = props.indeterminateValue\n      }\n      return\n    }\n\n    if (isChecked.value) {\n      valueComputed.value = props.falseValue\n    } else {\n      valueComputed.value = props.trueValue\n    }\n  }\n\n  return {\n    isChecked,\n    isIndeterminate,\n    onBlur,\n    onFocus,\n    toggleSelection,\n    reset,\n    focus,\n    computedError,\n    computedErrorMessages,\n  }\n}\n","<template>\n  <VaMessageListWrapper\n    class=\"va-checkbox\"\n    :class=\"computedClass\"\n    :disabled=\"disabled\"\n    :success=\"success\"\n    :messages=\"messages\"\n    :error=\"computedError\"\n    :error-messages=\"computedErrorMessages\"\n    :error-count=\"errorCount\"\n  >\n    <div\n      class=\"va-checkbox__input-container\"\n      @click=\"toggleSelection\"\n      tabindex=\"-1\"\n      @blur=\"onBlur\"\n      ref=\"container\"\n    >\n      <div\n        class=\"va-checkbox__square\"\n        :style=\"inputStyle\"\n        @selectstart.prevent\n      >\n        <input\n          ref=\"input\"\n          type=\"checkbox\"\n          role=\"checkbox\"\n          readonly\n          :id=\"id\"\n          :name=\"name\"\n          v-on=\"keyboardFocusListeners\"\n          @focus=\"onFocus\"\n          @blur=\"onBlur\"\n          class=\"va-checkbox__input\"\n          @click.stop.prevent\n          @keypress.prevent=\"toggleSelection\"\n          :disabled=\"disabled\"\n          :indeterminate=\"indeterminate\"\n        >\n        <va-icon\n          class=\"va-checkbox__icon\"\n          :name=\"computedIconName\"\n          size=\"20px\"\n        />\n      </div>\n      <div\n        class=\"va-checkbox__label\"\n        :style=\"labelStyle\"\n        ref=\"label\"\n        tabindex=\"-1\"\n        @blur=\"onBlur\"\n      >\n        <slot name=\"label\">{{ label }}</slot>\n      </div>\n    </div>\n  </VaMessageListWrapper>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, PropType, ref } from 'vue'\n\nimport { VaMessageListWrapper } from '../va-input'\nimport VaIcon from '../va-icon/'\n\nimport { useColors } from '../../composables/useColor'\nimport useKeyboardOnlyFocus from '../../composables/useKeyboardOnlyFocus'\nimport { useSelectable, useSelectableProps, useSelectableEmits } from './useSelectable'\n\nexport default defineComponent({\n  name: 'VaCheckbox',\n  components: { VaMessageListWrapper, VaIcon },\n  emits: useSelectableEmits,\n  props: {\n    ...useSelectableProps,\n    modelValue: { type: null as any as PropType<unknown>, default: false },\n    color: { type: String as PropType<string>, default: 'primary' },\n    checkedIcon: { type: String as PropType<string>, default: 'check' },\n    indeterminateIcon: { type: String as PropType<string>, default: 'remove' },\n    id: { type: String as PropType<string>, default: '' },\n    name: { type: String as PropType<string>, default: '' },\n  },\n  setup (props, { emit }) {\n    const elements = {\n      container: ref(null),\n      input: ref(null),\n      label: ref(null),\n    }\n\n    const {\n      isChecked,\n      computedError,\n      isIndeterminate,\n      computedErrorMessages,\n      toggleSelection,\n      onBlur,\n      onFocus,\n    } = useSelectable(props, emit, elements)\n    const { getColor } = useColors()\n    const { hasKeyboardFocus, keyboardFocusListeners } = useKeyboardOnlyFocus()\n\n    const computedClass = computed(() => ({\n      'va-checkbox--selected': isChecked.value,\n      'va-checkbox--readonly': props.readonly,\n      'va-checkbox--disabled': props.disabled,\n      'va-checkbox--indeterminate': props.indeterminate,\n      'va-checkbox--error': computedError.value,\n      'va-checkbox--left-label': props.leftLabel,\n      'va-checkbox--on-keyboard-focus': hasKeyboardFocus.value,\n    }))\n\n    const labelStyle = computed(() => {\n      return {\n        color: computedError.value ? getColor('danger') : '',\n        padding: !props.label\n          ? ''\n          : props.leftLabel\n            ? '0 0.5rem 0 0'\n            : '0 0 0 0.5rem',\n      }\n    })\n\n    const inputStyle = computed(() => {\n      const isActive = isChecked.value || isIndeterminate.value\n      const style = {\n        background: isActive ? getColor(props.color) : '',\n        borderColor: isActive ? getColor(props.color) : '',\n      }\n\n      if (computedError.value) {\n        style.borderColor = getColor('danger')\n      }\n\n      return style\n    })\n\n    const computedIconName = computed(() => props.indeterminate && isIndeterminate.value\n      ? props.indeterminateIcon\n      : props.checkedIcon,\n    )\n\n    return {\n      computedClass,\n      labelStyle,\n      inputStyle,\n      computedIconName,\n      computedError,\n      computedErrorMessages,\n      keyboardFocusListeners,\n      toggleSelection,\n      onBlur,\n      onFocus,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-checkbox {\n  display: var(--va-checkbox-display);\n  max-width: var(--va-checkbox-max-width);\n  font-family: var(--va-font-family);\n\n  &__input-container {\n    align-items: var(--va-checkbox-input-align-items);\n    display: var(--va-checkbox-input-display);\n    padding: var(--va-checkbox-input-padding);\n    cursor: var(--va-checkbox-input-cursor);\n\n    @at-root {\n      .va-checkbox--disabled & {\n        @include va-disabled();\n\n        cursor: var(--va-checkbox-disabled-cursor);\n      }\n\n      .va-checkbox--readonly & {\n        cursor: var(--va-checkbox-readonly-cursor);\n      }\n\n      .va-checkbox--left-label & {\n        flex-direction: row-reverse;\n      }\n    }\n  }\n\n  #{&}__square {\n    @include flex-center();\n\n    width: var(--va-checkbox-square-width);\n    min-width: var(--va-checkbox-square-min-width);\n    height: var(--va-checkbox-square-height);\n    position: var(--va-checkbox-square-position);\n    background-color: var(--va-checkbox-square-background-color, var(--va-background-color));\n    border: var(--va-checkbox-square-border, var(--va-control-border));\n    border-radius: var(--va-checkbox-square-border-radius, var(--va-square-border-radius));\n\n    @at-root {\n      .va-checkbox--on-keyboard-focus#{&} {\n        transition: all, 0.6s, ease-in;\n        box-shadow: 0 0 0.5rem 0 rgba(0, 0, 0, 0.3);\n      }\n    }\n  }\n\n  &__input {\n    opacity: 0;\n    width: 0;\n    height: 0 !important;\n  }\n\n  &__label {\n    display: var(--va-checkbox-label-display);\n    position: var(--va-checkbox-label-position);\n  }\n\n  &__icon {\n    pointer-events: var(--va-checkbox-icon-pointer-events);\n    position: var(--va-checkbox-icon-position);\n    color: var(--va-checkbox-icon-color);\n  }\n\n  &--selected {\n    .va-checkbox {\n      &__icon {\n        color: var(--va-checkbox-selected-icon-color);\n      }\n    }\n  }\n\n  &--indeterminate {\n    .va-checkbox {\n      &__icon {\n        color: var(--va-checkbox-indeterminate-icon-color);\n      }\n    }\n  }\n}\n</style>\n","<template>\n  <VaMessageListWrapper\n    class=\"va-checkbox\"\n    :class=\"computedClass\"\n    :disabled=\"disabled\"\n    :success=\"success\"\n    :messages=\"messages\"\n    :error=\"computedError\"\n    :error-messages=\"computedErrorMessages\"\n    :error-count=\"errorCount\"\n  >\n    <div\n      class=\"va-checkbox__input-container\"\n      @click=\"toggleSelection\"\n      tabindex=\"-1\"\n      @blur=\"onBlur\"\n      ref=\"container\"\n    >\n      <div\n        class=\"va-checkbox__square\"\n        :style=\"inputStyle\"\n        @selectstart.prevent\n      >\n        <input\n          ref=\"input\"\n          type=\"checkbox\"\n          role=\"checkbox\"\n          readonly\n          :id=\"id\"\n          :name=\"name\"\n          v-on=\"keyboardFocusListeners\"\n          @focus=\"onFocus\"\n          @blur=\"onBlur\"\n          class=\"va-checkbox__input\"\n          @click.stop.prevent\n          @keypress.prevent=\"toggleSelection\"\n          :disabled=\"disabled\"\n          :indeterminate=\"indeterminate\"\n        >\n        <va-icon\n          class=\"va-checkbox__icon\"\n          :name=\"computedIconName\"\n          size=\"20px\"\n        />\n      </div>\n      <div\n        class=\"va-checkbox__label\"\n        :style=\"labelStyle\"\n        ref=\"label\"\n        tabindex=\"-1\"\n        @blur=\"onBlur\"\n      >\n        <slot name=\"label\">{{ label }}</slot>\n      </div>\n    </div>\n  </VaMessageListWrapper>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, PropType, ref } from 'vue'\n\nimport { VaMessageListWrapper } from '../va-input'\nimport VaIcon from '../va-icon/'\n\nimport { useColors } from '../../composables/useColor'\nimport useKeyboardOnlyFocus from '../../composables/useKeyboardOnlyFocus'\nimport { useSelectable, useSelectableProps, useSelectableEmits } from './useSelectable'\n\nexport default defineComponent({\n  name: 'VaCheckbox',\n  components: { VaMessageListWrapper, VaIcon },\n  emits: useSelectableEmits,\n  props: {\n    ...useSelectableProps,\n    modelValue: { type: null as any as PropType<unknown>, default: false },\n    color: { type: String as PropType<string>, default: 'primary' },\n    checkedIcon: { type: String as PropType<string>, default: 'check' },\n    indeterminateIcon: { type: String as PropType<string>, default: 'remove' },\n    id: { type: String as PropType<string>, default: '' },\n    name: { type: String as PropType<string>, default: '' },\n  },\n  setup (props, { emit }) {\n    const elements = {\n      container: ref(null),\n      input: ref(null),\n      label: ref(null),\n    }\n\n    const {\n      isChecked,\n      computedError,\n      isIndeterminate,\n      computedErrorMessages,\n      toggleSelection,\n      onBlur,\n      onFocus,\n    } = useSelectable(props, emit, elements)\n    const { getColor } = useColors()\n    const { hasKeyboardFocus, keyboardFocusListeners } = useKeyboardOnlyFocus()\n\n    const computedClass = computed(() => ({\n      'va-checkbox--selected': isChecked.value,\n      'va-checkbox--readonly': props.readonly,\n      'va-checkbox--disabled': props.disabled,\n      'va-checkbox--indeterminate': props.indeterminate,\n      'va-checkbox--error': computedError.value,\n      'va-checkbox--left-label': props.leftLabel,\n      'va-checkbox--on-keyboard-focus': hasKeyboardFocus.value,\n    }))\n\n    const labelStyle = computed(() => {\n      return {\n        color: computedError.value ? getColor('danger') : '',\n        padding: !props.label\n          ? ''\n          : props.leftLabel\n            ? '0 0.5rem 0 0'\n            : '0 0 0 0.5rem',\n      }\n    })\n\n    const inputStyle = computed(() => {\n      const isActive = isChecked.value || isIndeterminate.value\n      const style = {\n        background: isActive ? getColor(props.color) : '',\n        borderColor: isActive ? getColor(props.color) : '',\n      }\n\n      if (computedError.value) {\n        style.borderColor = getColor('danger')\n      }\n\n      return style\n    })\n\n    const computedIconName = computed(() => props.indeterminate && isIndeterminate.value\n      ? props.indeterminateIcon\n      : props.checkedIcon,\n    )\n\n    return {\n      computedClass,\n      labelStyle,\n      inputStyle,\n      computedIconName,\n      computedError,\n      computedErrorMessages,\n      keyboardFocusListeners,\n      toggleSelection,\n      onBlur,\n      onFocus,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-checkbox {\n  display: var(--va-checkbox-display);\n  max-width: var(--va-checkbox-max-width);\n  font-family: var(--va-font-family);\n\n  &__input-container {\n    align-items: var(--va-checkbox-input-align-items);\n    display: var(--va-checkbox-input-display);\n    padding: var(--va-checkbox-input-padding);\n    cursor: var(--va-checkbox-input-cursor);\n\n    @at-root {\n      .va-checkbox--disabled & {\n        @include va-disabled();\n\n        cursor: var(--va-checkbox-disabled-cursor);\n      }\n\n      .va-checkbox--readonly & {\n        cursor: var(--va-checkbox-readonly-cursor);\n      }\n\n      .va-checkbox--left-label & {\n        flex-direction: row-reverse;\n      }\n    }\n  }\n\n  #{&}__square {\n    @include flex-center();\n\n    width: var(--va-checkbox-square-width);\n    min-width: var(--va-checkbox-square-min-width);\n    height: var(--va-checkbox-square-height);\n    position: var(--va-checkbox-square-position);\n    background-color: var(--va-checkbox-square-background-color, var(--va-background-color));\n    border: var(--va-checkbox-square-border, var(--va-control-border));\n    border-radius: var(--va-checkbox-square-border-radius, var(--va-square-border-radius));\n\n    @at-root {\n      .va-checkbox--on-keyboard-focus#{&} {\n        transition: all, 0.6s, ease-in;\n        box-shadow: 0 0 0.5rem 0 rgba(0, 0, 0, 0.3);\n      }\n    }\n  }\n\n  &__input {\n    opacity: 0;\n    width: 0;\n    height: 0 !important;\n  }\n\n  &__label {\n    display: var(--va-checkbox-label-display);\n    position: var(--va-checkbox-label-position);\n  }\n\n  &__icon {\n    pointer-events: var(--va-checkbox-icon-pointer-events);\n    position: var(--va-checkbox-icon-position);\n    color: var(--va-checkbox-icon-color);\n  }\n\n  &--selected {\n    .va-checkbox {\n      &__icon {\n        color: var(--va-checkbox-selected-icon-color);\n      }\n    }\n  }\n\n  &--indeterminate {\n    .va-checkbox {\n      &__icon {\n        color: var(--va-checkbox-indeterminate-icon-color);\n      }\n    }\n  }\n}\n</style>\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\nimport VaCheckbox from './VaCheckbox.vue'\n\nexport default withConfigTransport(VaCheckbox)\n"],"names":["useSelectableProps","useStatefulProps","useLoadingProps","useValidationProps","arrayValue","type","default","label","String","leftLabel","Boolean","trueValue","falseValue","indeterminate","indeterminateValue","disabled","readonly","useSelectableEmits","useValidationEmits","useSelectable","props","emit","input","container","values","push","Set","size","length","Error","checkDuplicates","reset","focus","value","isFocused","computedError","computedErrorMessages","validate","useValidation","valueComputed","useStateful","isIndeterminate","computed","modelIsArray","isChecked","modelValue","includes","onBlur","event","element","target","relatedTarget","onFocus","toggleSelection","loading","Array","isArray","filter","option","concat","defineComponent","name","components","VaMessageListWrapper","VaIcon","emits","color","checkedIcon","indeterminateIcon","id","setup","elements","ref","getColor","useColors","hasKeyboardFocus","keyboardFocusListeners","useKeyboardOnlyFocus","computedClass","labelStyle","padding","inputStyle","isActive","style","background","borderColor","computedIconName","_mergeProps","class","_ctx","success","messages","error","_createVNode","onClick","tabindex","onSelectstart","role","_toHandlers","onKeypress","_renderSlot","withConfigTransport","VaCheckbox"],"mappings":"o/BAwBO,MAAMA,EAAqB,IAC7BC,KACAC,KACAC,EACHC,WAAY,CAAEC,KAAM,KAAkCC,QAAS,MAC/DC,MAAO,CAAEF,KAAMG,OAA4BF,QAAS,IACpDG,UAAW,CAAEJ,KAAMK,QAA8BJ,SAAS,GAC1DK,UAAW,CAAEN,KAAM,KAAkCC,SAAS,GAC9DM,WAAY,CAAEP,KAAM,KAAkCC,SAAS,GAC/DO,cAAe,CAAER,KAAMK,QAA8BJ,SAAS,GAC9DQ,mBAAoB,CAAET,KAAM,KAAkCC,QAAS,MACvES,SAAU,CAAEV,KAAMK,QAASJ,SAAS,GACpCU,SAAU,CAAEX,KAAMK,QAASJ,SAAS,IAGzBW,EAAqB,IAAIC,EAAoB,oBAAqB,QAAS,QAiB3EC,cAAgB,CAC3BC,EACAC,GACEC,MAAAA,EAAOf,MAAAA,EAAOgB,UAAAA,MAlBM,CAACH,IAEvB,MAAMI,EAAoB,CAACJ,EAAMR,WAAYQ,EAAMT,WAQnD,GANIS,EAAMP,eACRW,EAAOC,KAAKL,EAAMN,oBAGE,IAAIY,IAAIF,GAAQG,OAASH,EAAOI,OAGpD,MAAM,IAAIC,MAAM,kHASlBC,CAAgBV,GAGhB,MAAMW,MAAQ,IAAMV,EAAK,qBAAqB,GACxCW,MAAQ,WAAM,iBAAAV,EAAMW,4BAAOD,UAE3BE,UAAEA,EAASC,cAAEA,EAAaC,sBAAEA,EAAqBC,SAAEA,GAAaC,EAAclB,EAAOC,EAAMU,MAAOC,QAClGO,cAAEA,GAAkBC,EAAYpB,EAAOC,GAevCoB,EAAkBC,GAAS,MAAQtB,EAAMP,eAAiB0B,EAAcN,QAAUb,EAAMN,qBACxF6B,EAAeD,GAAS,IAA2B,OAArBtB,EAAMhB,aACpCwC,EAAYF,GAAS,WACzB,OAAIC,EAAaV,gBACPb,EAAMyB,iCAA0BC,SAAS1B,EAAMhB,YAGlDmC,EAAcN,QAAUb,EAAMT,aAwCvC,MAAO,CACLiC,UAAAA,EACAH,gBAAAA,EACAM,OA5DcC,IAHS,IAACC,EAInB3B,EAAMW,QAAUe,EAAME,SAJHD,EAIgCD,EAAMG,gBAH1C,CAAC5C,EAAM0B,MAAOV,EAAUU,OAAOa,SAASG,KAI1Df,EAAUD,OAAQ,EAClBE,EAAcF,OAAQ,EACtBI,IACAhB,EAAK,OAAQ2B,KAwDfI,QArDeJ,GAAsB3B,EAAK,QAAS2B,GAsDnDK,gBA3CsB,KACtB,KAAIjC,EAAMJ,UAAYI,EAAML,UAAYK,EAAMkC,SAK9C,GAAIX,EAAaV,MACf,GAAKb,EAAMyB,WAEJ,CAAA,IAAKU,MAAMC,QAAQpC,EAAMyB,YAC9B,OACSzB,EAAMyB,WAAWC,SAAS1B,EAAMhB,YACzCiB,EAAK,oBAAqBD,EAAMyB,WAAWY,QAAQC,GAAWA,IAAWtC,EAAMhB,cAE/EiB,EAAK,oBAAqBD,EAAMyB,WAAWc,OAAOvC,EAAMhB,kBANxDiB,EAAK,oBAAqB,CAACD,EAAMhB,kBAWjCgB,EAAMP,cACJ4B,EAAgBR,MAClBM,EAAcN,MAAQb,EAAMT,UACnBiC,EAAUX,MACnBM,EAAcN,MAAQb,EAAMR,WAG5B2B,EAAcN,MAAQb,EAAMN,mBAK5B8B,EAAUX,MACZM,EAAcN,MAAQb,EAAMR,WAE5B2B,EAAcN,MAAQb,EAAMT,WAU9BoB,MAAAA,MACAC,MAAAA,MACAG,cAAAA,EACAC,sBAAAA,ICvEJ,MAAewB,EAAgB,CAC7BC,KAAM,aACNC,WAAY,sBAAEC,EAAsBC,OAAAA,GACpCC,MAAOhD,EACPG,MAAO,IACFpB,EACH6C,WAAY,CAAExC,KAAM,KAAkCC,SAAS,GAC/D4D,MAAO,CAAE7D,KAAMG,OAA4BF,QAAS,WACpD6D,YAAa,CAAE9D,KAAMG,OAA4BF,QAAS,SAC1D8D,kBAAmB,CAAE/D,KAAMG,OAA4BF,QAAS,UAChE+D,GAAI,CAAEhE,KAAMG,OAA4BF,QAAS,IACjDuD,KAAM,CAAExD,KAAMG,OAA4BF,QAAS,KAErDgE,MAAOlD,GAAOC,KAAEA,IACd,MAAMkD,EAAW,CACfhD,UAAWiD,EAAI,MACflD,MAAOkD,EAAI,MACXjE,MAAOiE,EAAI,QAGP5B,UACJA,EAAST,cACTA,EAAaM,gBACbA,EAAeL,sBACfA,EAAqBiB,gBACrBA,EAAeN,OACfA,EAAMK,QACNA,GACEjC,cAAcC,EAAOC,EAAMkD,IACzBE,SAAEA,GAAaC,KACfC,iBAAEA,EAAgBC,uBAAEA,GAA2BC,IA0CrD,MAAO,CACLC,cAzCoBpC,GAAS,MAC7B,wBAAyBE,EAAUX,MACnC,wBAAyBb,EAAMJ,SAC/B,wBAAyBI,EAAML,SAC/B,6BAA8BK,EAAMP,cACpC,qBAAsBsB,EAAcF,MACpC,0BAA2Bb,EAAMX,UACjC,iCAAkCkE,EAAiB1C,UAmCnD8C,WAhCiBrC,GAAS,KACnB,CACLwB,MAAO/B,EAAcF,MAAQwC,EAAS,UAAY,GAClDO,QAAU5D,EAAMb,MAEZa,EAAMX,UACJ,eACA,eAHF,OA6BNwE,WAtBiBvC,GAAS,KAC1B,MAAMwC,EAAWtC,EAAUX,OAASQ,EAAgBR,MAC9CkD,EAAQ,CACZC,WAAYF,EAAWT,EAASrD,EAAM8C,OAAS,GAC/CmB,YAAaH,EAAWT,EAASrD,EAAM8C,OAAS,IAOlD,OAJI/B,EAAcF,QAChBkD,EAAME,YAAcZ,EAAS,WAGxBU,KAYPG,iBATuB5C,GAAS,IAAMtB,EAAMP,eAAiB4B,EAAgBR,MAC3Eb,EAAMgD,kBACNhD,EAAM+C,cAQRhC,cAAAA,EACAC,sBAAAA,EACAwC,uBAAAA,EACAvB,gBAAAA,EACAN,OAAAA,EACAK,QAAAA,0vFCrJJmC,GACEC,OAAM,cACEC,iBACP1E,SAAU0E,WACVC,QAASD,UACTE,SAAUF,WACVG,MAAOH,gBACP,iBAAgBA,wBAChB,cAAaA,6BARhB,yBAUEI,SACEL,MAAM,+BACLM,QAAOL,kBACRM,SAAS,KACRhD,OAAM0C,SACPjB,IAAI,cAEJqB,SACEL,MAAM,sBACLL,MAAOM,aACPO,iBAAD,uBAEAH,UAAAN,GACEf,IAAI,QACJnE,KAAK,WACL4F,KAAK,WACLjF,SAAA,GACCqD,GAAIoB,KACJ5B,KAAM4B,QACPS,EAAMT,2BACLrC,QAAOqC,UACP1C,OAAM0C,SACPD,MAAM,qBACLM,WAAD,4BACCK,aAAkBV,+BAClB1E,SAAU0E,WACV5E,cAAe4E,8GAElBI,KACEL,MAAM,oBACL3B,KAAM4B,mBACP9D,KAAK,gDAGTkE,SACEL,MAAM,qBACLL,MAAOM,aACRjB,IAAI,QACJuB,SAAS,KACRhD,OAAM0C,WAEPW,uBAAA,SAAsBX,qKAhCdA,uEAQL,KAAIA,UACJ,OAAMA,uCAOIA,+BACV,gBAAeA,gCAGhBD,MAAM,oBACL3B,KAAM4B,mBACP9D,KAAK,uEAKC8D,wEAKcA,yGCjD9B,MAAeY,EAAoBC"}