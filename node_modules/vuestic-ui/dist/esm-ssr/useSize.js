import{getCurrentInstance as e,computed as i}from"vue";import{g as t}from"./withConfigTransport.js";const o={defaultSize:48,sizes:{small:32,medium:48,large:64}},s={defaultSize:1,sizes:{small:.75,medium:1,large:1.25}},r={size:{type:[String,Number],default:"",validator:e=>"string"==typeof e||"number"==typeof e},sizesConfig:{type:Object,default:()=>o},fontSizesConfig:{type:Object,default:()=>s}},n=/(?<fontSize>\d+)(?<extension>px|rem)/i,convertToRem=e=>e/16-.5,useSize=(o,s)=>{var r;void 0===s&&(s=null===(r=e())||void 0===r?void 0:r.type.name);const u=i((()=>{var e,i;return s?null===(i=null===(e=t().components)||void 0===e?void 0:e[s])||void 0===i?void 0:i.sizesConfig:void 0})),z=i((()=>{var e,i,t;const{defaultSize:s,sizes:r}=o.sizesConfig,n=null===(e=u.value)||void 0===e?void 0:e.defaultSize;if(!o.size)return`${n||s}px`;if("string"==typeof o.size){const e=null===(t=null===(i=u.value)||void 0===i?void 0:i.sizes)||void 0===t?void 0:t[o.size],s=r[o.size];return e?`${e}px`:s?`${s}px`:o.size}return`${o.size}px`})),l=i((()=>{const{defaultSize:e,sizes:i}=o.fontSizesConfig;if(!o.size)return e;if("string"==typeof o.size){if(o.size in i)return i[o.size];const e=o.size.match(n);if(!e||!e.groups)throw new Error("Size prop should be either valid string or number");const{extension:t,fontSize:s}=e.groups;return"rem"===t?+s:convertToRem(+s)}return convertToRem(o.size)}));return{sizeComputed:z,fontSizeComputed:i((()=>`${l.value}rem`))}};export{useSize as a,r as u};
//# sourceMappingURL=useSize.js.map
