{"version":3,"file":"index41.js","sources":["../../src/components/va-rating/types/index.ts","../../src/components/va-rating/hooks/useRating.ts","../../src/composables/useHover.ts","../../src/components/va-rating/hooks/useVaRatingColors.ts","../../src/components/va-rating/components/VaRatingItem/VaRatingItem.vue","../../src/components/va-rating/components/VaRatingItem/VaRatingItem.vue?vue&type=template&id=030c47f6&lang.js","../../src/components/va-rating/components/VaRatingItemNumberButton.vue","../../src/components/va-rating/components/VaRatingItemNumberButton.vue?vue&type=template&id=08e7d55f&lang.js","../../src/components/va-rating/VaRating.vue","../../src/components/va-rating/VaRating.vue?vue&type=template&id=10f2d130&lang.js","../../src/components/va-rating/components/VaRatingItem/index.ts","../../src/components/va-rating/index.ts"],"sourcesContent":["export enum RatingValue {\n  EMPTY = 0,\n  HALF = 0.5,\n  FULL = 1\n}\n","import clamp from 'lodash/clamp'\nimport { useHover } from '../../../composables/useHover'\nimport { ref, getCurrentInstance, computed, ExtractPropTypes } from 'vue'\nimport { useStateful, useStatefulProps } from '../../../composables/useStateful'\nimport { RatingValue } from '../types'\n\nconst getContext = <P extends Record<string, any> = Record<string, any>, E extends string = string>() => {\n  const instance = getCurrentInstance()\n  if (!instance) { throw new Error('useRating hooks must be used on top of setup function') }\n  return {\n    props: instance.props,\n    emit: instance.emit,\n  } as {\n    props: P,\n    emit: (event: E, ...args: any[]) => void\n  }\n}\n\nexport const useRatingProps = {\n  ...useStatefulProps,\n  modelValue: { type: Number, default: 0 },\n  clearable: { type: Boolean, default: false },\n  hover: { type: Boolean, default: false },\n}\n\nexport const useRating = (props: ExtractPropTypes<typeof useRatingProps>) => {\n  const { emit } = getContext()\n  const { isHovered, onMouseEnter, onMouseLeave } = useHover()\n  const { valueComputed: modelValue } = useStateful(props, emit)\n\n  const hoveredValue = ref(0)\n\n  const visibleValue = computed(() => props.hover && isHovered.value ? hoveredValue.value : modelValue.value)\n\n  const onItemValueUpdate = (itemIndex: number, newValue: number) => {\n    const newModelValue = itemIndex + newValue\n    if (props.clearable) {\n      if (modelValue.value === newModelValue) {\n        modelValue.value = 0\n        return\n      }\n    }\n    modelValue.value = newModelValue\n  }\n\n  const onItemHoveredValueUpdate = (itemIndex: number, newValue: number) => {\n    if (!props.hover) { return }\n    hoveredValue.value = itemIndex + newValue\n  }\n\n  const getItemValue = (itemIndex: number) => {\n    const itemValue = visibleValue.value - itemIndex\n    return clamp(itemValue, RatingValue.EMPTY, RatingValue.FULL)\n  }\n\n  return {\n    visibleValue,\n    modelValue,\n    hoveredValue,\n    isHovered,\n    onMouseEnter,\n    onMouseLeave,\n    onItemValueUpdate,\n    onItemHoveredValueUpdate,\n    getItemValue,\n  }\n}\n","import { ref, onMounted, onBeforeUnmount, Ref } from 'vue'\n\nexport function useHover (el?: Ref<HTMLElement | null | undefined>) {\n  const isHovered = ref(false)\n\n  const onMouseEnter = () => { isHovered.value = true }\n  const onMouseLeave = () => { isHovered.value = false }\n\n  if (el) {\n    onMounted(() => {\n      el.value?.addEventListener('mouseenter', onMouseEnter)\n      el.value?.addEventListener('mouseleave', onMouseLeave)\n    })\n    onBeforeUnmount(() => {\n      el.value?.removeEventListener('mouseover', onMouseEnter)\n      el.value?.removeEventListener('mouseleave', onMouseLeave)\n    })\n  }\n\n  return {\n    isHovered,\n    onMouseEnter,\n    onMouseLeave,\n  }\n}\n","import { computed, ExtractPropTypes } from 'vue'\nimport { useColors } from '../../../services/color-config/color-config'\nimport { RatingValue } from '../types'\n\nexport const useVaRatingColorsProps = {\n  unselectedColor: { type: String },\n  color: { type: String, default: 'primary' },\n  modelValue: { type: Number },\n}\n\nexport const useVaRatingColors = (props: ExtractPropTypes<typeof useVaRatingColorsProps>) => {\n  const { getColor, getFocusColor, getTextColor } = useColors()\n\n  const computedColor = computed(() => getColor(props.color))\n\n  const backgroundColor = computed(() => {\n    if (props.unselectedColor) { return getColor(props.unselectedColor) }\n\n    return getFocusColor(getColor(props.color))\n  })\n\n  const backgroundComputed = computed(() => {\n    if (props.modelValue === RatingValue.HALF) {\n      return `linear-gradient(90deg, ${computedColor.value} 50%, ${backgroundColor.value} 50%`\n    }\n\n    if (props.modelValue === RatingValue.EMPTY) {\n      return backgroundColor.value\n    }\n\n    return computedColor.value\n  })\n\n  const textColorComputed = computed(() => {\n    if (props.modelValue === RatingValue.FULL) {\n      return getTextColor(computedColor.value)\n    }\n\n    return getTextColor(backgroundColor.value)\n  })\n\n  return {\n    computedColor,\n    backgroundComputed,\n    textColorComputed,\n  }\n}\n","<template>\n  <div\n    ref=\"rootEl\"\n    class=\"va-rating-item\"\n    :tabindex=\"$props.tabindex\"\n    @keyup.enter=\"onClick\"\n    @mousemove=\"onMouseMove\"\n    @mouseleave=\"onMouseLeave\"\n  >\n    <slot :props=\"{\n      value: visibleValue, onClick\n    }\">\n      <va-icon\n        class=\"va-rating-item__wrapper\"\n        tabindex=\"-1\"\n        tag=\"button\"\n        :name=\"computedIconName\"\n        :size=\"$props.size\"\n        :color=\"getColor($props.color)\"\n        @click=\"onClick\"\n      />\n    </slot>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, ref, watch } from 'vue'\nimport { useColors } from '../../../../services/color-config/color-config'\nimport { useSyncProp } from '../../../../composables/useSyncProp'\nimport VaIcon from '../../../va-icon'\nimport { RatingValue } from '../../types'\n\nexport default defineComponent({\n  name: 'VaRatingItem',\n\n  components: { VaIcon },\n\n  props: {\n    modelValue: { type: Number, default: 0 },\n    icon: { type: String, default: 'star' },\n    halfIcon: { type: String, default: 'star_half' },\n    emptyIcon: { type: String, default: 'star_outline' },\n    halves: { type: Boolean, default: false },\n    hover: { type: Boolean, default: false },\n    tabindex: { type: Number, default: 1 },\n    size: { type: [String, Number], default: 'medium' },\n    emptyIconColor: { type: String },\n    color: { type: String, default: 'primary' },\n  },\n\n  emits: ['update:modelValue', 'click', 'hover'],\n\n  setup (props, { emit }) {\n    const rootEl = ref<HTMLElement>()\n    const [modelValue] = useSyncProp('modelValue', props, emit, RatingValue.EMPTY)\n    const hoveredValue = ref<number | null>(null)\n\n    const visibleValue = computed(() => {\n      if (props.hover) {\n        return hoveredValue.value || modelValue.value\n      }\n      return modelValue.value\n    })\n\n    const onMouseMove = (ev: MouseEvent) => {\n      if (!rootEl.value) { return }\n      const { offsetX } = ev\n      const iconWidth = rootEl.value.clientWidth\n\n      if (props.halves) {\n        hoveredValue.value = offsetX / iconWidth <= RatingValue.HALF ? RatingValue.HALF : RatingValue.FULL\n      } else {\n        hoveredValue.value = RatingValue.FULL\n      }\n    }\n\n    const onMouseLeave = () => {\n      hoveredValue.value = null\n    }\n\n    const onEnter = () => {\n      modelValue.value = 1\n    }\n\n    const onClick = () => {\n      modelValue.value = hoveredValue.value || RatingValue.FULL\n      emit('click', hoveredValue.value || RatingValue.FULL)\n    }\n\n    watch(hoveredValue, () => emit('hover', hoveredValue.value || RatingValue.EMPTY))\n\n    return {\n      ...useColors(),\n      rootEl,\n      onEnter,\n      onClick,\n      onMouseMove,\n      onMouseLeave,\n      visibleValue,\n      computedIconName: computed(() => {\n        if (props.halves && visibleValue.value === RatingValue.HALF) {\n          return props.halfIcon\n        }\n        if (visibleValue.value === RatingValue.EMPTY) {\n          return props.emptyIcon\n        }\n\n        return props.icon\n      }),\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../../../styles/resources\";\n\n.va-rating-item {\n  display: inline-block;\n\n  &:focus {\n    transform: scale(1.1);\n  }\n\n  &__wrapper {\n    @include normalize-button();\n  }\n}\n</style>\n","<template>\n  <div\n    ref=\"rootEl\"\n    class=\"va-rating-item\"\n    :tabindex=\"$props.tabindex\"\n    @keyup.enter=\"onClick\"\n    @mousemove=\"onMouseMove\"\n    @mouseleave=\"onMouseLeave\"\n  >\n    <slot :props=\"{\n      value: visibleValue, onClick\n    }\">\n      <va-icon\n        class=\"va-rating-item__wrapper\"\n        tabindex=\"-1\"\n        tag=\"button\"\n        :name=\"computedIconName\"\n        :size=\"$props.size\"\n        :color=\"getColor($props.color)\"\n        @click=\"onClick\"\n      />\n    </slot>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, ref, watch } from 'vue'\nimport { useColors } from '../../../../services/color-config/color-config'\nimport { useSyncProp } from '../../../../composables/useSyncProp'\nimport VaIcon from '../../../va-icon'\nimport { RatingValue } from '../../types'\n\nexport default defineComponent({\n  name: 'VaRatingItem',\n\n  components: { VaIcon },\n\n  props: {\n    modelValue: { type: Number, default: 0 },\n    icon: { type: String, default: 'star' },\n    halfIcon: { type: String, default: 'star_half' },\n    emptyIcon: { type: String, default: 'star_outline' },\n    halves: { type: Boolean, default: false },\n    hover: { type: Boolean, default: false },\n    tabindex: { type: Number, default: 1 },\n    size: { type: [String, Number], default: 'medium' },\n    emptyIconColor: { type: String },\n    color: { type: String, default: 'primary' },\n  },\n\n  emits: ['update:modelValue', 'click', 'hover'],\n\n  setup (props, { emit }) {\n    const rootEl = ref<HTMLElement>()\n    const [modelValue] = useSyncProp('modelValue', props, emit, RatingValue.EMPTY)\n    const hoveredValue = ref<number | null>(null)\n\n    const visibleValue = computed(() => {\n      if (props.hover) {\n        return hoveredValue.value || modelValue.value\n      }\n      return modelValue.value\n    })\n\n    const onMouseMove = (ev: MouseEvent) => {\n      if (!rootEl.value) { return }\n      const { offsetX } = ev\n      const iconWidth = rootEl.value.clientWidth\n\n      if (props.halves) {\n        hoveredValue.value = offsetX / iconWidth <= RatingValue.HALF ? RatingValue.HALF : RatingValue.FULL\n      } else {\n        hoveredValue.value = RatingValue.FULL\n      }\n    }\n\n    const onMouseLeave = () => {\n      hoveredValue.value = null\n    }\n\n    const onEnter = () => {\n      modelValue.value = 1\n    }\n\n    const onClick = () => {\n      modelValue.value = hoveredValue.value || RatingValue.FULL\n      emit('click', hoveredValue.value || RatingValue.FULL)\n    }\n\n    watch(hoveredValue, () => emit('hover', hoveredValue.value || RatingValue.EMPTY))\n\n    return {\n      ...useColors(),\n      rootEl,\n      onEnter,\n      onClick,\n      onMouseMove,\n      onMouseLeave,\n      visibleValue,\n      computedIconName: computed(() => {\n        if (props.halves && visibleValue.value === RatingValue.HALF) {\n          return props.halfIcon\n        }\n        if (visibleValue.value === RatingValue.EMPTY) {\n          return props.emptyIcon\n        }\n\n        return props.icon\n      }),\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../../../styles/resources\";\n\n.va-rating-item {\n  display: inline-block;\n\n  &:focus {\n    transform: scale(1.1);\n  }\n\n  &__wrapper {\n    @include normalize-button();\n  }\n}\n</style>\n","<template>\n  <button\n    class=\"va-rating__number-item\"\n    tabindex=\"-1\"\n    :style=\"{\n      background: backgroundComputed,\n      color: textColorComputed,\n      width: sizeComputed,\n      height: sizeComputed,\n      fontSize: fontSizeComputed,\n      borderRadius: `${parseInt(fontSizeComputed) * 0.125}rem`,\n    }\"\n  >\n    {{ itemNumber }}\n  </button>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport { useVaRatingColorsProps, useVaRatingColors } from '../hooks/useVaRatingColors'\nimport { useSize, useSizeProps } from '../../../composables/useSize'\n\nexport default defineComponent({\n  name: 'VaRatingItemNumberButton',\n\n  props: {\n    ...useVaRatingColorsProps,\n    ...useSizeProps,\n    itemNumber: { type: Number, required: true },\n    modelValue: { type: Number, required: true },\n  },\n\n  setup (props) {\n    return {\n      ...useVaRatingColors(props),\n      ...useSize(props, 'VaRating'),\n    }\n  },\n})\n</script>\n","<template>\n  <button\n    class=\"va-rating__number-item\"\n    tabindex=\"-1\"\n    :style=\"{\n      background: backgroundComputed,\n      color: textColorComputed,\n      width: sizeComputed,\n      height: sizeComputed,\n      fontSize: fontSizeComputed,\n      borderRadius: `${parseInt(fontSizeComputed) * 0.125}rem`,\n    }\"\n  >\n    {{ itemNumber }}\n  </button>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport { useVaRatingColorsProps, useVaRatingColors } from '../hooks/useVaRatingColors'\nimport { useSize, useSizeProps } from '../../../composables/useSize'\n\nexport default defineComponent({\n  name: 'VaRatingItemNumberButton',\n\n  props: {\n    ...useVaRatingColorsProps,\n    ...useSizeProps,\n    itemNumber: { type: Number, required: true },\n    modelValue: { type: Number, required: true },\n  },\n\n  setup (props) {\n    return {\n      ...useVaRatingColors(props),\n      ...useSize(props, 'VaRating'),\n    }\n  },\n})\n</script>\n","<template>\n  <div class=\"va-rating\" :class=\"rootClass\">\n    <div\n      @keyup.left=\"onArrowKeyPress(-1)\"\n      @keyup.right=\"onArrowKeyPress(1)\"\n      @mouseenter=\"onMouseEnter()\"\n      @mouseleave=\"onMouseLeave\"\n      class=\"va-rating__item-wrapper\"\n    >\n      <va-rating-item\n        v-for=\"itemNumber in $props.max\"\n        v-bind=\"VaRatingItemProps\"\n        :model-value=\"getItemValue(itemNumber - 1)\"\n        :key=\"itemNumber\"\n        :empty-icon-color=\"$props.unselectedColor\"\n        :tabindex=\"tabindex\"\n        @hover=\"isInteractionsEnabled && onItemHoveredValueUpdate(itemNumber - 1, $event)\"\n        @update:model-value=\"isInteractionsEnabled && onItemValueUpdate(itemNumber - 1, $event)\"\n      >\n        <template v-if=\"$props.numbers\" v-slot=\"{ props }\">\n          <VaRatingItemNumberButton\n            v-bind=\"VaRatingItemNumberButtonProps\"\n            :model-value=\"props.value\"\n            :item-number=\"itemNumber\"\n            @click=\"props.onClick\"\n          />\n        </template>\n      </va-rating-item>\n    </div>\n    <span\n      v-if=\"$props.texts && $props.texts.length === $props.max\"\n      class=\"va-rating__text-wrapper\"\n      :style=\"{ color: computedColor }\"\n    >\n      {{ $props.texts[Math.round(visibleValue) - 1] }}\n    </span>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed } from 'vue'\nimport { useRating, useRatingProps } from './hooks/useRating'\nimport { useVaRatingColors, useVaRatingColorsProps } from './hooks/useVaRatingColors'\nimport { useForm, useFormProps } from '../../composables/useForm'\nimport { extractComponentProps, filterComponentProps } from '../../utils/child-props'\nimport { RatingValue } from './types'\nimport VaRatingItem from './components/VaRatingItem/VaRatingItem.vue'\nimport VaRatingItemNumberButton from './components/VaRatingItemNumberButton.vue'\n\nconst VaRatingItemProps = extractComponentProps(VaRatingItem, ['unselectedColor'])\nconst VaRatingItemNumberButtonProps = extractComponentProps(VaRatingItemNumberButton, ['modelValue', 'itemNumber'])\n\nexport default defineComponent({\n  name: 'VaRating',\n\n  props: {\n    ...useRatingProps,\n    ...useVaRatingColorsProps,\n    ...useFormProps,\n    ...VaRatingItemProps,\n    ...VaRatingItemNumberButtonProps,\n    numbers: { type: Boolean, default: false },\n    halves: { type: Boolean, default: false },\n    max: { type: Number, default: 5 },\n    texts: { type: Array, default: () => [] },\n  },\n\n  emits: ['update:modelValue'],\n\n  components: { VaRatingItem, VaRatingItemNumberButton },\n\n  setup (props) {\n    const { createComputedClass } = useForm(props)\n    const rating = useRating(props)\n\n    const isInteractionsEnabled = computed(() => !props.disabled && !props.readonly)\n\n    return {\n      ...useVaRatingColors(props),\n      ...rating,\n\n      rootClass: createComputedClass('va-rating'),\n\n      VaRatingItemProps: filterComponentProps(props, VaRatingItemProps),\n      VaRatingItemNumberButtonProps: filterComponentProps(props, VaRatingItemNumberButtonProps),\n\n      isInteractionsEnabled,\n      tabindex: computed(() => isInteractionsEnabled.value ? 0 : undefined),\n\n      onArrowKeyPress: (direction: 1 | -1) => {\n        const step = props.halves ? RatingValue.HALF : RatingValue.FULL\n        rating.onItemValueUpdate(rating.visibleValue.value, (step) * direction)\n      },\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import 'variables';\n\n.va-rating {\n  display: var(--va-rating-display);\n  font-family: var(--va-font-family);\n\n  &__number-item {\n    @include normalize-button();\n\n    font-size: var(--va-rating-number-item-font-size);\n    margin: var(--va-rating-number-item-margin);\n    font-weight: var(--va-rating-number-item-font-weight);\n\n    @include flex-center();\n\n    cursor: pointer;\n\n    @at-root {\n      .va-rating--disabled & {\n        @include va-disabled();\n      }\n\n      .va-rating--readonly & {\n        cursor: default;\n      }\n    }\n  }\n\n  &__item-wrapper {\n    display: var(--va-rating-item-wrapper-display);\n    cursor: var(--va-rating-item-wrapper-cursor);\n\n    @at-root {\n      .va-rating--readonly &,\n      .va-rating--disabled & {\n        cursor: default;\n      }\n    }\n  }\n\n  &-item {\n    display: var(--va-rating-item-display);\n\n    @include flex-center();\n\n    .va-rating--disabled & {\n      @include va-disabled();\n\n      &__wrapper {\n        cursor: initial !important;\n      }\n    }\n\n    .va-rating--readonly & &__wrapper {\n      cursor: initial !important;\n    }\n  }\n\n  &__text-wrapper {\n    padding-left: 10px;\n  }\n}\n</style>\n","<template>\n  <div class=\"va-rating\" :class=\"rootClass\">\n    <div\n      @keyup.left=\"onArrowKeyPress(-1)\"\n      @keyup.right=\"onArrowKeyPress(1)\"\n      @mouseenter=\"onMouseEnter()\"\n      @mouseleave=\"onMouseLeave\"\n      class=\"va-rating__item-wrapper\"\n    >\n      <va-rating-item\n        v-for=\"itemNumber in $props.max\"\n        v-bind=\"VaRatingItemProps\"\n        :model-value=\"getItemValue(itemNumber - 1)\"\n        :key=\"itemNumber\"\n        :empty-icon-color=\"$props.unselectedColor\"\n        :tabindex=\"tabindex\"\n        @hover=\"isInteractionsEnabled && onItemHoveredValueUpdate(itemNumber - 1, $event)\"\n        @update:model-value=\"isInteractionsEnabled && onItemValueUpdate(itemNumber - 1, $event)\"\n      >\n        <template v-if=\"$props.numbers\" v-slot=\"{ props }\">\n          <VaRatingItemNumberButton\n            v-bind=\"VaRatingItemNumberButtonProps\"\n            :model-value=\"props.value\"\n            :item-number=\"itemNumber\"\n            @click=\"props.onClick\"\n          />\n        </template>\n      </va-rating-item>\n    </div>\n    <span\n      v-if=\"$props.texts && $props.texts.length === $props.max\"\n      class=\"va-rating__text-wrapper\"\n      :style=\"{ color: computedColor }\"\n    >\n      {{ $props.texts[Math.round(visibleValue) - 1] }}\n    </span>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed } from 'vue'\nimport { useRating, useRatingProps } from './hooks/useRating'\nimport { useVaRatingColors, useVaRatingColorsProps } from './hooks/useVaRatingColors'\nimport { useForm, useFormProps } from '../../composables/useForm'\nimport { extractComponentProps, filterComponentProps } from '../../utils/child-props'\nimport { RatingValue } from './types'\nimport VaRatingItem from './components/VaRatingItem/VaRatingItem.vue'\nimport VaRatingItemNumberButton from './components/VaRatingItemNumberButton.vue'\n\nconst VaRatingItemProps = extractComponentProps(VaRatingItem, ['unselectedColor'])\nconst VaRatingItemNumberButtonProps = extractComponentProps(VaRatingItemNumberButton, ['modelValue', 'itemNumber'])\n\nexport default defineComponent({\n  name: 'VaRating',\n\n  props: {\n    ...useRatingProps,\n    ...useVaRatingColorsProps,\n    ...useFormProps,\n    ...VaRatingItemProps,\n    ...VaRatingItemNumberButtonProps,\n    numbers: { type: Boolean, default: false },\n    halves: { type: Boolean, default: false },\n    max: { type: Number, default: 5 },\n    texts: { type: Array, default: () => [] },\n  },\n\n  emits: ['update:modelValue'],\n\n  components: { VaRatingItem, VaRatingItemNumberButton },\n\n  setup (props) {\n    const { createComputedClass } = useForm(props)\n    const rating = useRating(props)\n\n    const isInteractionsEnabled = computed(() => !props.disabled && !props.readonly)\n\n    return {\n      ...useVaRatingColors(props),\n      ...rating,\n\n      rootClass: createComputedClass('va-rating'),\n\n      VaRatingItemProps: filterComponentProps(props, VaRatingItemProps),\n      VaRatingItemNumberButtonProps: filterComponentProps(props, VaRatingItemNumberButtonProps),\n\n      isInteractionsEnabled,\n      tabindex: computed(() => isInteractionsEnabled.value ? 0 : undefined),\n\n      onArrowKeyPress: (direction: 1 | -1) => {\n        const step = props.halves ? RatingValue.HALF : RatingValue.FULL\n        rating.onItemValueUpdate(rating.visibleValue.value, (step) * direction)\n      },\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import 'variables';\n\n.va-rating {\n  display: var(--va-rating-display);\n  font-family: var(--va-font-family);\n\n  &__number-item {\n    @include normalize-button();\n\n    font-size: var(--va-rating-number-item-font-size);\n    margin: var(--va-rating-number-item-margin);\n    font-weight: var(--va-rating-number-item-font-weight);\n\n    @include flex-center();\n\n    cursor: pointer;\n\n    @at-root {\n      .va-rating--disabled & {\n        @include va-disabled();\n      }\n\n      .va-rating--readonly & {\n        cursor: default;\n      }\n    }\n  }\n\n  &__item-wrapper {\n    display: var(--va-rating-item-wrapper-display);\n    cursor: var(--va-rating-item-wrapper-cursor);\n\n    @at-root {\n      .va-rating--readonly &,\n      .va-rating--disabled & {\n        cursor: default;\n      }\n    }\n  }\n\n  &-item {\n    display: var(--va-rating-item-display);\n\n    @include flex-center();\n\n    .va-rating--disabled & {\n      @include va-disabled();\n\n      &__wrapper {\n        cursor: initial !important;\n      }\n    }\n\n    .va-rating--readonly & &__wrapper {\n      cursor: initial !important;\n    }\n  }\n\n  &__text-wrapper {\n    padding-left: 10px;\n  }\n}\n</style>\n","import withConfigTransport from '../../../../services/config-transport/withConfigTransport'\nimport VaRatingItem from './VaRatingItem.vue'\n\nexport default withConfigTransport(VaRatingItem)\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\nimport VaRating from './VaRating.vue'\nexport { default as VaRatingItem } from './components/VaRatingItem'\n\nexport default withConfigTransport(VaRating)\n"],"names":["RatingValue","useRatingProps","useStatefulProps","modelValue","type","Number","default","clearable","Boolean","hover","useRating","props","emit","instance","getCurrentInstance","Error","getContext","isHovered","onMouseEnter","onMouseLeave","useHover","el","ref","value","onMounted","addEventListener","onBeforeUnmount","removeEventListener","valueComputed","useStateful","hoveredValue","visibleValue","computed","onItemValueUpdate","itemIndex","newValue","newModelValue","onItemHoveredValueUpdate","getItemValue","itemValue","clamp","EMPTY","FULL","useVaRatingColorsProps","unselectedColor","String","color","useVaRatingColors","getColor","getFocusColor","getTextColor","useColors","computedColor","backgroundColor","backgroundComputed","HALF","textColorComputed","defineComponent","name","components","VaIcon","icon","halfIcon","emptyIcon","halves","tabindex","size","emptyIconColor","emits","setup","rootEl","useSyncProp","watch","onEnter","onClick","onMouseMove","ev","offsetX","iconWidth","clientWidth","computedIconName","_mergeProps","class","_ctx","tag","useSizeProps","itemNumber","required","useSize","style","VaRatingItemProps","extractComponentProps","VaRatingItem","VaRatingItemNumberButtonProps","VaRatingItemNumberButton","useFormProps","numbers","max","texts","Array","createComputedClass","useForm","rating","isInteractionsEnabled","disabled","readonly","rootClass","filterComponentProps","undefined","onArrowKeyPress","direction","step","key","_createVNode","length","Math","round","withConfigTransport","VaRating"],"mappings":"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"}