import{w as e}from"./withConfigTransport.js";import{defineComponent as o,ref as t,computed as a,onMounted as r,resolveComponent as l,openBlock as s,createBlock as i,withCtx as p,createElementVNode as u,createElementBlock as n,Fragment as d,renderList as m,renderSlot as c}from"vue";import{g as f}from"./utils.js";import{u as b,a as g}from"./useSelectableList.js";import{u as y,b as V}from"./index60.js";import{s as j,u as v}from"./cStatefulMixin.js";import x from"./index14.js";import $ from"./index40.js";import h from"./index46.js";import"./VaMessageListWrapper.js";import{s as L}from"./VaMessageListWrapper.vue_vue&type=script&lang.js";import{s as S}from"./style-inject.es.js";import"./VaConfig.js";import"./flatten.js";import"./useSyncProp.js";import"./consts.js";import"./useFocus.js";import"./useColor.js";import"./color-config.js";import"colortranslator";import"./index28.js";import"./VaIcon.js";import"./useSize.js";import"./useKeyboardOnlyFocus.js";import"./useStateful.js";import"./useLoading.js";import"tslib";import"./vue-class-component.esm-bundler.js";import"./ColorMixin.js";import"./StatefulMixin.js";import"./LoadingMixin.js";import"./index39.js";import"./clamp.js";import"./toNumber.js";var M=o({name:"VaOptionList",components:{VaRadio:$,VaCheckbox:x,VaSwitch:h,VaMessageListWrapper:L},emits:[...j.emits],props:{...b,...y,...j.props,type:{type:String,default:"checkbox",validator:e=>["radio","checkbox","switch"].includes(e)},disabled:{type:Boolean,default:!1},readonly:{type:Boolean,default:!1},defaultValue:{type:[String,Number,Object,Array]},name:{type:String,default:f},color:{type:String,default:"primary"},leftLabel:{type:Boolean,default:!1},modelValue:{type:[String,Number,Object,Array]}},setup(e,{emit:o}){const{valueComputed:l}=v(e,o),{getValue:s,getText:i,getTrackBy:p,getDisabled:u}=g(e),n=t(),d=a((()=>"radio"===e.type)),m=a({get(){const o=d.value?null:[];return l.value||e.defaultValue||o},set(o){e.readonly||(d.value&&!Array.isArray(o)?l.value=o?s(o):o:l.value=Array.isArray(o)?o.map(s):[o?s(o):o])}}),reset=()=>{l.value=void 0},focus=()=>{const e=Array.isArray(n.value)&&n.value.find((e=>!e.disabled));e&&"function"==typeof e.focus&&e.focus()},{computedError:c,computedErrorMessages:f}=V(e,o,reset,focus);return r((()=>{!l.value&&e.defaultValue&&(m.value=e.defaultValue)})),{selectedValue:m,computedError:c,computedErrorMessages:f,getValue:s,getText:i,getKey:e=>p(e),isDisabled:o=>e.disabled||u(o),reset:reset,focus:focus}}});const k=["id"];S(":root{--va-option-list-line-height:1.5}.va-option-list__list{line-height:var(--va-option-list-line-height)}"),M.render=function render(e,o,t,a,r,f){const b=l("va-radio"),g=l("va-checkbox"),y=l("va-switch"),V=l("VaMessageListWrapper");return s(),i(V,{error:e.computedError,"error-messages":e.computedErrorMessages,"error-count":e.$props.errorCount},{default:p((()=>[u("ul",{class:"va-option-list__list",id:String(e.$props.id)},[(s(!0),n(d,null,m(e.$props.options,((t,a)=>(s(),n("li",{key:e.getKey(t)},[c(e.$slots,"default",{props:{option:t,isDisabled:e.isDisabled,name:e.$props.name,color:e.$props.color,leftLabel:e.$props.leftLabel,getText:e.getText,selectedValue:e.selectedValue,index:a}},(()=>["radio"===e.$props.type?(s(),i(b,{key:0,ref:"input",option:e.getValue(t),disabled:e.isDisabled(t),name:e.$props.name,color:e.$props.color,"left-label":e.$props.leftLabel,label:e.getText(t),modelValue:e.selectedValue,"onUpdate:modelValue":o[0]||(o[0]=o=>e.selectedValue=o),tabindex:a},null,8,["option","disabled","name","color","left-label","label","modelValue","tabindex"])):"checkbox"===e.$props.type?(s(),i(g,{key:1,ref:"input",modelValue:e.selectedValue,"onUpdate:modelValue":o[1]||(o[1]=o=>e.selectedValue=o),label:e.getText(t),disabled:e.isDisabled(t),"left-label":e.$props.leftLabel,"array-value":e.getValue(t),color:e.$props.color,name:e.$props.name},null,8,["modelValue","label","disabled","left-label","array-value","color","name"])):(s(),i(y,{key:2,ref:"input",modelValue:e.selectedValue,"onUpdate:modelValue":o[2]||(o[2]=o=>e.selectedValue=o),label:e.getText(t),disabled:e.isDisabled(t),"left-label":e.$props.leftLabel,"array-value":e.getValue(t),color:e.$props.color,name:e.$props.name},null,8,["modelValue","label","disabled","left-label","array-value","color","name"]))]))])))),128))],8,k)])),_:3},8,["error","error-messages","error-count"])},M.__file="src/components/va-option-list/VaOptionList.vue";var T=e(M);export{T as default};
//# sourceMappingURL=index51.js.map
