{"version":3,"file":"index55.js","sources":["../../src/components/va-toast/VaToast.vue","../../src/components/va-toast/VaToast.vue?vue&type=template&id=e50edcbc&lang.js","../../src/components/va-toast/VaToast.ts","../../src/components/va-toast/index.ts"],"sourcesContent":["<template>\n  <transition name=\"va-toast-fade\">\n    <div\n      v-show=\"visible\"\n      :class=\"['va-toast', $props.multiLine ? 'va-toast--multiline' : '', ...toastClasses]\"\n      :style=\"toastStyles\"\n      @mouseenter=\"clearTimer()\"\n      @mouseleave=\"startTimer()\"\n      @click=\"onToastClick()\"\n      role=\"alert\"\n    >\n      <div class=\"va-toast__group\">\n        <h2 v-if=\"title\" class=\"va-toast__title\" v-text=\"title\"></h2>\n\n        <div class=\"va-toast__content\" v-show=\"message\">\n          <p v-if=\"html\" v-html=\"computedMessage\"></p>\n          <p v-else v-text=\"computedMessage\"></p>\n        </div>\n\n        <div class=\"va-toast__content\" v-if=\"render\">\n          <VaToastRenderer :content=\"render\" />\n        </div>\n\n        <va-icon\n          v-if=\"closeable\"\n          size=\"small\"\n          :name=\"icon\"\n          class=\"va-toast__close-icon\"\n          @click.stop=\"onToastClose\"\n        />\n      </div>\n    </div>\n  </transition>\n</template>\n\n<script lang=\"ts\">\nimport { h } from 'vue'\nimport { prop, mixins, Vue, Options } from 'vue-class-component'\nimport VaIcon from '../va-icon/VaIcon.vue'\n\nimport ColorMixin from '../../services/color-config/ColorMixin'\nimport { NotificationPosition } from './types'\n\nclass ToastProps {\n  title = prop<string>({ type: String, default: '' })\n  offsetY = prop<number>({ type: Number, default: 16 })\n  offsetX = prop<number>({ type: Number, default: 16 })\n  message = prop<string | Function>({ type: [String, Function] as any, default: '' })\n  html = prop<boolean>({ type: Boolean, default: false })\n  icon = prop<string>({ type: String, default: 'close' })\n  customClass = prop<string>({ type: String, default: '' })\n  duration = prop<number>({ type: Number, default: 5000 })\n  color = prop<string>({ type: String, default: '' })\n  closeable = prop<boolean>({ type: Boolean, default: true })\n  onClose = prop<() => void>({ type: [Function, undefined] as any })\n  onClick = prop<() => void>({ type: [Function, undefined] as any })\n  multiLine = prop<boolean>({ type: Boolean, default: false })\n  position = prop<NotificationPosition>({\n    type: String as any,\n    default: 'top-right',\n    validator: (value: string) => {\n      return ['top-right', 'top-left', 'bottom-right', 'bottom-left'].includes(value)\n    },\n  })\n  render = prop<any>({ type: Function, default: undefined })\n}\n\nclass VaToastRendererProps {\n  content = prop<any>({ type: Function, default: undefined })\n}\n\nconst VaToastRendererPropsMixin = Vue.with(VaToastRendererProps)\n\n@Options({\n  name: 'VaToastRenderer',\n})\nclass VaToastRenderer extends mixins(VaToastRendererPropsMixin) {\n  render () {\n    return this.content(h)\n  }\n}\n\nconst ToastPropsMixin = Vue.with(ToastProps)\n\n@Options({\n  name: 'VaToast',\n  components: { VaIcon, VaToastRenderer },\n  emits: ['on-click', 'on-close'],\n})\nexport default class VaToast extends mixins(\n  ColorMixin,\n  ToastPropsMixin,\n) {\n  private timer: any = null\n  public visible = false\n\n  get positionX (): 'right' | 'left' {\n    return this.position.includes('right') ? 'right' : 'left'\n  }\n\n  get positionY (): 'top' | 'bottom' {\n    return this.position.includes('top') ? 'top' : 'bottom'\n  }\n\n  get toastClasses () {\n    return [this.customClass]\n  }\n\n  get toastStyles () {\n    return {\n      [this.positionY]: `${this.offsetY}px`,\n      [this.positionX]: `${this.offsetX}px`,\n      backgroundColor: this.colorComputed,\n    }\n  }\n\n  get computedMessage () {\n    return (typeof this.message === 'function') ? this.message() : this.message\n  }\n\n  destroyElement () {\n    this.$el.removeEventListener('transitionend', this.destroyElement)\n\n    // TODO: not sure if this is really needed (it doesn't work in vue3)\n    // this.$destroy() // or this.$destroy(true)\n\n    this.$el.remove() // or this.$el.parentNode?.removeChild(this.$el)\n  }\n\n  onToastClick () {\n    if (typeof this.$props.onClick === 'function') {\n      this.$props.onClick()\n      return\n    }\n    this.$emit('click')\n  }\n\n  onToastClose () {\n    this.visible = false\n    this.$el.addEventListener('transitionend', this.destroyElement)\n    if (typeof this.onClose === 'function') {\n      this.onClose()\n      return\n    }\n    this.$emit('close')\n  }\n\n  clearTimer () {\n    if (this.timer) {\n      clearTimeout(this.timer)\n    }\n  }\n\n  startTimer () {\n    if (this.duration > 0) {\n      this.timer = setTimeout(() => {\n        if (this.visible) {\n          this.onToastClose()\n        }\n      }, this.duration)\n    }\n  }\n\n  mounted () {\n    this.visible = true\n    if (this.duration > 0) {\n      this.timer = setTimeout(() => {\n        if (this.visible) {\n          this.onToastClose()\n        }\n      }, this.duration)\n    }\n  }\n}\n</script>\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import 'variables';\n\n.va-toast {\n  display: flex;\n  width: $toast-width;\n  padding: $toast-padding;\n  align-items: center;\n  border-radius: $toast-radius;\n  box-sizing: border-box;\n  border: 1px solid var(--va-toast-border-color);\n  position: fixed;\n  background-color: white;\n  color: #ffffff;\n  box-shadow: $toast-shadow;\n  transition: opacity 0.3s, transform 0.3s, left 0.3s, right 0.3s, top 0.4s, bottom 0.3s;\n  overflow: hidden;\n  z-index: var(--va-toast-z-index);\n  font-family: var(--va-font-family);\n\n  &--multiline {\n    min-height: 70px;\n  }\n\n  &--right {\n    right: 16px;\n  }\n\n  &--left {\n    left: 16px;\n  }\n\n  &__group {\n    margin-left: var(--va-toast-group-margin-left);\n    margin-right: var(--va-toast-group-margin-right);\n  }\n\n  &__title {\n    font-weight: var(--va-toast-title-font-weight);\n    font-size: var(--va-toast-title-font-size);\n    color: var(--va-toast-title-color);\n    margin: var(--va-toast-title-margin);\n  }\n\n  &__content {\n    font-size: var(--va-toast-content-font-size);\n    line-height: var(--va-toast-content-line-height);\n    padding-right: var(--va-toast-content-padding-right);\n\n    p {\n      margin: 0;\n    }\n  }\n\n  &__icon {\n    height: var(--va-toast-icon-height);\n    width: var(--va-toast-icon-width);\n    font-size: var(--va-toast-icon-font-size);\n  }\n\n  &__close-icon {\n    position: absolute;\n    top: 50%;\n    right: 15px;\n    cursor: pointer;\n    transform: translateY(-50%);\n    font-size: $toast-close-font-size;\n\n    &:hover {\n      color: var(--va-toast-hover-color);\n    }\n  }\n}\n\n.va-toast-fade-enter {\n  &.right {\n    right: 0;\n    transform: translateX(100%);\n  }\n\n  &.left {\n    left: 0;\n    transform: translateX(-100%);\n  }\n}\n\n.va-toast-fade-leave-active {\n  opacity: 0;\n}\n\n</style>\n","<template>\n  <transition name=\"va-toast-fade\">\n    <div\n      v-show=\"visible\"\n      :class=\"['va-toast', $props.multiLine ? 'va-toast--multiline' : '', ...toastClasses]\"\n      :style=\"toastStyles\"\n      @mouseenter=\"clearTimer()\"\n      @mouseleave=\"startTimer()\"\n      @click=\"onToastClick()\"\n      role=\"alert\"\n    >\n      <div class=\"va-toast__group\">\n        <h2 v-if=\"title\" class=\"va-toast__title\" v-text=\"title\"></h2>\n\n        <div class=\"va-toast__content\" v-show=\"message\">\n          <p v-if=\"html\" v-html=\"computedMessage\"></p>\n          <p v-else v-text=\"computedMessage\"></p>\n        </div>\n\n        <div class=\"va-toast__content\" v-if=\"render\">\n          <VaToastRenderer :content=\"render\" />\n        </div>\n\n        <va-icon\n          v-if=\"closeable\"\n          size=\"small\"\n          :name=\"icon\"\n          class=\"va-toast__close-icon\"\n          @click.stop=\"onToastClose\"\n        />\n      </div>\n    </div>\n  </transition>\n</template>\n\n<script lang=\"ts\">\nimport { h } from 'vue'\nimport { prop, mixins, Vue, Options } from 'vue-class-component'\nimport VaIcon from '../va-icon/VaIcon.vue'\n\nimport ColorMixin from '../../services/color-config/ColorMixin'\nimport { NotificationPosition } from './types'\n\nclass ToastProps {\n  title = prop<string>({ type: String, default: '' })\n  offsetY = prop<number>({ type: Number, default: 16 })\n  offsetX = prop<number>({ type: Number, default: 16 })\n  message = prop<string | Function>({ type: [String, Function] as any, default: '' })\n  html = prop<boolean>({ type: Boolean, default: false })\n  icon = prop<string>({ type: String, default: 'close' })\n  customClass = prop<string>({ type: String, default: '' })\n  duration = prop<number>({ type: Number, default: 5000 })\n  color = prop<string>({ type: String, default: '' })\n  closeable = prop<boolean>({ type: Boolean, default: true })\n  onClose = prop<() => void>({ type: [Function, undefined] as any })\n  onClick = prop<() => void>({ type: [Function, undefined] as any })\n  multiLine = prop<boolean>({ type: Boolean, default: false })\n  position = prop<NotificationPosition>({\n    type: String as any,\n    default: 'top-right',\n    validator: (value: string) => {\n      return ['top-right', 'top-left', 'bottom-right', 'bottom-left'].includes(value)\n    },\n  })\n  render = prop<any>({ type: Function, default: undefined })\n}\n\nclass VaToastRendererProps {\n  content = prop<any>({ type: Function, default: undefined })\n}\n\nconst VaToastRendererPropsMixin = Vue.with(VaToastRendererProps)\n\n@Options({\n  name: 'VaToastRenderer',\n})\nclass VaToastRenderer extends mixins(VaToastRendererPropsMixin) {\n  render () {\n    return this.content(h)\n  }\n}\n\nconst ToastPropsMixin = Vue.with(ToastProps)\n\n@Options({\n  name: 'VaToast',\n  components: { VaIcon, VaToastRenderer },\n  emits: ['on-click', 'on-close'],\n})\nexport default class VaToast extends mixins(\n  ColorMixin,\n  ToastPropsMixin,\n) {\n  private timer: any = null\n  public visible = false\n\n  get positionX (): 'right' | 'left' {\n    return this.position.includes('right') ? 'right' : 'left'\n  }\n\n  get positionY (): 'top' | 'bottom' {\n    return this.position.includes('top') ? 'top' : 'bottom'\n  }\n\n  get toastClasses () {\n    return [this.customClass]\n  }\n\n  get toastStyles () {\n    return {\n      [this.positionY]: `${this.offsetY}px`,\n      [this.positionX]: `${this.offsetX}px`,\n      backgroundColor: this.colorComputed,\n    }\n  }\n\n  get computedMessage () {\n    return (typeof this.message === 'function') ? this.message() : this.message\n  }\n\n  destroyElement () {\n    this.$el.removeEventListener('transitionend', this.destroyElement)\n\n    // TODO: not sure if this is really needed (it doesn't work in vue3)\n    // this.$destroy() // or this.$destroy(true)\n\n    this.$el.remove() // or this.$el.parentNode?.removeChild(this.$el)\n  }\n\n  onToastClick () {\n    if (typeof this.$props.onClick === 'function') {\n      this.$props.onClick()\n      return\n    }\n    this.$emit('click')\n  }\n\n  onToastClose () {\n    this.visible = false\n    this.$el.addEventListener('transitionend', this.destroyElement)\n    if (typeof this.onClose === 'function') {\n      this.onClose()\n      return\n    }\n    this.$emit('close')\n  }\n\n  clearTimer () {\n    if (this.timer) {\n      clearTimeout(this.timer)\n    }\n  }\n\n  startTimer () {\n    if (this.duration > 0) {\n      this.timer = setTimeout(() => {\n        if (this.visible) {\n          this.onToastClose()\n        }\n      }, this.duration)\n    }\n  }\n\n  mounted () {\n    this.visible = true\n    if (this.duration > 0) {\n      this.timer = setTimeout(() => {\n        if (this.visible) {\n          this.onToastClose()\n        }\n      }, this.duration)\n    }\n  }\n}\n</script>\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import 'variables';\n\n.va-toast {\n  display: flex;\n  width: $toast-width;\n  padding: $toast-padding;\n  align-items: center;\n  border-radius: $toast-radius;\n  box-sizing: border-box;\n  border: 1px solid var(--va-toast-border-color);\n  position: fixed;\n  background-color: white;\n  color: #ffffff;\n  box-shadow: $toast-shadow;\n  transition: opacity 0.3s, transform 0.3s, left 0.3s, right 0.3s, top 0.4s, bottom 0.3s;\n  overflow: hidden;\n  z-index: var(--va-toast-z-index);\n  font-family: var(--va-font-family);\n\n  &--multiline {\n    min-height: 70px;\n  }\n\n  &--right {\n    right: 16px;\n  }\n\n  &--left {\n    left: 16px;\n  }\n\n  &__group {\n    margin-left: var(--va-toast-group-margin-left);\n    margin-right: var(--va-toast-group-margin-right);\n  }\n\n  &__title {\n    font-weight: var(--va-toast-title-font-weight);\n    font-size: var(--va-toast-title-font-size);\n    color: var(--va-toast-title-color);\n    margin: var(--va-toast-title-margin);\n  }\n\n  &__content {\n    font-size: var(--va-toast-content-font-size);\n    line-height: var(--va-toast-content-line-height);\n    padding-right: var(--va-toast-content-padding-right);\n\n    p {\n      margin: 0;\n    }\n  }\n\n  &__icon {\n    height: var(--va-toast-icon-height);\n    width: var(--va-toast-icon-width);\n    font-size: var(--va-toast-icon-font-size);\n  }\n\n  &__close-icon {\n    position: absolute;\n    top: 50%;\n    right: 15px;\n    cursor: pointer;\n    transform: translateY(-50%);\n    font-size: $toast-close-font-size;\n\n    &:hover {\n      color: var(--va-toast-hover-color);\n    }\n  }\n}\n\n.va-toast-fade-enter {\n  &.right {\n    right: 0;\n    transform: translateX(100%);\n  }\n\n  &.left {\n    left: 0;\n    transform: translateX(-100%);\n  }\n}\n\n.va-toast-fade-leave-active {\n  opacity: 0;\n}\n\n</style>\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\n\nimport VaToast from './VaToast.vue'\n\nexport default withConfigTransport(VaToast)\n","import VaToast from './VaToast'\nimport { NotificationOptions } from './types'\nimport { VNode, App, createVNode, render } from 'vue'\n\nconst GAP = 5\nlet seed = 1\n\nlet toastInstances: VNode[] = []\n\ntype OptionKeys = keyof NotificationOptions;\n\nconst merge = (target: NotificationOptions | any, ...args: NotificationOptions[]): NotificationOptions => {\n  args.forEach((source) => {\n    if (typeof source !== 'object') {\n      return\n    }\n    for (const prop in source) {\n      if (Object.prototype.hasOwnProperty.call(source, prop)) {\n        const value = source[prop as OptionKeys]\n        if (value !== undefined) {\n          target[prop] = value\n        }\n      }\n    }\n  })\n  return target\n}\n\nconst getTranslateValue = (item: VNode, position: string) => {\n  if (item.el) {\n    const direction = position.includes('bottom') ? -1 : 1\n    return (item.el.offsetHeight + GAP) * direction\n  }\n  return 0\n}\n\nconst getNewTranslateValue = (transformY: string, redundantHeight: number, position: string) => {\n  const direction = position.includes('bottom') ? -1 : 1\n  return parseInt(transformY, 10) - (redundantHeight + GAP) * direction\n}\n\nconst getNodeProps = (vNode: VNode) => {\n  // Here we assume that vNode is a `withConfigTransport` wrapped component\n  // so we can derive computedProps from it\n\n  // @ts-ignore\n  return vNode.component?.proxy?.computedProps as Record<OptionKeys, any>\n}\n\nconst closeNotification = (targetInstance: VNode | null, destroyElementFn: () => void) => {\n  if (!targetInstance) {\n    return\n  }\n\n  if (!toastInstances.length) {\n    seed = 1\n    return\n  }\n  const targetInstanceIndex = toastInstances.findIndex((instance) => instance === targetInstance)\n\n  if (targetInstanceIndex < 0) {\n    return\n  }\n\n  const nodeProps = getNodeProps(targetInstance)\n\n  const {\n    offsetX: targetOffsetX,\n    offsetY: targetOffsetY,\n    position: targetPosition,\n  } = nodeProps\n  const redundantHeight: number | null = targetInstance.el?.offsetHeight\n\n  destroyElementFn()\n\n  toastInstances = toastInstances.reduce((acc: any[], instance, index) => {\n    if (instance === targetInstance) {\n      return acc\n    }\n    if (instance.component) {\n      const { offsetX, offsetY, position } = getNodeProps(instance)\n      const isNextInstance = index > targetInstanceIndex && targetOffsetX === offsetX && targetOffsetY === offsetY && targetPosition === position\n      if (isNextInstance && instance.el && redundantHeight) {\n        const [_, transformY] = instance.el.style.transform.match(/[\\d-]+(?=px)/g)\n        const transformYNew = getNewTranslateValue(transformY, redundantHeight, position)\n        instance.el.style.transform = `translate(0, ${transformYNew}px)`\n      }\n    }\n    return [...acc, instance]\n  }, [])\n\n  if (!toastInstances.length) {\n    seed = 1\n  }\n}\n\nconst destroy = (el: HTMLElement | null | undefined, node: VNode | null) => {\n  if (el) {\n    render(null, el)\n    el.remove()\n  }\n  el = null\n  node = null\n}\n\nconst mount = (component: any, {\n  props,\n  children,\n  element,\n  app,\n}: { props?: { [key: string]: any }; children?: any; element?: HTMLElement; app?: App } = {}): { vNode: VNode; el?: HTMLElement } => {\n  let el: HTMLElement | null | undefined = element\n\n  // eslint-disable-next-line prefer-const\n  let vNode: VNode | null\n\n  const onClose = () => {\n    closeNotification(vNode, () => destroy(el, vNode))\n\n    if (props?.onClose) {\n      props.onClose()\n    }\n  }\n\n  vNode = createVNode(component, { ...props, onClose }, children)\n\n  if (app?._context) {\n    vNode.appContext = app._context\n  }\n  if (el) {\n    render(vNode, el)\n  } else if (typeof document !== 'undefined') {\n    render(vNode, el = document.createElement('div'))\n  }\n\n  return { vNode, el }\n}\n\nconst closeAllNotifications = () => {\n  if (!toastInstances.length) {\n    seed = 1\n    return\n  }\n  toastInstances.forEach(instance => getNodeProps(instance).onClose())\n}\n\nconst closeById = (id: string) => {\n  const targetInstance = toastInstances.find(instance => instance.el?.id === id)\n\n  if (targetInstance) {\n    const nodeProps = getNodeProps(targetInstance)\n    nodeProps.onClose()\n  }\n}\n\nconst createToastInstance = (customProps: NotificationOptions, app: App): VNode | null => {\n  const { vNode, el } = mount(VaToast, { app, props: customProps })\n\n  const nodeProps = getNodeProps(vNode)\n\n  if (el && vNode.el && nodeProps) {\n    document.body.appendChild(el.childNodes[0])\n    const { offsetX, offsetY, position } = nodeProps\n\n    vNode.el.style.display = 'flex'\n    vNode.el.id = 'notification_' + seed\n\n    let transformY = 0\n    toastInstances.filter(item => {\n      const {\n        offsetX: itemOffsetX,\n        offsetY: itemOffsetY,\n        position: itemPosition,\n      } = getNodeProps(item)\n\n      return itemOffsetX === offsetX && itemOffsetY === offsetY && position === itemPosition\n    }).forEach((item) => {\n      transformY += getTranslateValue(item, position)\n    })\n    vNode.el.style.transform = `translate(0, ${transformY}px)`\n\n    seed += 1\n    return vNode\n  }\n  return null\n}\n\nconst getToastOptions = (options: string | NotificationOptions): any => {\n  if (typeof options === 'string') {\n    options = {\n      message: options,\n    }\n  }\n  return merge({}, options)\n}\n\nconst initNotification = (options: NotificationOptions | string, app: App) => {\n  const toastInstance = createToastInstance(getToastOptions(options), app)\n  if (toastInstance) {\n    toastInstances.push(toastInstance)\n  }\n  return toastInstance\n}\n\nclass Notification {\n  app: App;\n\n  constructor (app: App) {\n    this.app = app\n  }\n\n  init (options: NotificationOptions) {\n    return initNotification(options, this.app)?.el?.id as null | string\n  }\n\n  close (id: string) {\n    closeById(id)\n  }\n\n  closeAll () {\n    closeAllNotifications()\n  }\n}\n\nexport default Notification\n"],"names":["VaToastRendererPropsMixin","Vue","with","VaToastRendererProps","constructor","this","prop","type","Function","default","undefined","VaToastRenderer","mixins","render","content","h","Options","name","ToastPropsMixin","ToastProps","String","Number","Boolean","validator","value","includes","VaToast","ColorMixin","positionX","position","positionY","toastClasses","customClass","toastStyles","offsetY","offsetX","backgroundColor","colorComputed","computedMessage","message","destroyElement","$el","removeEventListener","remove","onToastClick","$props","onClick","$emit","onToastClose","visible","addEventListener","onClose","clearTimer","timer","clearTimeout","startTimer","duration","setTimeout","mounted","components","VaIcon","emits","class","_createBlock","_createElementVNode","_ctx","multiLine","style","onMouseenter","onMouseleave","role","_hoisted_1","_createElementBlock","_toDisplayString","_hoisted_3","innerHTML","_hoisted_6","_createVNode","size","withConfigTransport","seed","toastInstances","getNodeProps","vNode","component","proxy","computedProps","closeNotification","targetInstance","destroyElementFn","length","targetInstanceIndex","findIndex","instance","nodeProps","targetOffsetX","targetOffsetY","targetPosition","redundantHeight","el","offsetHeight","reduce","acc","index","_","transformY","transform","match","transformYNew","direction","parseInt","getNewTranslateValue","mount","props","children","element","app","createVNode","node","destroy","_context","appContext","document","createElement","getToastOptions","options","target","args","forEach","source","Object","prototype","hasOwnProperty","call","merge","initNotification","toastInstance","customProps","body","appendChild","childNodes","display","id","filter","item","itemOffsetX","itemOffsetY","itemPosition","getTranslateValue","createToastInstance","push","Notification","init","close","find","closeById","closeAll"],"mappings":"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"}