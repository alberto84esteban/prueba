{"version":3,"file":"index26.js","sources":["../../src/components/va-file-upload/VaFileUploadUndo/VaFileUploadUndo.vue","../../src/components/va-file-upload/VaFileUploadUndo/VaFileUploadUndo.vue?vue&type=template&id=ce975680&lang.js","../../src/components/va-file-upload/VaFileUploadUndo/index.ts","../../src/components/va-file-upload/VaFileUploadListItem/VaFileUploadListItem.vue","../../src/components/va-file-upload/VaFileUploadListItem/VaFileUploadListItem.vue?vue&type=template&id=90450f40&lang.js","../../src/components/va-file-upload/VaFileUploadListItem/index.ts","../../src/components/va-file-upload/VaFileUploadGalleryItem/VaFileUploadGalleryItem.vue","../../src/components/va-file-upload/VaFileUploadGalleryItem/VaFileUploadGalleryItem.vue?vue&type=template&id=15a3107c&lang.js","../../src/components/va-file-upload/VaFileUploadGalleryItem/index.ts","../../src/components/va-file-upload/VaFileUploadSingleItem/VaFileUploadSingleItem.vue","../../src/components/va-file-upload/VaFileUploadSingleItem/VaFileUploadSingleItem.vue?vue&type=template&id=28528720&lang.js","../../src/components/va-file-upload/VaFileUploadSingleItem/index.ts","../../src/components/va-file-upload/VaFileUploadList/VaFileUploadList.vue","../../src/components/va-file-upload/VaFileUploadList/VaFileUploadList.vue?vue&type=template&id=6af3e000&lang.js","../../src/components/va-file-upload/VaFileUploadList/index.ts","../../src/components/va-file-upload/VaFileUpload.vue","../../src/components/va-file-upload/VaFileUpload.vue?vue&type=template&id=c04ee272&lang.js","../../src/components/va-file-upload/index.ts"],"sourcesContent":["<template>\n  <div class=\"va-file-upload-undo\">\n    <span>File was successfully deleted</span>\n    <va-button\n      @click=\"$emit('recover')\"\n      outline\n      size=\"small\"\n      class=\"va-file-upload-undo__button\"\n    >\n      Undo\n    </va-button>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\n\nimport VaButton from '../../va-button'\n\nexport default defineComponent({\n  name: 'VaFileUploadUndo',\n  components: {\n    VaButton,\n  },\n  emits: ['recover'],\n})\n\n</script>\n\n<style lang=\"scss\">\n@import 'variables';\n\n.va-file-upload-undo {\n  height: var(--va-file-upload-undo-height);\n  display: flex;\n  align-items: center;\n\n  &__button {\n    line-height: var(--va-file-upload-undo-button-line-height);\n    margin-left: var(--va-file-upload-undo-margin-left);\n    margin-top: var(--va-file-upload-undo-button-margin-top);\n    margin-bottom: var(--va-file-upload-undo-button-margin-bottom);\n  }\n}\n</style>\n","<template>\n  <div class=\"va-file-upload-undo\">\n    <span>File was successfully deleted</span>\n    <va-button\n      @click=\"$emit('recover')\"\n      outline\n      size=\"small\"\n      class=\"va-file-upload-undo__button\"\n    >\n      Undo\n    </va-button>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\n\nimport VaButton from '../../va-button'\n\nexport default defineComponent({\n  name: 'VaFileUploadUndo',\n  components: {\n    VaButton,\n  },\n  emits: ['recover'],\n})\n\n</script>\n\n<style lang=\"scss\">\n@import 'variables';\n\n.va-file-upload-undo {\n  height: var(--va-file-upload-undo-height);\n  display: flex;\n  align-items: center;\n\n  &__button {\n    line-height: var(--va-file-upload-undo-button-line-height);\n    margin-left: var(--va-file-upload-undo-margin-left);\n    margin-top: var(--va-file-upload-undo-button-margin-top);\n    margin-bottom: var(--va-file-upload-undo-button-margin-bottom);\n  }\n}\n</style>\n","import withConfigTransport from '../../../services/config-transport/withConfigTransport'\nimport VaFileUploadUndo from './VaFileUploadUndo.vue'\n\nexport default withConfigTransport(VaFileUploadUndo)\n","<template>\n  <va-card\n    class=\"va-file-upload-list-item\"\n    :stripe=\"removed\"\n    :stripeColor=\"color\"\n    no-margin\n    no-padding\n    :class=\"{'file-upload-list-item--undo': removed}\"\n  >\n    <va-file-upload-undo\n      @recover=\"recoverFile\"\n      v-if=\"removed\"\n    />\n    <div\n      class=\"va-file-upload-list-item__content\"\n      v-else\n    >\n      <div class=\"va-file-upload-list-item__name\">\n        {{ file && file.name }}\n      </div>\n      <div class=\"va-file-upload-list-item__size\">\n        {{ file && file.size }}\n      </div>\n      <va-icon\n        color=\"danger\"\n        name=\"clear\"\n        @click=\"removeFile()\"\n        class=\"va-file-upload-list-item__delete\"\n      />\n    </div>\n  </va-card>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, ref } from 'vue'\n\nimport VaCard from '../../va-card'\nimport VaIcon from '../../va-icon'\n\nimport { VaFile } from '../types'\n\nimport VaFileUploadUndo from '../VaFileUploadUndo'\n\nexport default defineComponent({\n  name: 'VaFileUploadListItem',\n  components: {\n    VaIcon,\n    VaCard,\n    VaFileUploadUndo,\n  },\n  emits: ['remove'],\n  props: {\n    file: { type: Object as PropType<VaFile | null>, default: null },\n    color: { type: String as PropType<string>, default: 'success' },\n  },\n  setup (props, { emit }) {\n    const removed = ref(false)\n\n    const removeFile = () => {\n      removed.value = true\n\n      setTimeout(() => {\n        if (removed.value) {\n          emit('remove')\n          removed.value = false\n        }\n      }, 2000)\n    }\n\n    const recoverFile = () => { removed.value = false }\n\n    return {\n      removed,\n      removeFile,\n      recoverFile,\n    }\n  },\n})\n</script>\n\n<style lang='scss'>\n@import \"../../../styles/resources\";\n@import \"variables\";\n\n.va-file-upload-list-item {\n  & + & {\n    margin-top: 0.5rem;\n  }\n\n  line-height: 1.5rem;\n  width: 100%;\n  max-width: 100%;\n  padding: 1.125rem 0.5rem 1rem 1rem;\n\n  &__content {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n\n  &__name {\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    flex-basis: 60%;\n    overflow: hidden;\n  }\n\n  &__size {\n    color: var(--va-file-upload-list-item-size-text-color);\n  }\n\n  &__delete {\n    font-size: 1.5rem;\n    cursor: pointer;\n  }\n\n  &--undo {\n    background: none;\n    box-shadow: none;\n  }\n}\n</style>\n","<template>\n  <va-card\n    class=\"va-file-upload-list-item\"\n    :stripe=\"removed\"\n    :stripeColor=\"color\"\n    no-margin\n    no-padding\n    :class=\"{'file-upload-list-item--undo': removed}\"\n  >\n    <va-file-upload-undo\n      @recover=\"recoverFile\"\n      v-if=\"removed\"\n    />\n    <div\n      class=\"va-file-upload-list-item__content\"\n      v-else\n    >\n      <div class=\"va-file-upload-list-item__name\">\n        {{ file && file.name }}\n      </div>\n      <div class=\"va-file-upload-list-item__size\">\n        {{ file && file.size }}\n      </div>\n      <va-icon\n        color=\"danger\"\n        name=\"clear\"\n        @click=\"removeFile()\"\n        class=\"va-file-upload-list-item__delete\"\n      />\n    </div>\n  </va-card>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, ref } from 'vue'\n\nimport VaCard from '../../va-card'\nimport VaIcon from '../../va-icon'\n\nimport { VaFile } from '../types'\n\nimport VaFileUploadUndo from '../VaFileUploadUndo'\n\nexport default defineComponent({\n  name: 'VaFileUploadListItem',\n  components: {\n    VaIcon,\n    VaCard,\n    VaFileUploadUndo,\n  },\n  emits: ['remove'],\n  props: {\n    file: { type: Object as PropType<VaFile | null>, default: null },\n    color: { type: String as PropType<string>, default: 'success' },\n  },\n  setup (props, { emit }) {\n    const removed = ref(false)\n\n    const removeFile = () => {\n      removed.value = true\n\n      setTimeout(() => {\n        if (removed.value) {\n          emit('remove')\n          removed.value = false\n        }\n      }, 2000)\n    }\n\n    const recoverFile = () => { removed.value = false }\n\n    return {\n      removed,\n      removeFile,\n      recoverFile,\n    }\n  },\n})\n</script>\n\n<style lang='scss'>\n@import \"../../../styles/resources\";\n@import \"variables\";\n\n.va-file-upload-list-item {\n  & + & {\n    margin-top: 0.5rem;\n  }\n\n  line-height: 1.5rem;\n  width: 100%;\n  max-width: 100%;\n  padding: 1.125rem 0.5rem 1rem 1rem;\n\n  &__content {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n\n  &__name {\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    flex-basis: 60%;\n    overflow: hidden;\n  }\n\n  &__size {\n    color: var(--va-file-upload-list-item-size-text-color);\n  }\n\n  &__delete {\n    font-size: 1.5rem;\n    cursor: pointer;\n  }\n\n  &--undo {\n    background: none;\n    box-shadow: none;\n  }\n}\n</style>\n","import withConfigTransport from '../../../services/config-transport/withConfigTransport'\nimport VaFileUploadListItem from './VaFileUploadListItem.vue'\n\nexport default withConfigTransport(VaFileUploadListItem)\n","<template>\n  <div\n    v-if=\"removed\"\n    class=\"va-file-upload-gallery-item\"\n    :class=\"{'va-file-upload-gallery-item--undo': removed}\"\n  >\n    <va-file-upload-undo\n      class=\"va-file-upload-gallery-item--undo\"\n      @recover=\"recoverImage\"\n    />\n  </div>\n\n  <div\n    v-else\n    tabindex=\"0\"\n    class=\"va-file-upload-gallery-item\"\n    :class=\"{\n      'file-upload-gallery-item_not-image': !previewImage,\n      'va-file-upload-gallery-item--focused': isFocused\n    }\"\n    @focus=\"isFocused = true\"\n    @blur=\"isFocused = false\"\n  >\n    <img\n      v-if=\"previewImage\"\n      :src=\"previewImage\"\n      alt=\"\"\n      class=\"va-file-upload-gallery-item__image\"\n    >\n    <div class=\"va-file-upload-gallery-item__overlay\">\n      <div\n        class=\"va-file-upload-gallery-item__overlay-background\"\n        :style=\"overlayStyles\"\n      />\n      <div\n        class=\"va-file-upload-gallery-item__name\"\n        :title=\"file.name\"\n      >\n        {{ file.name }}\n      </div>\n      <va-button\n        flat\n        color=\"danger\"\n        icon=\"delete_outline\"\n        class=\"va-file-upload-gallery-item__delete\"\n        @click=\"removeImage\"\n        @focus=\"isFocused = true\"\n        @blur=\"isFocused = false\"\n      />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, onMounted, PropType, ref, watch, computed } from 'vue'\n\nimport VaFileUploadUndo from '../VaFileUploadUndo'\nimport { colorToRgba } from '../../../services/color-config/color-functions'\n\nimport type { ConvertedFile } from '../types'\n\nexport default defineComponent({\n  name: 'VaFileUploadGalleryItem',\n  components: { VaFileUploadUndo },\n  emits: ['remove'],\n  props: {\n    file: { type: Object as PropType<ConvertedFile>, default: null },\n    color: { type: String as PropType<string>, default: 'success' },\n  },\n  setup (props, { emit }) {\n    const previewImage = ref('')\n    const removed = ref(false)\n    const isFocused = ref(false)\n\n    const overlayStyles = computed(() => ({ backgroundColor: colorToRgba(props.color, 0.7) }))\n\n    const removeImage = () => {\n      removed.value = true\n\n      setTimeout(() => {\n        if (!removed.value) { return }\n\n        emit('remove')\n        removed.value = false\n      }, 2000)\n    }\n\n    const recoverImage = () => { removed.value = false }\n\n    const convertToImg = () => {\n      if (!props.file.name || !props.file.image) { return }\n\n      if (props.file.image.url) {\n        previewImage.value = props.file.image.url\n      } else if (props.file.image instanceof File) {\n        const reader = new FileReader()\n        reader.readAsDataURL(props.file.image)\n        reader.onload = (e) => {\n          if ((e.target?.result as string).includes('image')) {\n            previewImage.value = e.target?.result as string\n          }\n        }\n      }\n    }\n\n    onMounted(convertToImg)\n    watch(() => props.file, convertToImg)\n\n    return {\n      previewImage,\n      removed,\n      isFocused,\n      recoverImage,\n      overlayStyles,\n      removeImage,\n    }\n  },\n})\n</script>\n\n<style lang='scss'>\n@import \"variables\";\n@import \"../../../styles/resources\";\n\n$max-image-size: 8.5714rem;\n\n.va-file-upload-gallery-item {\n  display: flex;\n  position: relative;\n  margin-bottom: 1rem;\n  margin-right: 0.5rem;\n  flex-basis: calc(14.2857% - 0.5rem);\n  max-width: calc(14.2857% - 0.5rem);\n  border-radius: 0.375rem;\n  overflow: hidden;\n  width: 100%;\n  align-items: stretch;\n\n  @include media-breakpoint-down(md) {\n    flex-basis: calc(16.667% - 0.5rem);\n    max-width: calc(16.667% - 0.5rem);\n  }\n\n  @include media-breakpoint-down(sm) {\n    flex-basis: calc(20% - 0.5rem);\n    max-width: calc(20% - 0.5rem);\n  }\n\n  @include media-breakpoint-down(xs) {\n    flex-basis: calc(50% - 0.5rem);\n    max-width: calc(50% - 0.5rem);\n  }\n\n  &:last-of-type {\n    margin-right: 0;\n  }\n\n  &:hover,\n  &:focus,\n  &--focused {\n    .va-file-upload-gallery-item__overlay {\n      z-index: 3;\n      opacity: 1;\n    }\n\n    .va-file-upload-gallery-item {\n      &__name {\n        color: var(--va-file-upload-gallery-item-text-hover);\n      }\n    }\n  }\n\n  &__overlay {\n    display: flex;\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    top: 0;\n    left: 0;\n    flex-direction: column;\n    padding: 0.5rem;\n    z-index: -1;\n    opacity: 0;\n  }\n\n  &__overlay-background {\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    top: 0;\n    left: 0;\n    z-index: -1;\n  }\n\n  &__image {\n    width: 100%;\n    box-shadow: var(--va-box-shadow);\n    object-fit: cover;\n    z-index: 1;\n  }\n\n  &__name {\n    color: var(--va-file-upload-gallery-item-text);\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    font-size: 0.875rem;\n  }\n\n  &__delete {\n    cursor: pointer;\n    font-size: 1.5rem;\n    margin-top: auto;\n  }\n\n  &--undo {\n    box-shadow: none;\n\n    .va-file-upload-gallery-item--undo {\n      padding: 0.5rem;\n      display: flex;\n      flex-direction: column;\n      font-size: 0.875rem;\n      height: 100%;\n      justify-content: space-between;\n      align-items: flex-start;\n\n      span {\n        margin-right: 0.5rem;\n      }\n\n      .va-button {\n        margin: 0;\n      }\n    }\n  }\n}\n\n.file-upload-gallery-item_not-image {\n  .file-upload-gallery-item__overlay {\n    display: flex;\n  }\n}\n</style>\n","<template>\n  <div\n    v-if=\"removed\"\n    class=\"va-file-upload-gallery-item\"\n    :class=\"{'va-file-upload-gallery-item--undo': removed}\"\n  >\n    <va-file-upload-undo\n      class=\"va-file-upload-gallery-item--undo\"\n      @recover=\"recoverImage\"\n    />\n  </div>\n\n  <div\n    v-else\n    tabindex=\"0\"\n    class=\"va-file-upload-gallery-item\"\n    :class=\"{\n      'file-upload-gallery-item_not-image': !previewImage,\n      'va-file-upload-gallery-item--focused': isFocused\n    }\"\n    @focus=\"isFocused = true\"\n    @blur=\"isFocused = false\"\n  >\n    <img\n      v-if=\"previewImage\"\n      :src=\"previewImage\"\n      alt=\"\"\n      class=\"va-file-upload-gallery-item__image\"\n    >\n    <div class=\"va-file-upload-gallery-item__overlay\">\n      <div\n        class=\"va-file-upload-gallery-item__overlay-background\"\n        :style=\"overlayStyles\"\n      />\n      <div\n        class=\"va-file-upload-gallery-item__name\"\n        :title=\"file.name\"\n      >\n        {{ file.name }}\n      </div>\n      <va-button\n        flat\n        color=\"danger\"\n        icon=\"delete_outline\"\n        class=\"va-file-upload-gallery-item__delete\"\n        @click=\"removeImage\"\n        @focus=\"isFocused = true\"\n        @blur=\"isFocused = false\"\n      />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, onMounted, PropType, ref, watch, computed } from 'vue'\n\nimport VaFileUploadUndo from '../VaFileUploadUndo'\nimport { colorToRgba } from '../../../services/color-config/color-functions'\n\nimport type { ConvertedFile } from '../types'\n\nexport default defineComponent({\n  name: 'VaFileUploadGalleryItem',\n  components: { VaFileUploadUndo },\n  emits: ['remove'],\n  props: {\n    file: { type: Object as PropType<ConvertedFile>, default: null },\n    color: { type: String as PropType<string>, default: 'success' },\n  },\n  setup (props, { emit }) {\n    const previewImage = ref('')\n    const removed = ref(false)\n    const isFocused = ref(false)\n\n    const overlayStyles = computed(() => ({ backgroundColor: colorToRgba(props.color, 0.7) }))\n\n    const removeImage = () => {\n      removed.value = true\n\n      setTimeout(() => {\n        if (!removed.value) { return }\n\n        emit('remove')\n        removed.value = false\n      }, 2000)\n    }\n\n    const recoverImage = () => { removed.value = false }\n\n    const convertToImg = () => {\n      if (!props.file.name || !props.file.image) { return }\n\n      if (props.file.image.url) {\n        previewImage.value = props.file.image.url\n      } else if (props.file.image instanceof File) {\n        const reader = new FileReader()\n        reader.readAsDataURL(props.file.image)\n        reader.onload = (e) => {\n          if ((e.target?.result as string).includes('image')) {\n            previewImage.value = e.target?.result as string\n          }\n        }\n      }\n    }\n\n    onMounted(convertToImg)\n    watch(() => props.file, convertToImg)\n\n    return {\n      previewImage,\n      removed,\n      isFocused,\n      recoverImage,\n      overlayStyles,\n      removeImage,\n    }\n  },\n})\n</script>\n\n<style lang='scss'>\n@import \"variables\";\n@import \"../../../styles/resources\";\n\n$max-image-size: 8.5714rem;\n\n.va-file-upload-gallery-item {\n  display: flex;\n  position: relative;\n  margin-bottom: 1rem;\n  margin-right: 0.5rem;\n  flex-basis: calc(14.2857% - 0.5rem);\n  max-width: calc(14.2857% - 0.5rem);\n  border-radius: 0.375rem;\n  overflow: hidden;\n  width: 100%;\n  align-items: stretch;\n\n  @include media-breakpoint-down(md) {\n    flex-basis: calc(16.667% - 0.5rem);\n    max-width: calc(16.667% - 0.5rem);\n  }\n\n  @include media-breakpoint-down(sm) {\n    flex-basis: calc(20% - 0.5rem);\n    max-width: calc(20% - 0.5rem);\n  }\n\n  @include media-breakpoint-down(xs) {\n    flex-basis: calc(50% - 0.5rem);\n    max-width: calc(50% - 0.5rem);\n  }\n\n  &:last-of-type {\n    margin-right: 0;\n  }\n\n  &:hover,\n  &:focus,\n  &--focused {\n    .va-file-upload-gallery-item__overlay {\n      z-index: 3;\n      opacity: 1;\n    }\n\n    .va-file-upload-gallery-item {\n      &__name {\n        color: var(--va-file-upload-gallery-item-text-hover);\n      }\n    }\n  }\n\n  &__overlay {\n    display: flex;\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    top: 0;\n    left: 0;\n    flex-direction: column;\n    padding: 0.5rem;\n    z-index: -1;\n    opacity: 0;\n  }\n\n  &__overlay-background {\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    top: 0;\n    left: 0;\n    z-index: -1;\n  }\n\n  &__image {\n    width: 100%;\n    box-shadow: var(--va-box-shadow);\n    object-fit: cover;\n    z-index: 1;\n  }\n\n  &__name {\n    color: var(--va-file-upload-gallery-item-text);\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    font-size: 0.875rem;\n  }\n\n  &__delete {\n    cursor: pointer;\n    font-size: 1.5rem;\n    margin-top: auto;\n  }\n\n  &--undo {\n    box-shadow: none;\n\n    .va-file-upload-gallery-item--undo {\n      padding: 0.5rem;\n      display: flex;\n      flex-direction: column;\n      font-size: 0.875rem;\n      height: 100%;\n      justify-content: space-between;\n      align-items: flex-start;\n\n      span {\n        margin-right: 0.5rem;\n      }\n\n      .va-button {\n        margin: 0;\n      }\n    }\n  }\n}\n\n.file-upload-gallery-item_not-image {\n  .file-upload-gallery-item__overlay {\n    display: flex;\n  }\n}\n</style>\n","import withConfigTransport from '../../../services/config-transport/withConfigTransport'\nimport VaFileUploadGalleryItem from './VaFileUploadGalleryItem.vue'\n\nexport default withConfigTransport(VaFileUploadGalleryItem)\n","<template>\n  <div class=\"va-file-upload-single-item\">\n    <div class=\"va-file-upload-single-item__name\">\n      {{ file && file.name }}\n    </div>\n    <va-button\n      flat\n      @click=\"$emit('remove')\"\n      color=\"danger\"\n      size=\"small\"\n      class=\"va-file-upload-single-item__button\"\n    >\n      Delete\n    </va-button>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType } from 'vue'\n\nimport VaButton from '../../va-button'\n\nimport { VaFile } from '../types'\n\nexport default defineComponent({\n  name: 'VaFileUploadSingleItem',\n  components: {\n    VaButton,\n  },\n  emits: ['remove'],\n  props: {\n    file: { type: Object as PropType<VaFile | null>, default: null },\n  },\n})\n</script>\n\n<style lang='scss'>\n.va-file-upload-single-item {\n  display: flex;\n  align-items: center;\n  max-width: 100%;\n\n  &__name {\n    margin-right: 0.25rem;\n    max-width: 80%;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n\n  &__button {\n    margin-top: 0;\n    margin-bottom: 0;\n    font-weight: 700;\n  }\n}\n</style>\n","<template>\n  <div class=\"va-file-upload-single-item\">\n    <div class=\"va-file-upload-single-item__name\">\n      {{ file && file.name }}\n    </div>\n    <va-button\n      flat\n      @click=\"$emit('remove')\"\n      color=\"danger\"\n      size=\"small\"\n      class=\"va-file-upload-single-item__button\"\n    >\n      Delete\n    </va-button>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType } from 'vue'\n\nimport VaButton from '../../va-button'\n\nimport { VaFile } from '../types'\n\nexport default defineComponent({\n  name: 'VaFileUploadSingleItem',\n  components: {\n    VaButton,\n  },\n  emits: ['remove'],\n  props: {\n    file: { type: Object as PropType<VaFile | null>, default: null },\n  },\n})\n</script>\n\n<style lang='scss'>\n.va-file-upload-single-item {\n  display: flex;\n  align-items: center;\n  max-width: 100%;\n\n  &__name {\n    margin-right: 0.25rem;\n    max-width: 80%;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n\n  &__button {\n    margin-top: 0;\n    margin-bottom: 0;\n    font-weight: 700;\n  }\n}\n</style>\n","import withConfigTransport from '../../../services/config-transport/withConfigTransport'\nimport VaFileUploadSingleItem from './VaFileUploadSingleItem.vue'\n\nexport default withConfigTransport(VaFileUploadSingleItem)\n","<template>\n  <div\n    class=\"va-file-upload-list\"\n    :class=\"`va-file-upload-list--${type}`\"\n  >\n    <template v-if=\"type === 'list'\">\n      <va-file-upload-list-item\n        v-for=\"(file, index) in filesList\"\n        :key=\"file.name\"\n        :file=\"file\"\n        :color=\"color\"\n        @remove=\"$emit('remove', index)\"\n      />\n    </template>\n    <template v-if=\"type === 'gallery'\">\n      <va-file-upload-gallery-item\n        v-for=\"(file, index) in filesList\"\n        :file=\"file\"\n        :key=\"file.name\"\n        :color=\"color\"\n        @remove=\"$emit('remove', index)\"\n      />\n    </template>\n    <template v-if=\"type === 'single' && filesList.length\">\n      <va-file-upload-single-item\n        :file=\"filesList[filesList.length - 1]\"\n        @remove=\"$emit('removeSingle')\"\n      />\n    </template>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, computed } from 'vue'\n\nimport VaFileUploadListItem from '../VaFileUploadListItem'\nimport VaFileUploadGalleryItem from '../VaFileUploadGalleryItem'\nimport VaFileUploadSingleItem from '../VaFileUploadSingleItem'\n\nimport type { VaFile, ConvertedFile } from '../types'\n\nexport default defineComponent({\n  name: 'VaFileUploadList',\n  components: {\n    VaFileUploadListItem,\n    VaFileUploadGalleryItem,\n    VaFileUploadSingleItem,\n  },\n  emits: ['remove', 'removeSingle'],\n  props: {\n    type: { type: String as PropType<string>, default: '' },\n    files: { type: Array as PropType<VaFile[]>, default: null },\n    color: { type: String as PropType<string>, default: 'success' },\n  },\n  setup (props) {\n    const filesList = computed(() => props.files.map(convertFile))\n\n    const convertFile = (file: VaFile): ConvertedFile => ({\n      name: file.name || file.url || '',\n      size: formatSize(file.size),\n      date: formatDate(new Date()),\n      image: file,\n    })\n\n    const formatSize = (bytes?: number) => {\n      if (bytes === 0) { return '0 Bytes' }\n      if (!bytes) { return '' }\n\n      const k = 1024\n      const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n      const i = Math.floor(Math.log(bytes) / Math.log(k))\n\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\n    }\n\n    const formatDate = (date = new Date()) => {\n      return date.toLocaleDateString('en-US', {\n        hour: '2-digit',\n        minute: '2-digit',\n        month: 'short',\n        day: 'numeric',\n        year: 'numeric',\n      })\n    }\n\n    return {\n      filesList,\n    }\n  },\n})\n</script>\n\n<style lang='scss'>\n.va-file-upload-list {\n  display: flex;\n  flex-wrap: wrap;\n  padding: 0 0 1.5rem;\n\n  &--gallery {\n    padding-bottom: 0.5rem;\n  }\n}\n</style>\n","<template>\n  <div\n    class=\"va-file-upload-list\"\n    :class=\"`va-file-upload-list--${type}`\"\n  >\n    <template v-if=\"type === 'list'\">\n      <va-file-upload-list-item\n        v-for=\"(file, index) in filesList\"\n        :key=\"file.name\"\n        :file=\"file\"\n        :color=\"color\"\n        @remove=\"$emit('remove', index)\"\n      />\n    </template>\n    <template v-if=\"type === 'gallery'\">\n      <va-file-upload-gallery-item\n        v-for=\"(file, index) in filesList\"\n        :file=\"file\"\n        :key=\"file.name\"\n        :color=\"color\"\n        @remove=\"$emit('remove', index)\"\n      />\n    </template>\n    <template v-if=\"type === 'single' && filesList.length\">\n      <va-file-upload-single-item\n        :file=\"filesList[filesList.length - 1]\"\n        @remove=\"$emit('removeSingle')\"\n      />\n    </template>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, computed } from 'vue'\n\nimport VaFileUploadListItem from '../VaFileUploadListItem'\nimport VaFileUploadGalleryItem from '../VaFileUploadGalleryItem'\nimport VaFileUploadSingleItem from '../VaFileUploadSingleItem'\n\nimport type { VaFile, ConvertedFile } from '../types'\n\nexport default defineComponent({\n  name: 'VaFileUploadList',\n  components: {\n    VaFileUploadListItem,\n    VaFileUploadGalleryItem,\n    VaFileUploadSingleItem,\n  },\n  emits: ['remove', 'removeSingle'],\n  props: {\n    type: { type: String as PropType<string>, default: '' },\n    files: { type: Array as PropType<VaFile[]>, default: null },\n    color: { type: String as PropType<string>, default: 'success' },\n  },\n  setup (props) {\n    const filesList = computed(() => props.files.map(convertFile))\n\n    const convertFile = (file: VaFile): ConvertedFile => ({\n      name: file.name || file.url || '',\n      size: formatSize(file.size),\n      date: formatDate(new Date()),\n      image: file,\n    })\n\n    const formatSize = (bytes?: number) => {\n      if (bytes === 0) { return '0 Bytes' }\n      if (!bytes) { return '' }\n\n      const k = 1024\n      const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n      const i = Math.floor(Math.log(bytes) / Math.log(k))\n\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\n    }\n\n    const formatDate = (date = new Date()) => {\n      return date.toLocaleDateString('en-US', {\n        hour: '2-digit',\n        minute: '2-digit',\n        month: 'short',\n        day: 'numeric',\n        year: 'numeric',\n      })\n    }\n\n    return {\n      filesList,\n    }\n  },\n})\n</script>\n\n<style lang='scss'>\n.va-file-upload-list {\n  display: flex;\n  flex-wrap: wrap;\n  padding: 0 0 1.5rem;\n\n  &--gallery {\n    padding-bottom: 0.5rem;\n  }\n}\n</style>\n","import withConfigTransport from '../../../services/config-transport/withConfigTransport'\nimport VaFileUploadList from './VaFileUploadList.vue'\n\nexport default withConfigTransport(VaFileUploadList)\n","<template>\n  <div\n    class=\"va-file-upload\"\n    :class=\"{ 'va-file-upload--dropzone': dropzone }\"\n    :style=\"computedStyle\"\n  >\n    <div class=\"va-file-upload__field\">\n      <div\n        class=\"va-file-upload__field__text\"\n        v-if=\"dropzone\"\n      >\n        Drag’n’drop files or\n      </div>\n      <va-button\n        class=\"va-file-upload__field__button\"\n        :disabled=\"disabled\"\n        :color=\"colorComputed\"\n        @change=\"changeFieldValue\"\n        @click=\"callFileDialogue()\"\n        icon=\"\"\n        icon-right=\"\"\n        :style=\"{ 'pointer-events': dropzoneHighlight ? 'none' : '' }\"\n      >\n        Upload file\n      </va-button>\n    </div>\n    <input\n      ref=\"fileInputRef\"\n      type=\"file\"\n      class=\"va-file-upload__field__input\"\n      :accept=\"fileTypes\"\n      :multiple=\"type !== 'single'\"\n      :disabled=\"disabled\"\n      @change=\"changeFieldValue\"\n      @dragenter=\"dropzoneHighlight = true\"\n      @dragleave=\"dropzoneHighlight = false\"\n      tabindex=\"-1\"\n    >\n    <va-file-upload-list\n      v-if=\"files.length\"\n      :type=\"type\"\n      :files=\"files\"\n      :color=\"colorComputed\"\n      @remove=\"removeFile\"\n      @removeSingle=\"removeSingleFile\"\n    />\n    <va-modal\n      v-model=\"modal\"\n      hide-default-actions\n      title=\"File validation\"\n      message=\"File type is incorrect!\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, onMounted, ref, PropType } from 'vue'\nimport { useColors } from '../../services/color-config/color-config'\nimport { shiftHSLAColor } from '../../services/color-config/color-functions'\nimport VaButton from '../va-button'\nimport VaModal from '../va-modal'\nimport VaFileUploadList from './VaFileUploadList'\n\nimport type { VaFile } from './types'\n\nexport default defineComponent({\n  name: 'VaFileUpload',\n\n  components: {\n    VaModal,\n    VaButton,\n    VaFileUploadList,\n  },\n\n  props: {\n    fileTypes: { type: String as PropType<string>, default: '' },\n    dropzone: { type: Boolean as PropType<boolean>, default: false },\n    color: { type: String as PropType<string>, default: 'primary' },\n    disabled: { type: Boolean as PropType<boolean>, default: false },\n\n    modelValue: {\n      type: Array as PropType<VaFile[]>,\n      default: () => [],\n      validator: (value: VaFile[]) => Array.isArray(value),\n    },\n    type: {\n      type: String as PropType<'list' | 'gallery' | 'single'>,\n      default: 'list',\n      validator: (value: string) => ['list', 'gallery', 'single'].includes(value),\n    },\n  },\n\n  emits: ['update:modelValue'],\n\n  setup (props, { emit }) {\n    const modal = ref(false)\n    const dropzoneHighlight = ref(false)\n    const fileInputRef = ref<HTMLInputElement | null>(null)\n\n    const { getColor } = useColors()\n\n    const colorComputed = computed(() => getColor(props.color))\n\n    const computedStyle = computed(() => {\n      if (props.dropzone) {\n        return {\n          backgroundColor: shiftHSLAColor(colorComputed.value, { a: dropzoneHighlight.value ? -0.82 : -0.92 }),\n        }\n      }\n\n      return { backgroundColor: 'transparent' }\n    })\n\n    const files = computed<VaFile[]>({\n      get () { return props.modelValue },\n      set (files) { emit('update:modelValue', files) },\n    })\n\n    const validateFiles = (files: VaFile[]) => files.filter((file) => {\n      const fileName = file.name || file.url\n      if (!fileName) { return false }\n      if (file.url) { return true }\n\n      const MIMETypes = ['audio/*', 'video/*', 'image/*']\n      const isContainedMIMEType = MIMETypes.find((t) => props.fileTypes.includes(t))\n\n      if (isContainedMIMEType) {\n        // Do not validate MIMEType because there is too much to validate.\n        return true\n      }\n\n      const extn = fileName.substring(fileName.lastIndexOf('.') + 1).toLowerCase()\n\n      const isCorrectExt = props.fileTypes.includes(extn)\n      if (!isCorrectExt) { modal.value = true }\n\n      return isCorrectExt\n    })\n\n    const uploadFile = (e: Event | DragEvent) => {\n      const f = (e.target as HTMLInputElement)?.files || (e as DragEvent).dataTransfer?.files\n\n      if (!f) { return }\n\n      files.value = [...files.value, ...(props.fileTypes ? validateFiles(Array.from(f)) : f)]\n    }\n\n    const changeFieldValue = (e: Event | DragEvent) => {\n      uploadFile(e)\n\n      if (fileInputRef.value) {\n        fileInputRef.value.value = ''\n      }\n    }\n\n    const removeFile = (index: number) => { files.value = files.value.filter((item, idx) => idx !== index) }\n\n    const removeSingleFile = () => { files.value = [] }\n\n    const callFileDialogue = () => {\n      if (fileInputRef.value) {\n        fileInputRef.value.click()\n      }\n    }\n\n    onMounted(() => {\n      if (Array.isArray(files.value)) {\n        files.value = validateFiles(files.value)\n      }\n    })\n\n    return {\n      modal,\n      dropzoneHighlight,\n      fileInputRef,\n      colorComputed,\n      computedStyle,\n      uploadFile,\n      changeFieldValue,\n      files,\n      removeFile,\n      removeSingleFile,\n      callFileDialogue,\n    }\n  },\n})\n</script>\n\n<style lang='scss'>\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-file-upload {\n  position: var(--va-file-upload-position);\n  font-family: var(--va-font-family);\n  margin: var(--va-file-upload-margin);\n\n  .va-file-upload-list {\n    margin-top: var(--va-file-upload-list-margin-top);\n  }\n\n  &--dropzone {\n    background-color: var(--va-file-upload-dropzone-background-color);\n    overflow: var(--va-file-upload-dropzone-overflow);\n    border-radius: var(--va-file-upload-dropzone-border-radius);\n    cursor: var(--va-file-upload-dropzone-cursor);\n\n    .va-file-upload__field {\n      justify-content: center;\n      display: flex;\n      align-items: center;\n      padding: var(--va-file-upload-dropzone-field-padding);\n      transition: height 0.2s;\n      overflow: visible;\n      flex-wrap: wrap;\n\n      @include media-breakpoint-down(sm) {\n        flex-direction: column;\n        padding: var(--va-file-upload-dropzone-field-padding-sm);\n\n        &__text {\n          padding: var(--va-file-upload-dropzone-text-padding-sm);\n          text-align: center;\n        }\n      }\n    }\n\n    .va-file-upload-list {\n      padding: var(--va-file-upload-dropzone-list-padding);\n      margin-top: 0;\n    }\n  }\n\n  &__field {\n    overflow: var(--va-file-upload-dropzone-field-overflow);\n    display: var(--va-file-upload-dropzone-field-display);\n    align-items: var(--va-file-upload-dropzone-field-align-items);\n    position: var(--va-file-upload-dropzone-field-position);\n\n    &__button {\n      margin: var(--va-file-upload-dropzone-field-button-margin);\n      z-index: var(--va-file-upload-dropzone-field-button-z-index);\n    }\n\n    &__text {\n      padding-right: var(--va-file-upload-dropzone-field-text-pr);\n    }\n\n    &__input {\n      position: absolute;\n      top: 0;\n      right: 0;\n      height: 100%;\n      width: 100%;\n      color: transparent;\n      opacity: 0;\n      cursor: pointer;\n\n      &::-webkit-file-upload-button {\n        cursor: pointer;\n      }\n    }\n  }\n}\n</style>\n","<template>\n  <div\n    class=\"va-file-upload\"\n    :class=\"{ 'va-file-upload--dropzone': dropzone }\"\n    :style=\"computedStyle\"\n  >\n    <div class=\"va-file-upload__field\">\n      <div\n        class=\"va-file-upload__field__text\"\n        v-if=\"dropzone\"\n      >\n        Drag’n’drop files or\n      </div>\n      <va-button\n        class=\"va-file-upload__field__button\"\n        :disabled=\"disabled\"\n        :color=\"colorComputed\"\n        @change=\"changeFieldValue\"\n        @click=\"callFileDialogue()\"\n        icon=\"\"\n        icon-right=\"\"\n        :style=\"{ 'pointer-events': dropzoneHighlight ? 'none' : '' }\"\n      >\n        Upload file\n      </va-button>\n    </div>\n    <input\n      ref=\"fileInputRef\"\n      type=\"file\"\n      class=\"va-file-upload__field__input\"\n      :accept=\"fileTypes\"\n      :multiple=\"type !== 'single'\"\n      :disabled=\"disabled\"\n      @change=\"changeFieldValue\"\n      @dragenter=\"dropzoneHighlight = true\"\n      @dragleave=\"dropzoneHighlight = false\"\n      tabindex=\"-1\"\n    >\n    <va-file-upload-list\n      v-if=\"files.length\"\n      :type=\"type\"\n      :files=\"files\"\n      :color=\"colorComputed\"\n      @remove=\"removeFile\"\n      @removeSingle=\"removeSingleFile\"\n    />\n    <va-modal\n      v-model=\"modal\"\n      hide-default-actions\n      title=\"File validation\"\n      message=\"File type is incorrect!\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, onMounted, ref, PropType } from 'vue'\nimport { useColors } from '../../services/color-config/color-config'\nimport { shiftHSLAColor } from '../../services/color-config/color-functions'\nimport VaButton from '../va-button'\nimport VaModal from '../va-modal'\nimport VaFileUploadList from './VaFileUploadList'\n\nimport type { VaFile } from './types'\n\nexport default defineComponent({\n  name: 'VaFileUpload',\n\n  components: {\n    VaModal,\n    VaButton,\n    VaFileUploadList,\n  },\n\n  props: {\n    fileTypes: { type: String as PropType<string>, default: '' },\n    dropzone: { type: Boolean as PropType<boolean>, default: false },\n    color: { type: String as PropType<string>, default: 'primary' },\n    disabled: { type: Boolean as PropType<boolean>, default: false },\n\n    modelValue: {\n      type: Array as PropType<VaFile[]>,\n      default: () => [],\n      validator: (value: VaFile[]) => Array.isArray(value),\n    },\n    type: {\n      type: String as PropType<'list' | 'gallery' | 'single'>,\n      default: 'list',\n      validator: (value: string) => ['list', 'gallery', 'single'].includes(value),\n    },\n  },\n\n  emits: ['update:modelValue'],\n\n  setup (props, { emit }) {\n    const modal = ref(false)\n    const dropzoneHighlight = ref(false)\n    const fileInputRef = ref<HTMLInputElement | null>(null)\n\n    const { getColor } = useColors()\n\n    const colorComputed = computed(() => getColor(props.color))\n\n    const computedStyle = computed(() => {\n      if (props.dropzone) {\n        return {\n          backgroundColor: shiftHSLAColor(colorComputed.value, { a: dropzoneHighlight.value ? -0.82 : -0.92 }),\n        }\n      }\n\n      return { backgroundColor: 'transparent' }\n    })\n\n    const files = computed<VaFile[]>({\n      get () { return props.modelValue },\n      set (files) { emit('update:modelValue', files) },\n    })\n\n    const validateFiles = (files: VaFile[]) => files.filter((file) => {\n      const fileName = file.name || file.url\n      if (!fileName) { return false }\n      if (file.url) { return true }\n\n      const MIMETypes = ['audio/*', 'video/*', 'image/*']\n      const isContainedMIMEType = MIMETypes.find((t) => props.fileTypes.includes(t))\n\n      if (isContainedMIMEType) {\n        // Do not validate MIMEType because there is too much to validate.\n        return true\n      }\n\n      const extn = fileName.substring(fileName.lastIndexOf('.') + 1).toLowerCase()\n\n      const isCorrectExt = props.fileTypes.includes(extn)\n      if (!isCorrectExt) { modal.value = true }\n\n      return isCorrectExt\n    })\n\n    const uploadFile = (e: Event | DragEvent) => {\n      const f = (e.target as HTMLInputElement)?.files || (e as DragEvent).dataTransfer?.files\n\n      if (!f) { return }\n\n      files.value = [...files.value, ...(props.fileTypes ? validateFiles(Array.from(f)) : f)]\n    }\n\n    const changeFieldValue = (e: Event | DragEvent) => {\n      uploadFile(e)\n\n      if (fileInputRef.value) {\n        fileInputRef.value.value = ''\n      }\n    }\n\n    const removeFile = (index: number) => { files.value = files.value.filter((item, idx) => idx !== index) }\n\n    const removeSingleFile = () => { files.value = [] }\n\n    const callFileDialogue = () => {\n      if (fileInputRef.value) {\n        fileInputRef.value.click()\n      }\n    }\n\n    onMounted(() => {\n      if (Array.isArray(files.value)) {\n        files.value = validateFiles(files.value)\n      }\n    })\n\n    return {\n      modal,\n      dropzoneHighlight,\n      fileInputRef,\n      colorComputed,\n      computedStyle,\n      uploadFile,\n      changeFieldValue,\n      files,\n      removeFile,\n      removeSingleFile,\n      callFileDialogue,\n    }\n  },\n})\n</script>\n\n<style lang='scss'>\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-file-upload {\n  position: var(--va-file-upload-position);\n  font-family: var(--va-font-family);\n  margin: var(--va-file-upload-margin);\n\n  .va-file-upload-list {\n    margin-top: var(--va-file-upload-list-margin-top);\n  }\n\n  &--dropzone {\n    background-color: var(--va-file-upload-dropzone-background-color);\n    overflow: var(--va-file-upload-dropzone-overflow);\n    border-radius: var(--va-file-upload-dropzone-border-radius);\n    cursor: var(--va-file-upload-dropzone-cursor);\n\n    .va-file-upload__field {\n      justify-content: center;\n      display: flex;\n      align-items: center;\n      padding: var(--va-file-upload-dropzone-field-padding);\n      transition: height 0.2s;\n      overflow: visible;\n      flex-wrap: wrap;\n\n      @include media-breakpoint-down(sm) {\n        flex-direction: column;\n        padding: var(--va-file-upload-dropzone-field-padding-sm);\n\n        &__text {\n          padding: var(--va-file-upload-dropzone-text-padding-sm);\n          text-align: center;\n        }\n      }\n    }\n\n    .va-file-upload-list {\n      padding: var(--va-file-upload-dropzone-list-padding);\n      margin-top: 0;\n    }\n  }\n\n  &__field {\n    overflow: var(--va-file-upload-dropzone-field-overflow);\n    display: var(--va-file-upload-dropzone-field-display);\n    align-items: var(--va-file-upload-dropzone-field-align-items);\n    position: var(--va-file-upload-dropzone-field-position);\n\n    &__button {\n      margin: var(--va-file-upload-dropzone-field-button-margin);\n      z-index: var(--va-file-upload-dropzone-field-button-z-index);\n    }\n\n    &__text {\n      padding-right: var(--va-file-upload-dropzone-field-text-pr);\n    }\n\n    &__input {\n      position: absolute;\n      top: 0;\n      right: 0;\n      height: 100%;\n      width: 100%;\n      color: transparent;\n      opacity: 0;\n      cursor: pointer;\n\n      &::-webkit-file-upload-button {\n        cursor: pointer;\n      }\n    }\n  }\n}\n</style>\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\nimport VaFileUpload from './VaFileUpload.vue'\n\nexport { default as VaFileUploadGalleryItem } from './VaFileUploadGalleryItem'\nexport { default as VaFileUploadList } from './VaFileUploadList'\nexport { default as VaFileUploadListItem } from './VaFileUploadListItem'\nexport { default as VaFileUploadSingleItem } from './VaFileUploadSingleItem'\nexport { default as VaFileUploadUndo } from './VaFileUploadUndo'\n\nexport default withConfigTransport(VaFileUpload)\n"],"names":["defineComponent","name","components","VaButton","emits","class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_createVNode","onClick","_ctx","outline","size","withConfigTransport","VaFileUploadUndo","VaIcon","VaCard","props","file","type","Object","default","color","String","setup","emit","removed","ref","removeFile","value","setTimeout","recoverFile","_createBlock","stripe","stripeColor","onRecover","_hoisted_3","VaFileUploadListItem","previewImage","isFocused","overlayStyles","computed","backgroundColor","colorToRgba","convertToImg","image","url","File","reader","FileReader","readAsDataURL","onload","e","target","result","includes","onMounted","watch","recoverImage","removeImage","tabindex","onFocus","onBlur","src","alt","style","title","flat","icon","VaFileUploadGalleryItem","VaFileUploadSingleItem","files","Array","filesList","map","convertFile","formatSize","date","formatDate","Date","bytes","i","Math","floor","log","parseFloat","pow","toFixed","toLocaleDateString","hour","minute","month","day","year","index","key","onRemove","length","VaFileUploadList","VaModal","fileTypes","dropzone","Boolean","disabled","modelValue","validator","isArray","modal","dropzoneHighlight","fileInputRef","getColor","useColors","colorComputed","computedStyle","shiftHSLAColor","a","get","set","validateFiles","filter","fileName","find","t","extn","substring","lastIndexOf","toLowerCase","isCorrectExt","uploadFile","f","dataTransfer","from","changeFieldValue","item","idx","removeSingleFile","callFileDialogue","click","onChange","accept","multiple","onDragenter","onDragleave","onRemoveSingle","message","VaFileUpload"],"mappings":"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"}