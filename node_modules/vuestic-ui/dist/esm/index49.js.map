{"version":3,"file":"index49.js","sources":["../../src/components/va-tree-view/VaTreeRoot.vue","../../src/components/va-tree-view/VaTreeRoot.vue?vue&type=template&id=0e558b08&lang.js","../../src/components/va-tree-view/VaTreeNode/VaTreeNode.vue","../../src/components/va-tree-view/VaTreeNode/VaTreeNode.vue?vue&type=template&id=55056222&lang.js","../../src/components/va-tree-view/VaTreeNode/index.ts","../../src/components/va-tree-view/SquareWithIcon/SquareWithIcon.vue","../../src/components/va-tree-view/SquareWithIcon/SquareWithIcon.vue?vue&type=template&id=2cbaf102&lang.js","../../src/components/va-tree-view/SquareWithIcon/index.ts","../../src/components/va-tree-view/VaTreeCategory/VaTreeCategory.vue","../../src/components/va-tree-view/VaTreeCategory/VaTreeCategory.vue?vue&type=template&id=5e011da2&lang.js","../../src/components/va-tree-view/VaTreeCategory/index.ts","../../src/components/va-tree-view/index.ts"],"sourcesContent":["<template>\n  <div class=\"va-tree-root\">\n    <slot />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { provide, ref } from 'vue'\nimport { Options, setup, mixins } from 'vue-class-component'\n\nimport ColorMixin from '../../services/color-config/ColorMixin'\nimport VaTreeCategory from './VaTreeCategory/VaTreeCategory.vue'\n\n@Options({\n  name: 'VaTreeRoot',\n})\n\nexport default class VaTreeRoot extends mixins(ColorMixin) {\n  setupContext = setup(() => {\n    const categories = ref<VaTreeCategory[]>([])\n\n    const onChildMounted = (category: VaTreeCategory) => {\n      categories.value.push(category)\n    }\n\n    const onChildUnmounted = (removableCategory: VaTreeCategory) => {\n      categories.value = categories.value.filter((category: VaTreeCategory) => category !== removableCategory)\n    }\n\n    const treeRoot = {\n      color: this.$props.color,\n      onChildMounted,\n      onChildUnmounted,\n    }\n\n    provide('treeRoot', treeRoot)\n\n    return {\n      categories,\n    }\n  })\n\n  collapse () {\n    this.$nextTick(() => {\n      this.setupContext.categories.forEach((child: VaTreeCategory) => {\n        child.collapse()\n      })\n    })\n  }\n\n  expand () {\n    this.$nextTick(() => {\n      this.setupContext.categories.forEach((child: VaTreeCategory) => {\n        child.expand()\n      })\n    })\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import 'variables';\n\n.va-tree-root {\n  padding: var(--va-tree-root-padding);\n  font-family: var(--va-font-family);\n}\n</style>\n","<template>\n  <div class=\"va-tree-root\">\n    <slot />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { provide, ref } from 'vue'\nimport { Options, setup, mixins } from 'vue-class-component'\n\nimport ColorMixin from '../../services/color-config/ColorMixin'\nimport VaTreeCategory from './VaTreeCategory/VaTreeCategory.vue'\n\n@Options({\n  name: 'VaTreeRoot',\n})\n\nexport default class VaTreeRoot extends mixins(ColorMixin) {\n  setupContext = setup(() => {\n    const categories = ref<VaTreeCategory[]>([])\n\n    const onChildMounted = (category: VaTreeCategory) => {\n      categories.value.push(category)\n    }\n\n    const onChildUnmounted = (removableCategory: VaTreeCategory) => {\n      categories.value = categories.value.filter((category: VaTreeCategory) => category !== removableCategory)\n    }\n\n    const treeRoot = {\n      color: this.$props.color,\n      onChildMounted,\n      onChildUnmounted,\n    }\n\n    provide('treeRoot', treeRoot)\n\n    return {\n      categories,\n    }\n  })\n\n  collapse () {\n    this.$nextTick(() => {\n      this.setupContext.categories.forEach((child: VaTreeCategory) => {\n        child.collapse()\n      })\n    })\n  }\n\n  expand () {\n    this.$nextTick(() => {\n      this.setupContext.categories.forEach((child: VaTreeCategory) => {\n        child.expand()\n      })\n    })\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import 'variables';\n\n.va-tree-root {\n  padding: var(--va-tree-root-padding);\n  font-family: var(--va-font-family);\n}\n</style>\n","<template>\n  <div\n    class=\"va-tree-node\"\n    :class=\"{ 'va-tree-node--highlighted': $props.highlighted }\"\n  >\n    <div\n      class=\"va-tree-node__checkbox\"\n      v-if=\"$slots.checkbox\"\n    >\n      <slot name=\"checkbox\" />\n    </div>\n    <div\n      class=\"va-tree-node__icon\"\n      v-if=\"$props.icon\"\n    >\n      <va-icon\n        :name=\"$props.icon\"\n        :color=\"theme.getColor('info')\"\n        :size=\"24\"\n      />\n    </div>\n    <div class=\"va-tree-node__label\">\n      <slot />\n    </div>\n    <div\n      class=\"va-tree-node__icon-right\"\n      v-if=\"$props.iconRight\"\n      :size=\"24\"\n    >\n      <va-icon\n        :name=\"$props.iconRight\"\n        :color=\"theme.getColor('info')\"\n      />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { inject } from 'vue'\nimport { mixins, Options, prop, setup, Vue } from 'vue-class-component'\n\nimport ColorMixin from '../../../services/color-config/ColorMixin'\nimport VaIcon from '../../va-icon'\n\nclass TreeNodeProps {\n  highlighted = prop<boolean>(Boolean)\n  icon = prop<string>({ type: String, default: '' })\n  iconRight = prop<string>({ type: String, default: '' })\n  color = prop<string>({ type: String, default: 'primary' })\n}\n\nconst TreeNodePropsMixin = Vue.with(TreeNodeProps)\n\n@Options({\n  name: 'VaTreeNode',\n  components: { VaIcon },\n})\nexport default class VaTreeNode extends mixins(\n  ColorMixin,\n  TreeNodePropsMixin,\n) {\n  setupContext = setup(() => {\n    const treeCategory = inject('treeCategory', {\n      onChildMounted: (value: any) => undefined,\n      onChildUnmounted: (value: any) => undefined,\n    })\n\n    return {\n      treeCategory,\n    }\n  })\n\n  mounted () {\n    if (this.setupContext.treeCategory) {\n      this.setupContext.treeCategory.onChildMounted(this)\n    }\n  }\n\n  beforeUnmount () {\n    if (this.setupContext.treeCategory) {\n      this.setupContext.treeCategory.onChildUnmounted(this)\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import \"../../../styles/resources\";\n@import 'variables.scss';\n\n.va-tree-node {\n  display: var(--va-tree-node-display);\n  align-items: var(--va-tree-node-align-items);\n  font-family: var(--va-font-family);\n\n  .form-group {\n    margin-bottom: 0;\n  }\n\n  &__icon {\n    margin-right: var(--va-tree-node-icon-margin-right);\n  }\n\n  &__icon-right {\n    margin-left: var(--va-tree-node-icon-margin-right);\n  }\n\n  &__label {\n    flex-grow: var(--va-tree-node-label-flex-grow);\n    word-wrap: var(--va-tree-node-label-word-wrap);\n    overflow: var(--va-tree-node-label-overflow);\n    line-height: var(--va-tree-node-label-line-height);\n  }\n\n  &--highlighted #{&}__label {\n    background-color: var(--va-tree-node-label-highlighted-bg);\n  }\n}\n</style>\n","<template>\n  <div\n    class=\"va-tree-node\"\n    :class=\"{ 'va-tree-node--highlighted': $props.highlighted }\"\n  >\n    <div\n      class=\"va-tree-node__checkbox\"\n      v-if=\"$slots.checkbox\"\n    >\n      <slot name=\"checkbox\" />\n    </div>\n    <div\n      class=\"va-tree-node__icon\"\n      v-if=\"$props.icon\"\n    >\n      <va-icon\n        :name=\"$props.icon\"\n        :color=\"theme.getColor('info')\"\n        :size=\"24\"\n      />\n    </div>\n    <div class=\"va-tree-node__label\">\n      <slot />\n    </div>\n    <div\n      class=\"va-tree-node__icon-right\"\n      v-if=\"$props.iconRight\"\n      :size=\"24\"\n    >\n      <va-icon\n        :name=\"$props.iconRight\"\n        :color=\"theme.getColor('info')\"\n      />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { inject } from 'vue'\nimport { mixins, Options, prop, setup, Vue } from 'vue-class-component'\n\nimport ColorMixin from '../../../services/color-config/ColorMixin'\nimport VaIcon from '../../va-icon'\n\nclass TreeNodeProps {\n  highlighted = prop<boolean>(Boolean)\n  icon = prop<string>({ type: String, default: '' })\n  iconRight = prop<string>({ type: String, default: '' })\n  color = prop<string>({ type: String, default: 'primary' })\n}\n\nconst TreeNodePropsMixin = Vue.with(TreeNodeProps)\n\n@Options({\n  name: 'VaTreeNode',\n  components: { VaIcon },\n})\nexport default class VaTreeNode extends mixins(\n  ColorMixin,\n  TreeNodePropsMixin,\n) {\n  setupContext = setup(() => {\n    const treeCategory = inject('treeCategory', {\n      onChildMounted: (value: any) => undefined,\n      onChildUnmounted: (value: any) => undefined,\n    })\n\n    return {\n      treeCategory,\n    }\n  })\n\n  mounted () {\n    if (this.setupContext.treeCategory) {\n      this.setupContext.treeCategory.onChildMounted(this)\n    }\n  }\n\n  beforeUnmount () {\n    if (this.setupContext.treeCategory) {\n      this.setupContext.treeCategory.onChildUnmounted(this)\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import \"../../../styles/resources\";\n@import 'variables.scss';\n\n.va-tree-node {\n  display: var(--va-tree-node-display);\n  align-items: var(--va-tree-node-align-items);\n  font-family: var(--va-font-family);\n\n  .form-group {\n    margin-bottom: 0;\n  }\n\n  &__icon {\n    margin-right: var(--va-tree-node-icon-margin-right);\n  }\n\n  &__icon-right {\n    margin-left: var(--va-tree-node-icon-margin-right);\n  }\n\n  &__label {\n    flex-grow: var(--va-tree-node-label-flex-grow);\n    word-wrap: var(--va-tree-node-label-word-wrap);\n    overflow: var(--va-tree-node-label-overflow);\n    line-height: var(--va-tree-node-label-line-height);\n  }\n\n  &--highlighted #{&}__label {\n    background-color: var(--va-tree-node-label-highlighted-bg);\n  }\n}\n</style>\n","import withConfigTransport from '../../../services/config-transport/withConfigTransport'\nimport VaTreeNode from './VaTreeNode.vue'\n\nexport default withConfigTransport(VaTreeNode as any)\n","<template>\n  <div\n    class=\"square-with-icon\"\n    :style=\"{ backgroundColor: colorComputed }\"\n  >\n    <va-icon :name=\"$props.icon\" />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue, prop, mixins } from 'vue-class-component'\n\nimport ColorMixin from '../../../services/color-config/ColorMixin'\nimport VaIcon from '../../va-icon'\n\nclass SquareWithIconProps {\n  icon = prop<string>({ default: '', type: String, required: true })\n  color = prop<string>({ type: String, default: 'primary' })\n}\n\nconst SquareWithIconPropsMixin = Vue.with(SquareWithIconProps)\n\n@Options({\n  name: 'SquareWithIcon',\n  components: { VaIcon },\n})\nexport default class SquareWithIcon extends mixins(\n  ColorMixin,\n  SquareWithIconPropsMixin,\n) {\n\n}\n</script>\n\n<style lang=\"scss\">\n@import \"../../../styles/resources\";\n@import 'variables';\n\n.square-with-icon {\n  display: var(--square-with-icon-display);\n  justify-content: var(--square-with-icon-justify-content);\n  align-items: var(--square-with-icon-align-items);\n  color: var(--square-with-icon-color);\n  background-color: var(--square-with-icon-background-color);\n  border-radius: var(--square-with-icon-border-radius);\n  width: var(--square-with-icon-width);\n  height: var(--square-with-icon-height);\n}\n</style>\n","<template>\n  <div\n    class=\"square-with-icon\"\n    :style=\"{ backgroundColor: colorComputed }\"\n  >\n    <va-icon :name=\"$props.icon\" />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue, prop, mixins } from 'vue-class-component'\n\nimport ColorMixin from '../../../services/color-config/ColorMixin'\nimport VaIcon from '../../va-icon'\n\nclass SquareWithIconProps {\n  icon = prop<string>({ default: '', type: String, required: true })\n  color = prop<string>({ type: String, default: 'primary' })\n}\n\nconst SquareWithIconPropsMixin = Vue.with(SquareWithIconProps)\n\n@Options({\n  name: 'SquareWithIcon',\n  components: { VaIcon },\n})\nexport default class SquareWithIcon extends mixins(\n  ColorMixin,\n  SquareWithIconPropsMixin,\n) {\n\n}\n</script>\n\n<style lang=\"scss\">\n@import \"../../../styles/resources\";\n@import 'variables';\n\n.square-with-icon {\n  display: var(--square-with-icon-display);\n  justify-content: var(--square-with-icon-justify-content);\n  align-items: var(--square-with-icon-align-items);\n  color: var(--square-with-icon-color);\n  background-color: var(--square-with-icon-background-color);\n  border-radius: var(--square-with-icon-border-radius);\n  width: var(--square-with-icon-width);\n  height: var(--square-with-icon-height);\n}\n</style>\n","import withConfigTransport from '../../../services/config-transport/withConfigTransport'\nimport SquareWithIcon from './SquareWithIcon.vue'\n\nexport default withConfigTransport(SquareWithIcon as any)\n","<template>\n  <div class=\"va-tree-category\">\n    <div\n      class=\"va-tree-category__header\"\n      @click=\"toggle\"\n    >\n      <div class=\"va-tree-category__header-switcher\">\n        <square-with-icon\n          :icon=\"isOpenCached ? 'remove' : 'add'\"\n          :color=\"setupContext.treeRoot.color || colorComputed\"\n        />\n      </div>\n      <div\n        class=\"va-tree-category__header-checkbox\"\n        v-if=\"$slots.checkbox\"\n      >\n        <slot name=\"checkbox\" />\n      </div>\n      <div\n        class=\"va-tree-category__header-icon\"\n        v-if=\"$props.icon\"\n      >\n        <va-icon\n          :name=\"$props.icon\"\n          :color=\"theme.getColor('info')\"\n        />\n      </div>\n      <div class=\"va-tree-category__header-label\">\n        {{ $props.label }}\n      </div>\n    </div>\n\n    <div\n      class=\"va-tree-category__list-container\"\n      v-if=\"isOpenCached\"\n    >\n      <div class=\"va-tree-category__list-internal-container\">\n        <slot />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { provide, inject, watch, ComponentPublicInstance, ref } from 'vue'\nimport { Options, Vue, mixins, prop, setup } from 'vue-class-component'\n\nimport ColorMixin from '../../../services/color-config/ColorMixin'\nimport SquareWithIcon from '../SquareWithIcon'\nimport VaIcon from '../../va-icon'\nimport VaTreeNode from '../VaTreeNode/VaTreeNode.vue'\n\nclass TreeCategoryProps {\n  label = prop<string | number>({ default: '', type: [String, Number] })\n  isOpen = prop<boolean>(Boolean)\n  icon = prop<string>({ default: '', type: String })\n  color = prop<string>({ type: String, default: 'primary' })\n}\n\nconst TreeCategoryPropsMixin = Vue.with(TreeCategoryProps)\n\n@Options({\n  name: 'VaTreeCategory',\n  components: { VaIcon, SquareWithIcon },\n})\nexport default class VaTreeCategory extends mixins(\n  ColorMixin,\n  TreeCategoryPropsMixin,\n) {\n  isOpenCached: boolean | undefined = false\n\n  setupContext = setup(() => {\n    const nodes = ref<(VaTreeCategory | VaTreeNode)[]>([])\n\n    const onChildMounted = (node: VaTreeCategory | VaTreeNode) => {\n      nodes.value.push(node)\n    }\n\n    const onChildUnmounted = (removableNode: VaTreeCategory | VaTreeNode) => {\n      nodes.value = nodes.value.filter((node: VaTreeCategory | VaTreeNode) => node !== removableNode)\n    }\n\n    const treeCategory = {\n      onChildMounted,\n      onChildUnmounted,\n    }\n\n    provide('treeCategory', treeCategory)\n\n    const treeRoot = inject('treeRoot', {\n      onChildMounted: (value: any) => undefined,\n      onChildUnmounted: (value: any) => undefined,\n    })\n\n    return {\n      treeCategory,\n      treeRoot,\n      nodes,\n    }\n  })\n\n  created () {\n    watch(\n      () => this.$props.isOpen,\n      (isOpen) => {\n        this.isOpenCached = isOpen\n      },\n      { immediate: true })\n  }\n\n  collapse () {\n    this.isOpenCached = false\n    this.$nextTick(() => {\n      this.setupContext.nodes.forEach((child: ComponentPublicInstance) => {\n        if (child.$options.name === 'va-tree-category') {\n          (child as VaTreeCategory).collapse()\n        }\n      })\n    })\n  }\n\n  expand () {\n    this.isOpenCached = true\n    this.$nextTick(() => {\n      this.setupContext.nodes.forEach((child: VaTreeCategory | VaTreeNode) => {\n        if (child instanceof VaTreeCategory) {\n          child.expand()\n        }\n      })\n    })\n  }\n\n  toggle (e: MouseEvent) {\n    if (!(e.target as HTMLElement).classList.contains('va-checkbox__input')) {\n      this.isOpenCached = !this.isOpenCached\n    }\n  }\n\n  mounted () {\n    if (this.setupContext.treeRoot) {\n      this.setupContext.treeRoot.onChildMounted(this)\n    }\n  }\n\n  beforeUnmount () {\n    if (this.setupContext.treeRoot) {\n      this.setupContext.treeRoot.onChildUnmounted(this)\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import \"../../../styles/resources\";\n@import 'variables';\n\n.va-tree-category {\n  font-family: var(--va-font-family);\n\n  &__header {\n    cursor: var(--va-tree-category-header-cursor);\n    display: var(--va-tree-category-header-display);\n    align-items: var(--va-tree-category-header-align-items);\n  }\n\n  &__header-switcher {\n    margin-right: 0.5rem;\n  }\n\n  &__header-checkbox {\n    margin-right: var(--va-tree-category-header-checkbox-margin-right);\n    height: var(--va-tree-category-header-checkbox-height);\n    width: var(--va-tree-category-header-checkbox-width);\n    display: var(--va-tree-category-header-checkbox-display);\n    align-items: var(--va-tree-category-header-checkbox-align-items);\n    justify-content: var(--va-tree-category-header-checkbox-justify-content);\n\n    .va-checkbox__square {\n      width: 1.5rem;\n      height: 1.5rem;\n      flex: 0 0 1.5rem;\n    }\n  }\n\n  &__header-icon {\n    color: var(--va-tree-category-header-icon-color);\n    margin-right: var(--va-tree-category-header-icon-margin-right);\n    font-size: var(--va-tree-category-header-icon-font-size);\n    line-height: var(--va-tree-category-header-icon-line-height);\n  }\n\n  &__header-label {\n    word-wrap: var(--va-tree-category-header-label-word-wrap);\n    overflow: var(--va-tree-category-header-label-overflow);\n    line-height: var(--va-tree-category-header-label-line-height);\n  }\n\n  &__list-container {\n    margin-top: var(--va-tree-category-list-container-margin-top);\n    padding-left: var(--va-tree-category-list-container-padding-left);\n  }\n\n  &__list-internal-container {\n    background-image: linear-gradient(#adb3b9 33%, rgba(255, 255, 255, 0) 0%);\n    background-position: left;\n    background-size: 1px 3px;\n    background-repeat: repeat-y;\n    padding-left: 1.1875rem;\n  }\n\n  & + .va-tree-category,\n  .va-tree-node + .va-tree-node,\n  .va-tree-category + .va-tree-node,\n  .va-tree-node + .va-tree-category {\n    margin-top: 0.75rem;\n  }\n}\n</style>\n","<template>\n  <div class=\"va-tree-category\">\n    <div\n      class=\"va-tree-category__header\"\n      @click=\"toggle\"\n    >\n      <div class=\"va-tree-category__header-switcher\">\n        <square-with-icon\n          :icon=\"isOpenCached ? 'remove' : 'add'\"\n          :color=\"setupContext.treeRoot.color || colorComputed\"\n        />\n      </div>\n      <div\n        class=\"va-tree-category__header-checkbox\"\n        v-if=\"$slots.checkbox\"\n      >\n        <slot name=\"checkbox\" />\n      </div>\n      <div\n        class=\"va-tree-category__header-icon\"\n        v-if=\"$props.icon\"\n      >\n        <va-icon\n          :name=\"$props.icon\"\n          :color=\"theme.getColor('info')\"\n        />\n      </div>\n      <div class=\"va-tree-category__header-label\">\n        {{ $props.label }}\n      </div>\n    </div>\n\n    <div\n      class=\"va-tree-category__list-container\"\n      v-if=\"isOpenCached\"\n    >\n      <div class=\"va-tree-category__list-internal-container\">\n        <slot />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { provide, inject, watch, ComponentPublicInstance, ref } from 'vue'\nimport { Options, Vue, mixins, prop, setup } from 'vue-class-component'\n\nimport ColorMixin from '../../../services/color-config/ColorMixin'\nimport SquareWithIcon from '../SquareWithIcon'\nimport VaIcon from '../../va-icon'\nimport VaTreeNode from '../VaTreeNode/VaTreeNode.vue'\n\nclass TreeCategoryProps {\n  label = prop<string | number>({ default: '', type: [String, Number] })\n  isOpen = prop<boolean>(Boolean)\n  icon = prop<string>({ default: '', type: String })\n  color = prop<string>({ type: String, default: 'primary' })\n}\n\nconst TreeCategoryPropsMixin = Vue.with(TreeCategoryProps)\n\n@Options({\n  name: 'VaTreeCategory',\n  components: { VaIcon, SquareWithIcon },\n})\nexport default class VaTreeCategory extends mixins(\n  ColorMixin,\n  TreeCategoryPropsMixin,\n) {\n  isOpenCached: boolean | undefined = false\n\n  setupContext = setup(() => {\n    const nodes = ref<(VaTreeCategory | VaTreeNode)[]>([])\n\n    const onChildMounted = (node: VaTreeCategory | VaTreeNode) => {\n      nodes.value.push(node)\n    }\n\n    const onChildUnmounted = (removableNode: VaTreeCategory | VaTreeNode) => {\n      nodes.value = nodes.value.filter((node: VaTreeCategory | VaTreeNode) => node !== removableNode)\n    }\n\n    const treeCategory = {\n      onChildMounted,\n      onChildUnmounted,\n    }\n\n    provide('treeCategory', treeCategory)\n\n    const treeRoot = inject('treeRoot', {\n      onChildMounted: (value: any) => undefined,\n      onChildUnmounted: (value: any) => undefined,\n    })\n\n    return {\n      treeCategory,\n      treeRoot,\n      nodes,\n    }\n  })\n\n  created () {\n    watch(\n      () => this.$props.isOpen,\n      (isOpen) => {\n        this.isOpenCached = isOpen\n      },\n      { immediate: true })\n  }\n\n  collapse () {\n    this.isOpenCached = false\n    this.$nextTick(() => {\n      this.setupContext.nodes.forEach((child: ComponentPublicInstance) => {\n        if (child.$options.name === 'va-tree-category') {\n          (child as VaTreeCategory).collapse()\n        }\n      })\n    })\n  }\n\n  expand () {\n    this.isOpenCached = true\n    this.$nextTick(() => {\n      this.setupContext.nodes.forEach((child: VaTreeCategory | VaTreeNode) => {\n        if (child instanceof VaTreeCategory) {\n          child.expand()\n        }\n      })\n    })\n  }\n\n  toggle (e: MouseEvent) {\n    if (!(e.target as HTMLElement).classList.contains('va-checkbox__input')) {\n      this.isOpenCached = !this.isOpenCached\n    }\n  }\n\n  mounted () {\n    if (this.setupContext.treeRoot) {\n      this.setupContext.treeRoot.onChildMounted(this)\n    }\n  }\n\n  beforeUnmount () {\n    if (this.setupContext.treeRoot) {\n      this.setupContext.treeRoot.onChildUnmounted(this)\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import \"../../../styles/resources\";\n@import 'variables';\n\n.va-tree-category {\n  font-family: var(--va-font-family);\n\n  &__header {\n    cursor: var(--va-tree-category-header-cursor);\n    display: var(--va-tree-category-header-display);\n    align-items: var(--va-tree-category-header-align-items);\n  }\n\n  &__header-switcher {\n    margin-right: 0.5rem;\n  }\n\n  &__header-checkbox {\n    margin-right: var(--va-tree-category-header-checkbox-margin-right);\n    height: var(--va-tree-category-header-checkbox-height);\n    width: var(--va-tree-category-header-checkbox-width);\n    display: var(--va-tree-category-header-checkbox-display);\n    align-items: var(--va-tree-category-header-checkbox-align-items);\n    justify-content: var(--va-tree-category-header-checkbox-justify-content);\n\n    .va-checkbox__square {\n      width: 1.5rem;\n      height: 1.5rem;\n      flex: 0 0 1.5rem;\n    }\n  }\n\n  &__header-icon {\n    color: var(--va-tree-category-header-icon-color);\n    margin-right: var(--va-tree-category-header-icon-margin-right);\n    font-size: var(--va-tree-category-header-icon-font-size);\n    line-height: var(--va-tree-category-header-icon-line-height);\n  }\n\n  &__header-label {\n    word-wrap: var(--va-tree-category-header-label-word-wrap);\n    overflow: var(--va-tree-category-header-label-overflow);\n    line-height: var(--va-tree-category-header-label-line-height);\n  }\n\n  &__list-container {\n    margin-top: var(--va-tree-category-list-container-margin-top);\n    padding-left: var(--va-tree-category-list-container-padding-left);\n  }\n\n  &__list-internal-container {\n    background-image: linear-gradient(#adb3b9 33%, rgba(255, 255, 255, 0) 0%);\n    background-position: left;\n    background-size: 1px 3px;\n    background-repeat: repeat-y;\n    padding-left: 1.1875rem;\n  }\n\n  & + .va-tree-category,\n  .va-tree-node + .va-tree-node,\n  .va-tree-category + .va-tree-node,\n  .va-tree-node + .va-tree-category {\n    margin-top: 0.75rem;\n  }\n}\n</style>\n","import withConfigTransport from '../../../services/config-transport/withConfigTransport'\nimport VaTreeCategory from './VaTreeCategory.vue'\n\nexport default withConfigTransport(VaTreeCategory as any)\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\nimport VaTreeRoot from './VaTreeRoot.vue'\n\nexport { default as VaTreeNode } from './VaTreeNode'\nexport { default as VaTreeCategory } from './VaTreeCategory'\n\nexport default withConfigTransport(VaTreeRoot as any)\n"],"names":["VaTreeRoot","mixins","ColorMixin","constructor","this","setup","categories","ref","treeRoot","color","$props","onChildMounted","category","value","push","onChildUnmounted","removableCategory","filter","provide","collapse","$nextTick","setupContext","forEach","child","expand","Options","name","class","_createElementBlock","_hoisted_1","_renderSlot","TreeNodePropsMixin","Vue","with","TreeNodeProps","prop","Boolean","type","String","default","VaTreeNode","treeCategory","inject","mounted","beforeUnmount","components","VaIcon","size","_ctx","highlighted","_hoisted_2","_createVNode","icon","getColor","_createElementVNode","_hoisted_3","_hoisted_4","iconRight","withConfigTransport","SquareWithIconPropsMixin","SquareWithIconProps","required","SquareWithIcon","style","TreeCategoryPropsMixin","TreeCategoryProps","Number","VaTreeCategory","nodes","node","removableNode","created","watch","isOpen","isOpenCached","immediate","$options","VaTreeCategory_1","toggle","e","target","classList","contains","onClick","_hoisted_5","label","_hoisted_6","_hoisted_7"],"mappings":"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"}