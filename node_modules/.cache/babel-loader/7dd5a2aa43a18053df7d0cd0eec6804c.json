{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport { w as o } from \"./withConfigTransport.js\";\nimport { defineComponent as t, computed as e, resolveComponent as n, openBlock as l, createElementBlock as a, normalizeClass as s, createBlock as r, withCtx as d, createVNode as p, mergeProps as i, toHandlers as u, renderSlot as m, createTextVNode as f, toDisplayString as c, createCommentVNode as b } from \"vue\";\nimport { p as v } from \"./pick.js\";\nimport { u as y, a as w } from \"./useStateful.js\";\nimport { u as g } from \"./useEmitProxy.js\";\nimport B, { VaDropdownContent as $ } from \"./index25.js\";\nimport j from \"./index8.js\";\nimport V from \"./index10.js\";\nimport { s as _ } from \"./style-inject.es.js\";\nimport \"./VaConfig.js\";\nimport \"./VaIcon.js\";\nimport \"./flatten.js\";\nimport \"./color-config.js\";\nimport \"colortranslator\";\nimport \"./useSize.js\";\nimport \"./VaDropdownContent.js\";\nimport \"tslib\";\nimport \"./vue-class-component.esm-bundler.js\";\nimport \"asva-executors\";\nimport \"@popperjs/core\";\nimport \"./StatefulMixin.js\";\nimport \"./useColor.js\";\nimport \"./useRouterLink.js\";\nimport \"./useLoading.js\";\nimport \"./index28.js\";\nimport \"./index39.js\";\nimport \"./clamp.js\";\nimport \"./toNumber.js\";\nconst {\n  createEmits: h,\n  createVOnListeners: k\n} = g([\"click\"]),\n      {\n  createEmits: C,\n  createVOnListeners: S\n} = g([{\n  listen: \"click\",\n  emit: \"main-button-click\"\n}]);\nvar I = t({\n  name: \"VaButtonDropdown\",\n  components: {\n    VaButtonGroup: V,\n    VaButton: j,\n    VaDropdown: B,\n    VaDropdownContent: $\n  },\n  emits: [\"update:modelValue\", ...h(), ...C()],\n  props: { ...y,\n    modelValue: {\n      type: Boolean,\n      default: !1\n    },\n    stateful: {\n      type: Boolean,\n      default: !0\n    },\n    color: {\n      type: String,\n      default: \"primary\"\n    },\n    textColor: {\n      type: String,\n      default: void 0\n    },\n    size: {\n      type: String,\n      default: \"medium\",\n      validator: o => [\"medium\", \"small\", \"large\"].includes(o)\n    },\n    outline: {\n      type: Boolean,\n      default: !1\n    },\n    flat: {\n      type: Boolean,\n      default: !1\n    },\n    rounded: {\n      type: Boolean,\n      default: !0\n    },\n    gradient: {\n      type: Boolean,\n      default: void 0\n    },\n    icon: {\n      type: String,\n      default: \"expand_more\"\n    },\n    openedIcon: {\n      type: String,\n      default: \"expand_less\"\n    },\n    hideIcon: {\n      type: Boolean,\n      default: !1\n    },\n    leftIcon: {\n      type: Boolean,\n      default: !1\n    },\n    disableButton: {\n      type: Boolean,\n      default: !1\n    },\n    disableDropdown: {\n      type: Boolean,\n      default: !1\n    },\n    disabled: {\n      type: Boolean,\n      default: !1\n    },\n    position: {\n      type: String,\n      default: \"bottom\"\n    },\n    offset: {\n      type: [Number, Array],\n      default: () => [0, 1]\n    },\n    keepAnchorWidth: {\n      type: Boolean,\n      default: !1\n    },\n    closeOnContentClick: {\n      type: Boolean,\n      default: !0\n    },\n    split: {\n      type: Boolean\n    },\n    splitTo: {\n      type: String,\n      default: \"\"\n    },\n    splitHref: {\n      type: String,\n      default: \"\"\n    },\n    loading: {\n      type: Boolean,\n      default: !1\n    },\n    label: {\n      type: String\n    }\n  },\n\n  setup(o, {\n    emit: t,\n    slots: n\n  }) {\n    const {\n      valueComputed: l\n    } = w(o, t),\n          a = e(() => l.value ? o.openedIcon : o.icon),\n          s = e(() => ({\n      \"va-button-dropdown\": !0,\n      \"va-button-dropdown--split\": o.split,\n      \"va-button-dropdown--normal\": \"normal\" === o.size,\n      \"va-button-dropdown--large\": \"large\" === o.size,\n      \"va-button-dropdown--small\": \"small\" === o.size\n    })),\n          r = e(() => {\n      const t = !o.label && !n.label || o.leftIcon ? \"icon\" : \"icon-right\";\n      return o.hideIcon ? {} : {\n        [t]: a.value\n      };\n    }),\n          d = e(() => v(o, [\"outline\", \"gradient\", \"rounded\", \"flat\", \"size\", \"color\"])),\n          p = e(() => ({\n      to: o.splitTo,\n      href: o.splitHref,\n      loading: o.loading\n    }));\n    return {\n      valueComputed: l,\n      computedIcon: a,\n      computedClass: s,\n      listeners: k(t),\n      mainButtonListeners: S(t),\n      computedButtonIcons: r,\n      computedViewStyles: d,\n      computedMainButtonProps: p\n    };\n  }\n\n});\n_(\":root{--va-button-dropdown-button-margin:0}.va-button-dropdown{display:inline-block;font-family:var(--va-font-family)}.va-button-dropdown--split .va-dropdown .va-dropdown__anchor,.va-button-dropdown .va-button{margin:var(--va-button-dropdown-button-margin)}.va-button-dropdown--split .va-button-group__left-icon .va-dropdown .va-button{border-bottom-right-radius:0;border-top-right-radius:0}.va-button-dropdown--split .va-button-group__left-icon>.va-button{border-bottom-left-radius:0;border-left:none;border-top-left-radius:0}.va-button-dropdown--split :not(.va-button-group__left-icon) .va-dropdown .va-button{border-bottom-left-radius:0;border-top-left-radius:0}\"), I.render = function render(o, t, e, v, y, w) {\n  const g = n(\"va-button\"),\n        B = n(\"va-dropdown-content\"),\n        $ = n(\"va-dropdown\"),\n        j = n(\"va-button-group\");\n  return l(), a(\"div\", {\n    class: s(o.computedClass)\n  }, [o.$props.split ? (l(), r(j, i({\n    key: 1,\n    class: {\n      \"va-button-group__left-icon\": o.$props.leftIcon\n    }\n  }, { ...o.computedViewStyles\n  }), {\n    default: d(() => [o.$props.leftIcon ? b(\"v-if\", !0) : (l(), r(g, i({\n      key: 0,\n      disabled: o.$props.disabled || o.$props.disableButton\n    }, { ...o.computedMainButtonProps\n    }, u(o.mainButtonListeners)), {\n      default: d(() => [m(o.$slots, \"label\", {}, () => [f(c(o.label), 1)])]),\n      _: 3\n    }, 16, [\"disabled\"])), p($, {\n      disabled: o.$props.disabled || o.$props.disableDropdown,\n      position: o.$props.position,\n      offset: o.$props.offset,\n      stateful: o.$props.stateful,\n      modelValue: o.valueComputed,\n      \"onUpdate:modelValue\": t[1] || (t[1] = t => o.valueComputed = t)\n    }, {\n      anchor: d(() => [p(g, i({\n        disabled: o.$props.disabled || o.$props.disableDropdown,\n        icon: o.computedIcon\n      }, u(o.listeners)), null, 16, [\"disabled\", \"icon\"])]),\n      default: d(() => [p(B, null, {\n        default: d(() => [m(o.$slots, \"default\")]),\n        _: 3\n      })]),\n      _: 3\n    }, 8, [\"disabled\", \"position\", \"offset\", \"stateful\", \"modelValue\"]), o.$props.leftIcon ? (l(), r(g, i({\n      key: 1,\n      disabled: o.$props.disabled || o.$props.disableButton\n    }, { ...o.computedMainButtonProps\n    }, u(o.mainButtonListeners)), {\n      default: d(() => [m(o.$slots, \"label\", {}, () => [f(c(o.label), 1)])]),\n      _: 3\n    }, 16, [\"disabled\"])) : b(\"v-if\", !0)]),\n    _: 3\n  }, 16, [\"class\"])) : (l(), r($, {\n    key: 0,\n    disabled: o.$props.disabled,\n    position: o.$props.position,\n    offset: o.$props.offset,\n    \"keep-anchor-width\": o.$props.keepAnchorWidth,\n    \"close-on-content-click\": o.$props.closeOnContentClick,\n    stateful: o.$props.stateful,\n    modelValue: o.valueComputed,\n    \"onUpdate:modelValue\": t[0] || (t[0] = t => o.valueComputed = t)\n  }, {\n    anchor: d(() => [p(g, i({\n      disabled: o.$props.disabled,\n      round: !o.$props.label && !o.$slots.label\n    }, { ...o.computedButtonIcons,\n      ...o.computedViewStyles\n    }, u(o.listeners)), {\n      default: d(() => [m(o.$slots, \"label\", {}, () => [f(c(o.label), 1)])]),\n      _: 3\n    }, 16, [\"disabled\", \"round\"])]),\n    default: d(() => [p(B, null, {\n      default: d(() => [m(o.$slots, \"default\")]),\n      _: 3\n    })]),\n    _: 3\n  }, 8, [\"disabled\", \"position\", \"offset\", \"keep-anchor-width\", \"close-on-content-click\", \"stateful\", \"modelValue\"]))], 2);\n}, I.__file = \"src/components/va-button-dropdown/VaButtonDropdown.vue\";\nvar x = o(I);\nexport { x as default };","map":{"version":3,"mappings":"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","names":["createEmits","createVOnListeners","createListeners","useEmitProxy","createMainButtonEmits","createMainButtonListeners","listen","emit","defineComponent","name","components","VaButtonGroup","VaButton","VaDropdown","VaDropdownContent","emits","props","useStatefulProps","modelValue","type","Boolean","default","stateful","color","String","textColor","undefined","size","validator","value","includes","outline","flat","rounded","gradient","icon","openedIcon","hideIcon","leftIcon","disableButton","disableDropdown","disabled","position","offset","Number","Array","keepAnchorWidth","closeOnContentClick","split","splitTo","splitHref","loading","label","setup","slots","valueComputed","useStateful","computedIcon","computed","computedClass","computedButtonIcons","propName","computedViewStyles","pick","computedMainButtonProps","to","href","listeners","mainButtonListeners","_createElementBlock","class","_ctx","_createBlock","_mergeProps","_toHandlers","_createVNode","anchor","_renderSlot","l","round","withConfigTransport","VaButtonDropdown"],"sources":["../../src/components/va-button-dropdown/VaButtonDropdown.vue","../../src/components/va-button-dropdown/VaButtonDropdown.vue?vue&type=template&id=1172abf3&lang.js","../../src/components/va-button-dropdown/index.ts"],"sourcesContent":["<template>\n  <div :class=\"computedClass\">\n    <va-dropdown\n      v-if=\"!$props.split\"\n      :disabled=\"$props.disabled\"\n      :position=\"$props.position\"\n      :offset=\"$props.offset\"\n      :keep-anchor-width=\"$props.keepAnchorWidth\"\n      :close-on-content-click=\"$props.closeOnContentClick\"\n      :stateful=\"$props.stateful\"\n      v-model=\"valueComputed\"\n    >\n      <template #anchor>\n        <va-button\n          :disabled=\"$props.disabled\"\n          :round=\"!$props.label && !$slots.label\"\n          v-bind=\"{ ...computedButtonIcons, ...computedViewStyles }\"\n          v-on=\"listeners\"\n        >\n          <slot name=\"label\">\n            {{ label }}\n          </slot>\n        </va-button>\n      </template>\n\n      <va-dropdown-content>\n        <slot />\n      </va-dropdown-content>\n    </va-dropdown>\n\n    <va-button-group\n      v-else\n      :class=\"{ 'va-button-group__left-icon': $props.leftIcon }\"\n      v-bind=\"{ ...computedViewStyles }\"\n    >\n      <va-button\n        v-if=\"!$props.leftIcon\"\n        :disabled=\"$props.disabled || $props.disableButton\"\n        v-bind=\"{ ...computedMainButtonProps }\"\n        v-on=\"mainButtonListeners\"\n      >\n        <slot name=\"label\">\n          {{ label }}\n        </slot>\n      </va-button>\n\n      <va-dropdown\n        :disabled=\"$props.disabled || $props.disableDropdown\"\n        :position=\"$props.position\"\n        :offset=\"$props.offset\"\n        :stateful=\"$props.stateful\"\n        v-model=\"valueComputed\"\n      >\n        <template #anchor>\n          <va-button\n            :disabled=\"$props.disabled || $props.disableDropdown\"\n            :icon=\"computedIcon\"\n            v-on=\"listeners\"\n          />\n        </template>\n        <va-dropdown-content>\n          <slot />\n        </va-dropdown-content>\n      </va-dropdown>\n\n      <va-button\n        v-if=\"$props.leftIcon\"\n        :disabled=\"$props.disabled || $props.disableButton\"\n        v-bind=\"{ ...computedMainButtonProps }\"\n        v-on=\"mainButtonListeners\"\n      >\n        <slot name=\"label\">\n          {{ label }}\n        </slot>\n      </va-button>\n    </va-button-group>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, PropType } from 'vue'\nimport pick from 'lodash/pick'\n\nimport { useStatefulProps, useStateful } from '../../composables/useStateful'\nimport { useEmitProxy } from '../../composables/useEmitProxy'\n\nimport VaDropdown, { VaDropdownContent } from '../va-dropdown'\nimport VaButton from '../va-button'\nimport VaButtonGroup from '../va-button-group'\n\nconst { createEmits, createVOnListeners: createListeners } = useEmitProxy(\n  ['click'],\n)\n\nconst { createEmits: createMainButtonEmits, createVOnListeners: createMainButtonListeners } = useEmitProxy(\n  [{ listen: 'click', emit: 'main-button-click' }],\n)\n\nconst componentName = 'VaButtonDropdown'\n\nexport default defineComponent({\n  name: componentName,\n\n  components: {\n    VaButtonGroup,\n    VaButton,\n    VaDropdown,\n    VaDropdownContent,\n  },\n\n  emits: ['update:modelValue', ...createEmits(), ...createMainButtonEmits()],\n\n  props: {\n    ...useStatefulProps,\n\n    modelValue: { type: Boolean, default: false },\n    stateful: { type: Boolean, default: true },\n\n    color: { type: String, default: 'primary' },\n    textColor: { type: String, default: undefined },\n    size: {\n      type: String,\n      default: 'medium',\n      validator: (value: string) => ['medium', 'small', 'large'].includes(value),\n    },\n    outline: { type: Boolean, default: false },\n    flat: { type: Boolean, default: false },\n    rounded: { type: Boolean, default: true },\n    gradient: { type: Boolean, default: undefined },\n\n    icon: { type: String, default: 'expand_more' },\n    openedIcon: { type: String, default: 'expand_less' },\n    hideIcon: { type: Boolean, default: false },\n    leftIcon: { type: Boolean, default: false },\n\n    disableButton: { type: Boolean, default: false },\n    disableDropdown: { type: Boolean, default: false },\n    disabled: { type: Boolean, default: false },\n\n    position: { type: String, default: 'bottom' },\n    offset: { type: [Number, Array] as PropType<number | number[]>, default: () => ([0, 1]) },\n    keepAnchorWidth: { type: Boolean, default: false },\n    closeOnContentClick: { type: Boolean, default: true },\n\n    split: { type: Boolean },\n    splitTo: { type: String, default: '' },\n    splitHref: { type: String, default: '' },\n\n    loading: { type: Boolean, default: false },\n    label: { type: String },\n  },\n\n  setup (props, { emit, slots }) {\n    const { valueComputed } = useStateful(props, emit)\n\n    const computedIcon = computed<string>(() => {\n      return valueComputed.value ? props.openedIcon : props.icon\n    })\n\n    const computedClass = computed(() => ({\n      'va-button-dropdown': true,\n      'va-button-dropdown--split': props.split,\n      'va-button-dropdown--normal': props.size === 'normal',\n      'va-button-dropdown--large': props.size === 'large',\n      'va-button-dropdown--small': props.size === 'small',\n    }))\n\n    const computedButtonIcons = computed(() => {\n      const propName = (props.label || slots.label) && !props.leftIcon ? 'icon-right' : 'icon'\n      return props.hideIcon ? {} : { [propName]: computedIcon.value }\n    })\n\n    const computedViewStyles = computed(\n      () => pick(props, ['outline', 'gradient', 'rounded', 'flat', 'size', 'color']),\n    )\n\n    const computedMainButtonProps = computed(() => ({\n      to: props.splitTo,\n      href: props.splitHref,\n      loading: props.loading,\n    }))\n\n    return {\n      valueComputed,\n      computedIcon,\n      computedClass,\n      listeners: createListeners(emit),\n      mainButtonListeners: createMainButtonListeners(emit),\n      computedButtonIcons,\n      computedViewStyles,\n      computedMainButtonProps,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import 'variables';\n\n.va-button-dropdown {\n  display: inline-block;\n  font-family: var(--va-font-family);\n\n  .va-button {\n    margin: var(--va-button-dropdown-button-margin);\n  }\n\n  &--split {\n    .va-dropdown {\n      .va-dropdown__anchor {\n        margin: var(--va-button-dropdown-button-margin);\n      }\n    }\n\n    .va-button-group__left-icon {\n      .va-dropdown {\n        .va-button {\n          border-top-right-radius: 0;\n          border-bottom-right-radius: 0;\n        }\n      }\n\n      > .va-button {\n        border-top-left-radius: 0;\n        border-bottom-left-radius: 0;\n        border-left: none;\n      }\n    }\n\n    :not(.va-button-group__left-icon) {\n      .va-dropdown {\n        .va-button {\n          border-top-left-radius: 0;\n          border-bottom-left-radius: 0;\n        }\n      }\n    }\n  }\n}\n</style>\n","<template>\n  <div :class=\"computedClass\">\n    <va-dropdown\n      v-if=\"!$props.split\"\n      :disabled=\"$props.disabled\"\n      :position=\"$props.position\"\n      :offset=\"$props.offset\"\n      :keep-anchor-width=\"$props.keepAnchorWidth\"\n      :close-on-content-click=\"$props.closeOnContentClick\"\n      :stateful=\"$props.stateful\"\n      v-model=\"valueComputed\"\n    >\n      <template #anchor>\n        <va-button\n          :disabled=\"$props.disabled\"\n          :round=\"!$props.label && !$slots.label\"\n          v-bind=\"{ ...computedButtonIcons, ...computedViewStyles }\"\n          v-on=\"listeners\"\n        >\n          <slot name=\"label\">\n            {{ label }}\n          </slot>\n        </va-button>\n      </template>\n\n      <va-dropdown-content>\n        <slot />\n      </va-dropdown-content>\n    </va-dropdown>\n\n    <va-button-group\n      v-else\n      :class=\"{ 'va-button-group__left-icon': $props.leftIcon }\"\n      v-bind=\"{ ...computedViewStyles }\"\n    >\n      <va-button\n        v-if=\"!$props.leftIcon\"\n        :disabled=\"$props.disabled || $props.disableButton\"\n        v-bind=\"{ ...computedMainButtonProps }\"\n        v-on=\"mainButtonListeners\"\n      >\n        <slot name=\"label\">\n          {{ label }}\n        </slot>\n      </va-button>\n\n      <va-dropdown\n        :disabled=\"$props.disabled || $props.disableDropdown\"\n        :position=\"$props.position\"\n        :offset=\"$props.offset\"\n        :stateful=\"$props.stateful\"\n        v-model=\"valueComputed\"\n      >\n        <template #anchor>\n          <va-button\n            :disabled=\"$props.disabled || $props.disableDropdown\"\n            :icon=\"computedIcon\"\n            v-on=\"listeners\"\n          />\n        </template>\n        <va-dropdown-content>\n          <slot />\n        </va-dropdown-content>\n      </va-dropdown>\n\n      <va-button\n        v-if=\"$props.leftIcon\"\n        :disabled=\"$props.disabled || $props.disableButton\"\n        v-bind=\"{ ...computedMainButtonProps }\"\n        v-on=\"mainButtonListeners\"\n      >\n        <slot name=\"label\">\n          {{ label }}\n        </slot>\n      </va-button>\n    </va-button-group>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, PropType } from 'vue'\nimport pick from 'lodash/pick'\n\nimport { useStatefulProps, useStateful } from '../../composables/useStateful'\nimport { useEmitProxy } from '../../composables/useEmitProxy'\n\nimport VaDropdown, { VaDropdownContent } from '../va-dropdown'\nimport VaButton from '../va-button'\nimport VaButtonGroup from '../va-button-group'\n\nconst { createEmits, createVOnListeners: createListeners } = useEmitProxy(\n  ['click'],\n)\n\nconst { createEmits: createMainButtonEmits, createVOnListeners: createMainButtonListeners } = useEmitProxy(\n  [{ listen: 'click', emit: 'main-button-click' }],\n)\n\nconst componentName = 'VaButtonDropdown'\n\nexport default defineComponent({\n  name: componentName,\n\n  components: {\n    VaButtonGroup,\n    VaButton,\n    VaDropdown,\n    VaDropdownContent,\n  },\n\n  emits: ['update:modelValue', ...createEmits(), ...createMainButtonEmits()],\n\n  props: {\n    ...useStatefulProps,\n\n    modelValue: { type: Boolean, default: false },\n    stateful: { type: Boolean, default: true },\n\n    color: { type: String, default: 'primary' },\n    textColor: { type: String, default: undefined },\n    size: {\n      type: String,\n      default: 'medium',\n      validator: (value: string) => ['medium', 'small', 'large'].includes(value),\n    },\n    outline: { type: Boolean, default: false },\n    flat: { type: Boolean, default: false },\n    rounded: { type: Boolean, default: true },\n    gradient: { type: Boolean, default: undefined },\n\n    icon: { type: String, default: 'expand_more' },\n    openedIcon: { type: String, default: 'expand_less' },\n    hideIcon: { type: Boolean, default: false },\n    leftIcon: { type: Boolean, default: false },\n\n    disableButton: { type: Boolean, default: false },\n    disableDropdown: { type: Boolean, default: false },\n    disabled: { type: Boolean, default: false },\n\n    position: { type: String, default: 'bottom' },\n    offset: { type: [Number, Array] as PropType<number | number[]>, default: () => ([0, 1]) },\n    keepAnchorWidth: { type: Boolean, default: false },\n    closeOnContentClick: { type: Boolean, default: true },\n\n    split: { type: Boolean },\n    splitTo: { type: String, default: '' },\n    splitHref: { type: String, default: '' },\n\n    loading: { type: Boolean, default: false },\n    label: { type: String },\n  },\n\n  setup (props, { emit, slots }) {\n    const { valueComputed } = useStateful(props, emit)\n\n    const computedIcon = computed<string>(() => {\n      return valueComputed.value ? props.openedIcon : props.icon\n    })\n\n    const computedClass = computed(() => ({\n      'va-button-dropdown': true,\n      'va-button-dropdown--split': props.split,\n      'va-button-dropdown--normal': props.size === 'normal',\n      'va-button-dropdown--large': props.size === 'large',\n      'va-button-dropdown--small': props.size === 'small',\n    }))\n\n    const computedButtonIcons = computed(() => {\n      const propName = (props.label || slots.label) && !props.leftIcon ? 'icon-right' : 'icon'\n      return props.hideIcon ? {} : { [propName]: computedIcon.value }\n    })\n\n    const computedViewStyles = computed(\n      () => pick(props, ['outline', 'gradient', 'rounded', 'flat', 'size', 'color']),\n    )\n\n    const computedMainButtonProps = computed(() => ({\n      to: props.splitTo,\n      href: props.splitHref,\n      loading: props.loading,\n    }))\n\n    return {\n      valueComputed,\n      computedIcon,\n      computedClass,\n      listeners: createListeners(emit),\n      mainButtonListeners: createMainButtonListeners(emit),\n      computedButtonIcons,\n      computedViewStyles,\n      computedMainButtonProps,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import 'variables';\n\n.va-button-dropdown {\n  display: inline-block;\n  font-family: var(--va-font-family);\n\n  .va-button {\n    margin: var(--va-button-dropdown-button-margin);\n  }\n\n  &--split {\n    .va-dropdown {\n      .va-dropdown__anchor {\n        margin: var(--va-button-dropdown-button-margin);\n      }\n    }\n\n    .va-button-group__left-icon {\n      .va-dropdown {\n        .va-button {\n          border-top-right-radius: 0;\n          border-bottom-right-radius: 0;\n        }\n      }\n\n      > .va-button {\n        border-top-left-radius: 0;\n        border-bottom-left-radius: 0;\n        border-left: none;\n      }\n    }\n\n    :not(.va-button-group__left-icon) {\n      .va-dropdown {\n        .va-button {\n          border-top-left-radius: 0;\n          border-bottom-left-radius: 0;\n        }\n      }\n    }\n  }\n}\n</style>\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\nimport VaButtonDropdown from './VaButtonDropdown.vue'\n\nexport default withConfigTransport(VaButtonDropdown)\n"]},"metadata":{},"sourceType":"module"}