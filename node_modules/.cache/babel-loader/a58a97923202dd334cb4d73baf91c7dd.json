{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { w as t } from \"./withConfigTransport.js\";\nimport { ref as a, onMounted as o, onBeforeUnmount as e, defineComponent as r, computed as l, openBlock as n, createElementBlock as p, normalizeClass as s, normalizeStyle as i, renderSlot as u } from \"vue\";\nimport { c as v, d as c, u as d } from \"./color-config.js\";\nimport { s as f } from \"./style-inject.es.js\";\nimport \"./VaConfig.js\";\nimport \"colortranslator\";\n\nfunction setupScroll(t, r) {\n  const l = a(null);\n  let n;\n  return o(() => {\n    n = function getTargetElement(t) {\n      if (!t) throw new Error(\"Cant find target\");\n      return \"string\" == typeof t ? document.querySelector(t) : t;\n    }(t || l.value), null == n || n.addEventListener(\"scroll\", r);\n  }), e(() => {\n    null == n || n.removeEventListener(\"scroll\", r);\n  }), l;\n}\n\nvar m = r({\n  name: \"VaAppBar\",\n  props: {\n    gradient: {\n      type: Boolean,\n      default: !1\n    },\n    bottom: {\n      type: Boolean,\n      default: !1\n    },\n    target: {\n      type: [Object, String],\n      default: \"\"\n    },\n    hideOnScroll: {\n      type: Boolean,\n      default: !1\n    },\n    shadowOnScroll: {\n      type: Boolean,\n      default: !1\n    },\n    shadowColor: {\n      type: String,\n      default: \"\"\n    },\n    color: {\n      type: String,\n      default: void 0\n    }\n  },\n\n  setup(t) {\n    const o = a(0),\n          e = a(!1),\n          r = a(!1),\n          n = setupScroll(t.target, a => {\n      const l = a.target;\n      o.value < l.scrollTop ? (r.value = !!t.hideOnScroll, e.value = !!t.shadowOnScroll) : (r.value = !1, e.value = !1), o.value = l.scrollTop;\n    }),\n          {\n      getColor: p\n    } = d(),\n          s = l(() => p(t.color, \"primary\")),\n          i = l(() => p(t.shadowColor, s.value)),\n          u = l(() => {\n      const a = v(t.shadowColor ? i.value : s.value);\n      return e.value ? `0px 0px 12px 2px ${a}` : \"\";\n    }),\n          f = l(() => r.value ? t.bottom ? \"translateY(100%)\" : \"translateY(-100%)\" : \"\");\n    return {\n      scrollRoot: n,\n      computedStyle: l(() => ({\n        background: t.gradient ? c(s.value) : s.value,\n        \"box-shadow\": u.value,\n        transform: f.value\n      })),\n      computedClass: l(() => ({\n        \"va-app-bar\": !0,\n        \"va-app-bar--bottom\": t.bottom\n      }))\n    };\n  }\n\n});\nf(\":root{--va-app-bar-position:relative;--va-app-bar-height:auto}.va-app-bar{align-items:center;display:flex;font-family:var(--va-font-family);height:var(--va-app-bar-height);left:0;min-height:var(--va-app-bar-height);min-width:100%;position:var(--va-app-bar-position);top:0;transition:all .5s ease;width:100%}.va-app-bar--bottom{top:100%;transform:translateY(-100%)}\"), m.render = function render(t, a, o, e, r, l) {\n  return n(), p(\"header\", {\n    class: s(t.computedClass),\n    style: i(t.computedStyle),\n    ref: \"scrollRoot\"\n  }, [u(t.$slots, \"default\")], 6);\n}, m.__file = \"src/components/va-app-bar/VaAppBar.vue\";\nvar g = t(m);\nexport { g as default };","map":{"version":3,"mappings":"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","names":["setupScroll","target","onScrollCallback","scrollRoot","ref","targetElement","onMounted","getTargetElement","Error","document","querySelector","value","addEventListener","onBeforeUnmount","removeEventListener","defineComponent","name","props","gradient","type","Boolean","default","bottom","Object","String","hideOnScroll","shadowOnScroll","shadowColor","color","undefined","setup","prevScrollPosition","doShowShadow","isHidden","e","scrollTop","getColor","useColors","colorComputed","computed","shadowColorComputed","computedShadow","shadow","getBoxShadowColor","transformComputed","computedStyle","background","getGradientBackground","transform","computedClass","_createElementBlock","class","_ctx","style","_renderSlot","withConfigTransport","VaAppBar"],"sources":["../../src/mixins/ScrollMixin/ScrollMixin.ts","../../src/components/va-app-bar/VaAppBar.vue","../../src/components/va-app-bar/VaAppBar.vue?vue&type=template&id=07072507&lang.js","../../src/components/va-app-bar/index.ts"],"sourcesContent":["import { onMounted, onBeforeUnmount, ref } from 'vue'\n\nfunction getTargetElement (target: Element | string | null) {\n  if (!target) {\n    throw new Error('Cant find target')\n  }\n\n  return typeof target === 'string' ? document.querySelector(target) : target\n}\n\nexport function setupScroll (target: Element | string, onScrollCallback: (e: Event) => void) {\n  const scrollRoot = ref(null)\n  let targetElement: Element | null\n\n  onMounted(() => {\n    targetElement = getTargetElement(target || scrollRoot.value)\n    targetElement?.addEventListener('scroll', onScrollCallback)\n  })\n\n  onBeforeUnmount(() => {\n    targetElement?.removeEventListener('scroll', onScrollCallback)\n  })\n\n  return scrollRoot\n}\n","<template>\n  <header :class=\"computedClass\" :style=\"computedStyle\" ref=\"scrollRoot\">\n    <slot />\n  </header>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, computed, ref } from 'vue'\n\nimport { setupScroll } from '../../mixins/ScrollMixin/ScrollMixin'\nimport { getGradientBackground, getBoxShadowColor } from '../../services/color-config/color-functions'\nimport { useColors } from '../../services/color-config/color-config'\n\nexport default defineComponent({\n  name: 'VaAppBar',\n  props: {\n    gradient: { type: Boolean as PropType<boolean>, default: false },\n    bottom: { type: Boolean as PropType<boolean>, default: false },\n    target: { type: [Object, String] as PropType<string | Element>, default: '' },\n    hideOnScroll: { type: Boolean as PropType<boolean>, default: false },\n    shadowOnScroll: { type: Boolean as PropType<boolean>, default: false },\n    shadowColor: { type: String as PropType<string>, default: '' },\n    color: { type: String as PropType<string>, default: undefined },\n  },\n  setup (props) {\n    const prevScrollPosition = ref(0)\n    const doShowShadow = ref(false)\n    const isHidden = ref(false)\n\n    const scrollRoot = setupScroll(props.target, (e) => {\n      const target = e.target as Element\n\n      if (prevScrollPosition.value < target.scrollTop) {\n        // Scroll down\n        isHidden.value = !!props.hideOnScroll\n        doShowShadow.value = !!props.shadowOnScroll\n      } else {\n        // Scroll up\n        isHidden.value = false\n        doShowShadow.value = false\n      }\n\n      prevScrollPosition.value = target.scrollTop\n    })\n\n    const { getColor } = useColors()\n\n    const colorComputed = computed(() => getColor(props.color, 'primary'))\n\n    const shadowColorComputed = computed(() => getColor(props.shadowColor, colorComputed.value))\n\n    const computedShadow = computed(() => {\n      const shadow = getBoxShadowColor(props.shadowColor ? shadowColorComputed.value : colorComputed.value)\n      return doShowShadow.value ? `0px 0px 12px 2px ${shadow}` : ''\n    })\n\n    const transformComputed = computed(() => {\n      if (!isHidden.value) { return '' }\n      return props.bottom ? 'translateY(100%)' : 'translateY(-100%)'\n    })\n\n    const computedStyle = computed(() => ({\n      background: props.gradient ? getGradientBackground(colorComputed.value) : colorComputed.value,\n      'box-shadow': computedShadow.value,\n      transform: transformComputed.value,\n    }))\n\n    const computedClass = computed(() => ({\n      'va-app-bar': true,\n      'va-app-bar--bottom': props.bottom,\n    }))\n\n    return {\n      scrollRoot,\n      computedStyle,\n      computedClass,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"variables\";\n\n.va-app-bar {\n  display: flex;\n  align-items: center;\n  position: var(--va-app-bar-position);\n  transition: all 0.5s ease;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: var(--va-app-bar-height);\n  min-height: var(--va-app-bar-height);\n  min-width: 100%;\n  font-family: var(--va-font-family);\n\n  &--bottom {\n    top: 100%;\n    transform: translateY(-100%);\n  }\n}\n</style>\n","<template>\n  <header :class=\"computedClass\" :style=\"computedStyle\" ref=\"scrollRoot\">\n    <slot />\n  </header>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, computed, ref } from 'vue'\n\nimport { setupScroll } from '../../mixins/ScrollMixin/ScrollMixin'\nimport { getGradientBackground, getBoxShadowColor } from '../../services/color-config/color-functions'\nimport { useColors } from '../../services/color-config/color-config'\n\nexport default defineComponent({\n  name: 'VaAppBar',\n  props: {\n    gradient: { type: Boolean as PropType<boolean>, default: false },\n    bottom: { type: Boolean as PropType<boolean>, default: false },\n    target: { type: [Object, String] as PropType<string | Element>, default: '' },\n    hideOnScroll: { type: Boolean as PropType<boolean>, default: false },\n    shadowOnScroll: { type: Boolean as PropType<boolean>, default: false },\n    shadowColor: { type: String as PropType<string>, default: '' },\n    color: { type: String as PropType<string>, default: undefined },\n  },\n  setup (props) {\n    const prevScrollPosition = ref(0)\n    const doShowShadow = ref(false)\n    const isHidden = ref(false)\n\n    const scrollRoot = setupScroll(props.target, (e) => {\n      const target = e.target as Element\n\n      if (prevScrollPosition.value < target.scrollTop) {\n        // Scroll down\n        isHidden.value = !!props.hideOnScroll\n        doShowShadow.value = !!props.shadowOnScroll\n      } else {\n        // Scroll up\n        isHidden.value = false\n        doShowShadow.value = false\n      }\n\n      prevScrollPosition.value = target.scrollTop\n    })\n\n    const { getColor } = useColors()\n\n    const colorComputed = computed(() => getColor(props.color, 'primary'))\n\n    const shadowColorComputed = computed(() => getColor(props.shadowColor, colorComputed.value))\n\n    const computedShadow = computed(() => {\n      const shadow = getBoxShadowColor(props.shadowColor ? shadowColorComputed.value : colorComputed.value)\n      return doShowShadow.value ? `0px 0px 12px 2px ${shadow}` : ''\n    })\n\n    const transformComputed = computed(() => {\n      if (!isHidden.value) { return '' }\n      return props.bottom ? 'translateY(100%)' : 'translateY(-100%)'\n    })\n\n    const computedStyle = computed(() => ({\n      background: props.gradient ? getGradientBackground(colorComputed.value) : colorComputed.value,\n      'box-shadow': computedShadow.value,\n      transform: transformComputed.value,\n    }))\n\n    const computedClass = computed(() => ({\n      'va-app-bar': true,\n      'va-app-bar--bottom': props.bottom,\n    }))\n\n    return {\n      scrollRoot,\n      computedStyle,\n      computedClass,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"variables\";\n\n.va-app-bar {\n  display: flex;\n  align-items: center;\n  position: var(--va-app-bar-position);\n  transition: all 0.5s ease;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: var(--va-app-bar-height);\n  min-height: var(--va-app-bar-height);\n  min-width: 100%;\n  font-family: var(--va-font-family);\n\n  &--bottom {\n    top: 100%;\n    transform: translateY(-100%);\n  }\n}\n</style>\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\nimport VaAppBar from './VaAppBar.vue'\n\nexport default withConfigTransport(VaAppBar)\n"]},"metadata":{},"sourceType":"module"}