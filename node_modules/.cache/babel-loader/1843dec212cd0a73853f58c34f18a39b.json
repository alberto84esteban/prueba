{"ast":null,"code":"import { w as e } from \"./withConfigTransport.js\";\nimport { __decorate as t } from \"tslib\";\nimport { ref as r, provide as o, openBlock as a, createElementBlock as i, renderSlot as n, inject as c, resolveComponent as s, normalizeClass as l, createCommentVNode as h, createVNode as d, createElementVNode as v, normalizeStyle as g, watch as p, toDisplayString as u } from \"vue\";\nimport { m, s as y, O as f, V as b, p as x } from \"./vue-class-component.esm-bundler.js\";\nimport { C } from \"./ColorMixin.js\";\nimport { s as w } from \"./style-inject.es.js\";\nimport _ from \"./index28.js\";\nimport \"./VaConfig.js\";\nimport \"./color-config.js\";\nimport \"colortranslator\";\nimport \"./VaIcon.js\";\nimport \"./flatten.js\";\nimport \"./useSize.js\";\nlet k = class VaTreeRoot extends m(C) {\n  constructor() {\n    super(...arguments), this.setupContext = y(() => {\n      const e = r([]),\n            t = {\n        color: this.$props.color,\n        onChildMounted: t => {\n          e.value.push(t);\n        },\n        onChildUnmounted: t => {\n          e.value = e.value.filter(e => e !== t);\n        }\n      };\n      return o(\"treeRoot\", t), {\n        categories: e\n      };\n    });\n  }\n\n  collapse() {\n    this.$nextTick(() => {\n      this.setupContext.categories.forEach(e => {\n        e.collapse();\n      });\n    });\n  }\n\n  expand() {\n    this.$nextTick(() => {\n      this.setupContext.categories.forEach(e => {\n        e.expand();\n      });\n    });\n  }\n\n};\nk = t([f({\n  name: \"VaTreeRoot\"\n})], k);\nvar q = k;\nconst $ = {\n  class: \"va-tree-root\"\n};\nw(\":root{--va-tree-root-padding:0.3125rem}.va-tree-root{font-family:var(--va-font-family);padding:var(--va-tree-root-padding)}\"), q.render = function render$3(e, t, r, o, c, s) {\n  return a(), i(\"div\", $, [n(e.$slots, \"default\")]);\n}, q.__file = \"src/components/va-tree-view/VaTreeRoot.vue\";\nconst T = b.with(class TreeNodeProps {\n  constructor() {\n    this.highlighted = x(Boolean), this.icon = x({\n      type: String,\n      default: \"\"\n    }), this.iconRight = x({\n      type: String,\n      default: \"\"\n    }), this.color = x({\n      type: String,\n      default: \"primary\"\n    });\n  }\n\n});\nlet V = class VaTreeNode extends m(C, T) {\n  constructor() {\n    super(...arguments), this.setupContext = y(() => ({\n      treeCategory: c(\"treeCategory\", {\n        onChildMounted: e => {},\n        onChildUnmounted: e => {}\n      })\n    }));\n  }\n\n  mounted() {\n    this.setupContext.treeCategory && this.setupContext.treeCategory.onChildMounted(this);\n  }\n\n  beforeUnmount() {\n    this.setupContext.treeCategory && this.setupContext.treeCategory.onChildUnmounted(this);\n  }\n\n};\nV = t([f({\n  name: \"VaTreeNode\",\n  components: {\n    VaIcon: _\n  }\n})], V);\nvar j = V;\nconst S = {\n  key: 0,\n  class: \"va-tree-node__checkbox\"\n},\n      R = {\n  key: 1,\n  class: \"va-tree-node__icon\"\n},\n      O = {\n  class: \"va-tree-node__label\"\n},\n      I = {\n  key: 2,\n  class: \"va-tree-node__icon-right\",\n  size: 24\n};\nw(\":root{--va-tree-node-display:flex;--va-tree-node-align-items:center;--va-tree-node-label-flex-grow:1;--va-tree-node-label-word-wrap:break-word;--va-tree-node-label-overflow:hidden;--va-tree-node-label-line-height:1.15;--va-tree-node-label-highlighted-bg:#dbf9e8;--va-tree-node-icon-margin-right:0.5rem}.va-tree-node{align-items:var(--va-tree-node-align-items);display:var(--va-tree-node-display);font-family:var(--va-font-family)}.va-tree-node .form-group{margin-bottom:0}.va-tree-node__icon{margin-right:var(--va-tree-node-icon-margin-right)}.va-tree-node__icon-right{margin-left:var(--va-tree-node-icon-margin-right)}.va-tree-node__label{word-wrap:var(--va-tree-node-label-word-wrap);flex-grow:var(--va-tree-node-label-flex-grow);line-height:var(--va-tree-node-label-line-height);overflow:var(--va-tree-node-label-overflow)}.va-tree-node--highlighted .va-tree-node__label{background-color:var(--va-tree-node-label-highlighted-bg)}\"), j.render = function render$2(e, t, r, o, c, g) {\n  const p = s(\"va-icon\");\n  return a(), i(\"div\", {\n    class: l([\"va-tree-node\", {\n      \"va-tree-node--highlighted\": e.$props.highlighted\n    }])\n  }, [e.$slots.checkbox ? (a(), i(\"div\", S, [n(e.$slots, \"checkbox\")])) : h(\"v-if\", !0), e.$props.icon ? (a(), i(\"div\", R, [d(p, {\n    name: e.$props.icon,\n    color: e.theme.getColor(\"info\"),\n    size: 24\n  }, null, 8, [\"name\", \"color\"])])) : h(\"v-if\", !0), v(\"div\", O, [n(e.$slots, \"default\")]), e.$props.iconRight ? (a(), i(\"div\", I, [d(p, {\n    name: e.$props.iconRight,\n    color: e.theme.getColor(\"info\")\n  }, null, 8, [\"name\", \"color\"])])) : h(\"v-if\", !0)], 2);\n}, j.__file = \"src/components/va-tree-view/VaTreeNode/VaTreeNode.vue\";\nvar U = e(j);\nconst z = b.with(class SquareWithIconProps {\n  constructor() {\n    this.icon = x({\n      default: \"\",\n      type: String,\n      required: !0\n    }), this.color = x({\n      type: String,\n      default: \"primary\"\n    });\n  }\n\n});\nlet M = class SquareWithIcon extends m(C, z) {};\nM = t([f({\n  name: \"SquareWithIcon\",\n  components: {\n    VaIcon: _\n  }\n})], M);\nvar N = M;\nw(\":root{--square-with-icon-display:flex;--square-with-icon-justify-content:center;--square-with-icon-align-items:center;--square-with-icon-color:#fff;--square-with-icon-background-color:#4ae387;--square-with-icon-border-radius:0.25rem;--square-with-icon-width:1.375rem;--square-with-icon-height:1.375rem}.square-with-icon{align-items:var(--square-with-icon-align-items);background-color:var(--square-with-icon-background-color);border-radius:var(--square-with-icon-border-radius);color:var(--square-with-icon-color);display:var(--square-with-icon-display);height:var(--square-with-icon-height);justify-content:var(--square-with-icon-justify-content);width:var(--square-with-icon-width)}\"), N.render = function render$1(e, t, r, o, n, c) {\n  const l = s(\"va-icon\");\n  return a(), i(\"div\", {\n    class: \"square-with-icon\",\n    style: g({\n      backgroundColor: e.colorComputed\n    })\n  }, [d(l, {\n    name: e.$props.icon\n  }, null, 8, [\"name\"])], 4);\n}, N.__file = \"src/components/va-tree-view/SquareWithIcon/SquareWithIcon.vue\";\nvar W,\n    E = e(N);\nconst P = b.with(class TreeCategoryProps {\n  constructor() {\n    this.label = x({\n      default: \"\",\n      type: [String, Number]\n    }), this.isOpen = x(Boolean), this.icon = x({\n      default: \"\",\n      type: String\n    }), this.color = x({\n      type: String,\n      default: \"primary\"\n    });\n  }\n\n});\nlet B = W = class VaTreeCategory extends m(C, P) {\n  constructor() {\n    super(...arguments), this.isOpenCached = !1, this.setupContext = y(() => {\n      const e = r([]),\n            t = {\n        onChildMounted: t => {\n          e.value.push(t);\n        },\n        onChildUnmounted: t => {\n          e.value = e.value.filter(e => e !== t);\n        }\n      };\n      o(\"treeCategory\", t);\n      return {\n        treeCategory: t,\n        treeRoot: c(\"treeRoot\", {\n          onChildMounted: e => {},\n          onChildUnmounted: e => {}\n        }),\n        nodes: e\n      };\n    });\n  }\n\n  created() {\n    p(() => this.$props.isOpen, e => {\n      this.isOpenCached = e;\n    }, {\n      immediate: !0\n    });\n  }\n\n  collapse() {\n    this.isOpenCached = !1, this.$nextTick(() => {\n      this.setupContext.nodes.forEach(e => {\n        \"va-tree-category\" === e.$options.name && e.collapse();\n      });\n    });\n  }\n\n  expand() {\n    this.isOpenCached = !0, this.$nextTick(() => {\n      this.setupContext.nodes.forEach(e => {\n        e instanceof W && e.expand();\n      });\n    });\n  }\n\n  toggle(e) {\n    e.target.classList.contains(\"va-checkbox__input\") || (this.isOpenCached = !this.isOpenCached);\n  }\n\n  mounted() {\n    this.setupContext.treeRoot && this.setupContext.treeRoot.onChildMounted(this);\n  }\n\n  beforeUnmount() {\n    this.setupContext.treeRoot && this.setupContext.treeRoot.onChildUnmounted(this);\n  }\n\n};\nB = W = t([f({\n  name: \"VaTreeCategory\",\n  components: {\n    VaIcon: _,\n    SquareWithIcon: E\n  }\n})], B);\nvar L = B;\nconst A = {\n  class: \"va-tree-category\"\n},\n      D = {\n  class: \"va-tree-category__header-switcher\"\n},\n      F = {\n  key: 0,\n  class: \"va-tree-category__header-checkbox\"\n},\n      G = {\n  key: 1,\n  class: \"va-tree-category__header-icon\"\n},\n      H = {\n  class: \"va-tree-category__header-label\"\n},\n      J = {\n  key: 0,\n  class: \"va-tree-category__list-container\"\n},\n      K = {\n  class: \"va-tree-category__list-internal-container\"\n};\nw(\":root{--va-tree-category-header-cursor:pointer;--va-tree-category-header-display:flex;--va-tree-category-header-align-items:center;--va-tree-category-header-checkbox-margin-right:0.5rem;--va-tree-category-header-checkbox-height:1.5rem;--va-tree-category-header-checkbox-width:1.5rem;--va-tree-category-header-checkbox-display:flex;--va-tree-category-header-checkbox-align-items:center;--va-tree-category-header-checkbox-justify-content:center;--va-tree-category-header-icon-color:#2c82e0;--va-tree-category-header-icon-margin-right:0.5rem;--va-tree-category-header-icon-font-size:24px;--va-tree-category-header-icon-line-height:24px;--va-tree-category-header-label-word-wrap:break-word;--va-tree-category-header-label-overflow:hidden;--va-tree-category-header-label-line-height:1.15;--va-tree-category-list-container-margin-top:0.625rem;--va-tree-category-list-container-padding-left:0.6875rem}.va-tree-category{font-family:var(--va-font-family)}.va-tree-category__header{align-items:var(--va-tree-category-header-align-items);cursor:var(--va-tree-category-header-cursor);display:var(--va-tree-category-header-display)}.va-tree-category__header-switcher{margin-right:.5rem}.va-tree-category__header-checkbox{align-items:var(--va-tree-category-header-checkbox-align-items);display:var(--va-tree-category-header-checkbox-display);height:var(--va-tree-category-header-checkbox-height);justify-content:var(--va-tree-category-header-checkbox-justify-content);margin-right:var(--va-tree-category-header-checkbox-margin-right);width:var(--va-tree-category-header-checkbox-width)}.va-tree-category__header-checkbox .va-checkbox__square{flex:0 0 1.5rem;height:1.5rem;width:1.5rem}.va-tree-category__header-icon{color:var(--va-tree-category-header-icon-color);font-size:var(--va-tree-category-header-icon-font-size);line-height:var(--va-tree-category-header-icon-line-height);margin-right:var(--va-tree-category-header-icon-margin-right)}.va-tree-category__header-label{word-wrap:var(--va-tree-category-header-label-word-wrap);line-height:var(--va-tree-category-header-label-line-height);overflow:var(--va-tree-category-header-label-overflow)}.va-tree-category__list-container{margin-top:var(--va-tree-category-list-container-margin-top);padding-left:var(--va-tree-category-list-container-padding-left)}.va-tree-category__list-internal-container{background-image:linear-gradient(#adb3b9 33%,hsla(0,0%,100%,0) 0);background-position:0;background-repeat:repeat-y;background-size:1px 3px;padding-left:1.1875rem}.va-tree-category+.va-tree-category,.va-tree-category .va-tree-category+.va-tree-node,.va-tree-category .va-tree-node+.va-tree-category,.va-tree-category .va-tree-node+.va-tree-node{margin-top:.75rem}\"), L.render = function render(e, t, r, o, c, l) {\n  const g = s(\"square-with-icon\"),\n        p = s(\"va-icon\");\n  return a(), i(\"div\", A, [v(\"div\", {\n    class: \"va-tree-category__header\",\n    onClick: t[0] || (t[0] = (...t) => e.toggle && e.toggle(...t))\n  }, [v(\"div\", D, [d(g, {\n    icon: e.isOpenCached ? \"remove\" : \"add\",\n    color: e.setupContext.treeRoot.color || e.colorComputed\n  }, null, 8, [\"icon\", \"color\"])]), e.$slots.checkbox ? (a(), i(\"div\", F, [n(e.$slots, \"checkbox\")])) : h(\"v-if\", !0), e.$props.icon ? (a(), i(\"div\", G, [d(p, {\n    name: e.$props.icon,\n    color: e.theme.getColor(\"info\")\n  }, null, 8, [\"name\", \"color\"])])) : h(\"v-if\", !0), v(\"div\", H, u(e.$props.label), 1)]), e.isOpenCached ? (a(), i(\"div\", J, [v(\"div\", K, [n(e.$slots, \"default\")])])) : h(\"v-if\", !0)]);\n}, L.__file = \"src/components/va-tree-view/VaTreeCategory/VaTreeCategory.vue\";\nvar Q = e(L),\n    X = e(q);\nexport { Q as VaTreeCategory, U as VaTreeNode, X as default };","map":{"version":3,"mappings":"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","names":["VaTreeRoot","mixins","ColorMixin","constructor","this","setup","categories","ref","treeRoot","color","$props","onChildMounted","category","value","push","onChildUnmounted","removableCategory","filter","provide","collapse","$nextTick","setupContext","forEach","child","expand","Options","name","class","w","_createElementBlock","_renderSlot","_hoisted_1","TreeNodePropsMixin","Vue","with","TreeNodeProps","prop","Boolean","type","String","default","VaTreeNode","treeCategory","inject","mounted","beforeUnmount","components","VaIcon","R","key","O","I","size","_ctx","highlighted","checkbox","a","icon","_createVNode","getColor","_hoisted_2","h","_createElementVNode","_hoisted_3","iconRight","_hoisted_4","withConfigTransport","SquareWithIconPropsMixin","SquareWithIconProps","required","SquareWithIcon","style","TreeCategoryPropsMixin","TreeCategoryProps","Number","VaTreeCategory","nodes","node","removableNode","created","watch","isOpen","isOpenCached","immediate","$options","VaTreeCategory_1","toggle","e","target","classList","contains","D","F","G","H","J","K","onClick","label","_hoisted_5","_hoisted_7","_hoisted_6"],"sources":["../../src/components/va-tree-view/VaTreeRoot.vue","../../src/components/va-tree-view/VaTreeRoot.vue?vue&type=template&id=0e558b08&lang.js","../../src/components/va-tree-view/VaTreeNode/VaTreeNode.vue","../../src/components/va-tree-view/VaTreeNode/VaTreeNode.vue?vue&type=template&id=55056222&lang.js","../../src/components/va-tree-view/VaTreeNode/index.ts","../../src/components/va-tree-view/SquareWithIcon/SquareWithIcon.vue","../../src/components/va-tree-view/SquareWithIcon/SquareWithIcon.vue?vue&type=template&id=2cbaf102&lang.js","../../src/components/va-tree-view/SquareWithIcon/index.ts","../../src/components/va-tree-view/VaTreeCategory/VaTreeCategory.vue","../../src/components/va-tree-view/VaTreeCategory/VaTreeCategory.vue?vue&type=template&id=5e011da2&lang.js","../../src/components/va-tree-view/VaTreeCategory/index.ts","../../src/components/va-tree-view/index.ts"],"sourcesContent":["<template>\n  <div class=\"va-tree-root\">\n    <slot />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { provide, ref } from 'vue'\nimport { Options, setup, mixins } from 'vue-class-component'\n\nimport ColorMixin from '../../services/color-config/ColorMixin'\nimport VaTreeCategory from './VaTreeCategory/VaTreeCategory.vue'\n\n@Options({\n  name: 'VaTreeRoot',\n})\n\nexport default class VaTreeRoot extends mixins(ColorMixin) {\n  setupContext = setup(() => {\n    const categories = ref<VaTreeCategory[]>([])\n\n    const onChildMounted = (category: VaTreeCategory) => {\n      categories.value.push(category)\n    }\n\n    const onChildUnmounted = (removableCategory: VaTreeCategory) => {\n      categories.value = categories.value.filter((category: VaTreeCategory) => category !== removableCategory)\n    }\n\n    const treeRoot = {\n      color: this.$props.color,\n      onChildMounted,\n      onChildUnmounted,\n    }\n\n    provide('treeRoot', treeRoot)\n\n    return {\n      categories,\n    }\n  })\n\n  collapse () {\n    this.$nextTick(() => {\n      this.setupContext.categories.forEach((child: VaTreeCategory) => {\n        child.collapse()\n      })\n    })\n  }\n\n  expand () {\n    this.$nextTick(() => {\n      this.setupContext.categories.forEach((child: VaTreeCategory) => {\n        child.expand()\n      })\n    })\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import 'variables';\n\n.va-tree-root {\n  padding: var(--va-tree-root-padding);\n  font-family: var(--va-font-family);\n}\n</style>\n","<template>\n  <div class=\"va-tree-root\">\n    <slot />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { provide, ref } from 'vue'\nimport { Options, setup, mixins } from 'vue-class-component'\n\nimport ColorMixin from '../../services/color-config/ColorMixin'\nimport VaTreeCategory from './VaTreeCategory/VaTreeCategory.vue'\n\n@Options({\n  name: 'VaTreeRoot',\n})\n\nexport default class VaTreeRoot extends mixins(ColorMixin) {\n  setupContext = setup(() => {\n    const categories = ref<VaTreeCategory[]>([])\n\n    const onChildMounted = (category: VaTreeCategory) => {\n      categories.value.push(category)\n    }\n\n    const onChildUnmounted = (removableCategory: VaTreeCategory) => {\n      categories.value = categories.value.filter((category: VaTreeCategory) => category !== removableCategory)\n    }\n\n    const treeRoot = {\n      color: this.$props.color,\n      onChildMounted,\n      onChildUnmounted,\n    }\n\n    provide('treeRoot', treeRoot)\n\n    return {\n      categories,\n    }\n  })\n\n  collapse () {\n    this.$nextTick(() => {\n      this.setupContext.categories.forEach((child: VaTreeCategory) => {\n        child.collapse()\n      })\n    })\n  }\n\n  expand () {\n    this.$nextTick(() => {\n      this.setupContext.categories.forEach((child: VaTreeCategory) => {\n        child.expand()\n      })\n    })\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import 'variables';\n\n.va-tree-root {\n  padding: var(--va-tree-root-padding);\n  font-family: var(--va-font-family);\n}\n</style>\n","<template>\n  <div\n    class=\"va-tree-node\"\n    :class=\"{ 'va-tree-node--highlighted': $props.highlighted }\"\n  >\n    <div\n      class=\"va-tree-node__checkbox\"\n      v-if=\"$slots.checkbox\"\n    >\n      <slot name=\"checkbox\" />\n    </div>\n    <div\n      class=\"va-tree-node__icon\"\n      v-if=\"$props.icon\"\n    >\n      <va-icon\n        :name=\"$props.icon\"\n        :color=\"theme.getColor('info')\"\n        :size=\"24\"\n      />\n    </div>\n    <div class=\"va-tree-node__label\">\n      <slot />\n    </div>\n    <div\n      class=\"va-tree-node__icon-right\"\n      v-if=\"$props.iconRight\"\n      :size=\"24\"\n    >\n      <va-icon\n        :name=\"$props.iconRight\"\n        :color=\"theme.getColor('info')\"\n      />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { inject } from 'vue'\nimport { mixins, Options, prop, setup, Vue } from 'vue-class-component'\n\nimport ColorMixin from '../../../services/color-config/ColorMixin'\nimport VaIcon from '../../va-icon'\n\nclass TreeNodeProps {\n  highlighted = prop<boolean>(Boolean)\n  icon = prop<string>({ type: String, default: '' })\n  iconRight = prop<string>({ type: String, default: '' })\n  color = prop<string>({ type: String, default: 'primary' })\n}\n\nconst TreeNodePropsMixin = Vue.with(TreeNodeProps)\n\n@Options({\n  name: 'VaTreeNode',\n  components: { VaIcon },\n})\nexport default class VaTreeNode extends mixins(\n  ColorMixin,\n  TreeNodePropsMixin,\n) {\n  setupContext = setup(() => {\n    const treeCategory = inject('treeCategory', {\n      onChildMounted: (value: any) => undefined,\n      onChildUnmounted: (value: any) => undefined,\n    })\n\n    return {\n      treeCategory,\n    }\n  })\n\n  mounted () {\n    if (this.setupContext.treeCategory) {\n      this.setupContext.treeCategory.onChildMounted(this)\n    }\n  }\n\n  beforeUnmount () {\n    if (this.setupContext.treeCategory) {\n      this.setupContext.treeCategory.onChildUnmounted(this)\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import \"../../../styles/resources\";\n@import 'variables.scss';\n\n.va-tree-node {\n  display: var(--va-tree-node-display);\n  align-items: var(--va-tree-node-align-items);\n  font-family: var(--va-font-family);\n\n  .form-group {\n    margin-bottom: 0;\n  }\n\n  &__icon {\n    margin-right: var(--va-tree-node-icon-margin-right);\n  }\n\n  &__icon-right {\n    margin-left: var(--va-tree-node-icon-margin-right);\n  }\n\n  &__label {\n    flex-grow: var(--va-tree-node-label-flex-grow);\n    word-wrap: var(--va-tree-node-label-word-wrap);\n    overflow: var(--va-tree-node-label-overflow);\n    line-height: var(--va-tree-node-label-line-height);\n  }\n\n  &--highlighted #{&}__label {\n    background-color: var(--va-tree-node-label-highlighted-bg);\n  }\n}\n</style>\n","<template>\n  <div\n    class=\"va-tree-node\"\n    :class=\"{ 'va-tree-node--highlighted': $props.highlighted }\"\n  >\n    <div\n      class=\"va-tree-node__checkbox\"\n      v-if=\"$slots.checkbox\"\n    >\n      <slot name=\"checkbox\" />\n    </div>\n    <div\n      class=\"va-tree-node__icon\"\n      v-if=\"$props.icon\"\n    >\n      <va-icon\n        :name=\"$props.icon\"\n        :color=\"theme.getColor('info')\"\n        :size=\"24\"\n      />\n    </div>\n    <div class=\"va-tree-node__label\">\n      <slot />\n    </div>\n    <div\n      class=\"va-tree-node__icon-right\"\n      v-if=\"$props.iconRight\"\n      :size=\"24\"\n    >\n      <va-icon\n        :name=\"$props.iconRight\"\n        :color=\"theme.getColor('info')\"\n      />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { inject } from 'vue'\nimport { mixins, Options, prop, setup, Vue } from 'vue-class-component'\n\nimport ColorMixin from '../../../services/color-config/ColorMixin'\nimport VaIcon from '../../va-icon'\n\nclass TreeNodeProps {\n  highlighted = prop<boolean>(Boolean)\n  icon = prop<string>({ type: String, default: '' })\n  iconRight = prop<string>({ type: String, default: '' })\n  color = prop<string>({ type: String, default: 'primary' })\n}\n\nconst TreeNodePropsMixin = Vue.with(TreeNodeProps)\n\n@Options({\n  name: 'VaTreeNode',\n  components: { VaIcon },\n})\nexport default class VaTreeNode extends mixins(\n  ColorMixin,\n  TreeNodePropsMixin,\n) {\n  setupContext = setup(() => {\n    const treeCategory = inject('treeCategory', {\n      onChildMounted: (value: any) => undefined,\n      onChildUnmounted: (value: any) => undefined,\n    })\n\n    return {\n      treeCategory,\n    }\n  })\n\n  mounted () {\n    if (this.setupContext.treeCategory) {\n      this.setupContext.treeCategory.onChildMounted(this)\n    }\n  }\n\n  beforeUnmount () {\n    if (this.setupContext.treeCategory) {\n      this.setupContext.treeCategory.onChildUnmounted(this)\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import \"../../../styles/resources\";\n@import 'variables.scss';\n\n.va-tree-node {\n  display: var(--va-tree-node-display);\n  align-items: var(--va-tree-node-align-items);\n  font-family: var(--va-font-family);\n\n  .form-group {\n    margin-bottom: 0;\n  }\n\n  &__icon {\n    margin-right: var(--va-tree-node-icon-margin-right);\n  }\n\n  &__icon-right {\n    margin-left: var(--va-tree-node-icon-margin-right);\n  }\n\n  &__label {\n    flex-grow: var(--va-tree-node-label-flex-grow);\n    word-wrap: var(--va-tree-node-label-word-wrap);\n    overflow: var(--va-tree-node-label-overflow);\n    line-height: var(--va-tree-node-label-line-height);\n  }\n\n  &--highlighted #{&}__label {\n    background-color: var(--va-tree-node-label-highlighted-bg);\n  }\n}\n</style>\n","import withConfigTransport from '../../../services/config-transport/withConfigTransport'\nimport VaTreeNode from './VaTreeNode.vue'\n\nexport default withConfigTransport(VaTreeNode as any)\n","<template>\n  <div\n    class=\"square-with-icon\"\n    :style=\"{ backgroundColor: colorComputed }\"\n  >\n    <va-icon :name=\"$props.icon\" />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue, prop, mixins } from 'vue-class-component'\n\nimport ColorMixin from '../../../services/color-config/ColorMixin'\nimport VaIcon from '../../va-icon'\n\nclass SquareWithIconProps {\n  icon = prop<string>({ default: '', type: String, required: true })\n  color = prop<string>({ type: String, default: 'primary' })\n}\n\nconst SquareWithIconPropsMixin = Vue.with(SquareWithIconProps)\n\n@Options({\n  name: 'SquareWithIcon',\n  components: { VaIcon },\n})\nexport default class SquareWithIcon extends mixins(\n  ColorMixin,\n  SquareWithIconPropsMixin,\n) {\n\n}\n</script>\n\n<style lang=\"scss\">\n@import \"../../../styles/resources\";\n@import 'variables';\n\n.square-with-icon {\n  display: var(--square-with-icon-display);\n  justify-content: var(--square-with-icon-justify-content);\n  align-items: var(--square-with-icon-align-items);\n  color: var(--square-with-icon-color);\n  background-color: var(--square-with-icon-background-color);\n  border-radius: var(--square-with-icon-border-radius);\n  width: var(--square-with-icon-width);\n  height: var(--square-with-icon-height);\n}\n</style>\n","<template>\n  <div\n    class=\"square-with-icon\"\n    :style=\"{ backgroundColor: colorComputed }\"\n  >\n    <va-icon :name=\"$props.icon\" />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue, prop, mixins } from 'vue-class-component'\n\nimport ColorMixin from '../../../services/color-config/ColorMixin'\nimport VaIcon from '../../va-icon'\n\nclass SquareWithIconProps {\n  icon = prop<string>({ default: '', type: String, required: true })\n  color = prop<string>({ type: String, default: 'primary' })\n}\n\nconst SquareWithIconPropsMixin = Vue.with(SquareWithIconProps)\n\n@Options({\n  name: 'SquareWithIcon',\n  components: { VaIcon },\n})\nexport default class SquareWithIcon extends mixins(\n  ColorMixin,\n  SquareWithIconPropsMixin,\n) {\n\n}\n</script>\n\n<style lang=\"scss\">\n@import \"../../../styles/resources\";\n@import 'variables';\n\n.square-with-icon {\n  display: var(--square-with-icon-display);\n  justify-content: var(--square-with-icon-justify-content);\n  align-items: var(--square-with-icon-align-items);\n  color: var(--square-with-icon-color);\n  background-color: var(--square-with-icon-background-color);\n  border-radius: var(--square-with-icon-border-radius);\n  width: var(--square-with-icon-width);\n  height: var(--square-with-icon-height);\n}\n</style>\n","import withConfigTransport from '../../../services/config-transport/withConfigTransport'\nimport SquareWithIcon from './SquareWithIcon.vue'\n\nexport default withConfigTransport(SquareWithIcon as any)\n","<template>\n  <div class=\"va-tree-category\">\n    <div\n      class=\"va-tree-category__header\"\n      @click=\"toggle\"\n    >\n      <div class=\"va-tree-category__header-switcher\">\n        <square-with-icon\n          :icon=\"isOpenCached ? 'remove' : 'add'\"\n          :color=\"setupContext.treeRoot.color || colorComputed\"\n        />\n      </div>\n      <div\n        class=\"va-tree-category__header-checkbox\"\n        v-if=\"$slots.checkbox\"\n      >\n        <slot name=\"checkbox\" />\n      </div>\n      <div\n        class=\"va-tree-category__header-icon\"\n        v-if=\"$props.icon\"\n      >\n        <va-icon\n          :name=\"$props.icon\"\n          :color=\"theme.getColor('info')\"\n        />\n      </div>\n      <div class=\"va-tree-category__header-label\">\n        {{ $props.label }}\n      </div>\n    </div>\n\n    <div\n      class=\"va-tree-category__list-container\"\n      v-if=\"isOpenCached\"\n    >\n      <div class=\"va-tree-category__list-internal-container\">\n        <slot />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { provide, inject, watch, ComponentPublicInstance, ref } from 'vue'\nimport { Options, Vue, mixins, prop, setup } from 'vue-class-component'\n\nimport ColorMixin from '../../../services/color-config/ColorMixin'\nimport SquareWithIcon from '../SquareWithIcon'\nimport VaIcon from '../../va-icon'\nimport VaTreeNode from '../VaTreeNode/VaTreeNode.vue'\n\nclass TreeCategoryProps {\n  label = prop<string | number>({ default: '', type: [String, Number] })\n  isOpen = prop<boolean>(Boolean)\n  icon = prop<string>({ default: '', type: String })\n  color = prop<string>({ type: String, default: 'primary' })\n}\n\nconst TreeCategoryPropsMixin = Vue.with(TreeCategoryProps)\n\n@Options({\n  name: 'VaTreeCategory',\n  components: { VaIcon, SquareWithIcon },\n})\nexport default class VaTreeCategory extends mixins(\n  ColorMixin,\n  TreeCategoryPropsMixin,\n) {\n  isOpenCached: boolean | undefined = false\n\n  setupContext = setup(() => {\n    const nodes = ref<(VaTreeCategory | VaTreeNode)[]>([])\n\n    const onChildMounted = (node: VaTreeCategory | VaTreeNode) => {\n      nodes.value.push(node)\n    }\n\n    const onChildUnmounted = (removableNode: VaTreeCategory | VaTreeNode) => {\n      nodes.value = nodes.value.filter((node: VaTreeCategory | VaTreeNode) => node !== removableNode)\n    }\n\n    const treeCategory = {\n      onChildMounted,\n      onChildUnmounted,\n    }\n\n    provide('treeCategory', treeCategory)\n\n    const treeRoot = inject('treeRoot', {\n      onChildMounted: (value: any) => undefined,\n      onChildUnmounted: (value: any) => undefined,\n    })\n\n    return {\n      treeCategory,\n      treeRoot,\n      nodes,\n    }\n  })\n\n  created () {\n    watch(\n      () => this.$props.isOpen,\n      (isOpen) => {\n        this.isOpenCached = isOpen\n      },\n      { immediate: true })\n  }\n\n  collapse () {\n    this.isOpenCached = false\n    this.$nextTick(() => {\n      this.setupContext.nodes.forEach((child: ComponentPublicInstance) => {\n        if (child.$options.name === 'va-tree-category') {\n          (child as VaTreeCategory).collapse()\n        }\n      })\n    })\n  }\n\n  expand () {\n    this.isOpenCached = true\n    this.$nextTick(() => {\n      this.setupContext.nodes.forEach((child: VaTreeCategory | VaTreeNode) => {\n        if (child instanceof VaTreeCategory) {\n          child.expand()\n        }\n      })\n    })\n  }\n\n  toggle (e: MouseEvent) {\n    if (!(e.target as HTMLElement).classList.contains('va-checkbox__input')) {\n      this.isOpenCached = !this.isOpenCached\n    }\n  }\n\n  mounted () {\n    if (this.setupContext.treeRoot) {\n      this.setupContext.treeRoot.onChildMounted(this)\n    }\n  }\n\n  beforeUnmount () {\n    if (this.setupContext.treeRoot) {\n      this.setupContext.treeRoot.onChildUnmounted(this)\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import \"../../../styles/resources\";\n@import 'variables';\n\n.va-tree-category {\n  font-family: var(--va-font-family);\n\n  &__header {\n    cursor: var(--va-tree-category-header-cursor);\n    display: var(--va-tree-category-header-display);\n    align-items: var(--va-tree-category-header-align-items);\n  }\n\n  &__header-switcher {\n    margin-right: 0.5rem;\n  }\n\n  &__header-checkbox {\n    margin-right: var(--va-tree-category-header-checkbox-margin-right);\n    height: var(--va-tree-category-header-checkbox-height);\n    width: var(--va-tree-category-header-checkbox-width);\n    display: var(--va-tree-category-header-checkbox-display);\n    align-items: var(--va-tree-category-header-checkbox-align-items);\n    justify-content: var(--va-tree-category-header-checkbox-justify-content);\n\n    .va-checkbox__square {\n      width: 1.5rem;\n      height: 1.5rem;\n      flex: 0 0 1.5rem;\n    }\n  }\n\n  &__header-icon {\n    color: var(--va-tree-category-header-icon-color);\n    margin-right: var(--va-tree-category-header-icon-margin-right);\n    font-size: var(--va-tree-category-header-icon-font-size);\n    line-height: var(--va-tree-category-header-icon-line-height);\n  }\n\n  &__header-label {\n    word-wrap: var(--va-tree-category-header-label-word-wrap);\n    overflow: var(--va-tree-category-header-label-overflow);\n    line-height: var(--va-tree-category-header-label-line-height);\n  }\n\n  &__list-container {\n    margin-top: var(--va-tree-category-list-container-margin-top);\n    padding-left: var(--va-tree-category-list-container-padding-left);\n  }\n\n  &__list-internal-container {\n    background-image: linear-gradient(#adb3b9 33%, rgba(255, 255, 255, 0) 0%);\n    background-position: left;\n    background-size: 1px 3px;\n    background-repeat: repeat-y;\n    padding-left: 1.1875rem;\n  }\n\n  & + .va-tree-category,\n  .va-tree-node + .va-tree-node,\n  .va-tree-category + .va-tree-node,\n  .va-tree-node + .va-tree-category {\n    margin-top: 0.75rem;\n  }\n}\n</style>\n","<template>\n  <div class=\"va-tree-category\">\n    <div\n      class=\"va-tree-category__header\"\n      @click=\"toggle\"\n    >\n      <div class=\"va-tree-category__header-switcher\">\n        <square-with-icon\n          :icon=\"isOpenCached ? 'remove' : 'add'\"\n          :color=\"setupContext.treeRoot.color || colorComputed\"\n        />\n      </div>\n      <div\n        class=\"va-tree-category__header-checkbox\"\n        v-if=\"$slots.checkbox\"\n      >\n        <slot name=\"checkbox\" />\n      </div>\n      <div\n        class=\"va-tree-category__header-icon\"\n        v-if=\"$props.icon\"\n      >\n        <va-icon\n          :name=\"$props.icon\"\n          :color=\"theme.getColor('info')\"\n        />\n      </div>\n      <div class=\"va-tree-category__header-label\">\n        {{ $props.label }}\n      </div>\n    </div>\n\n    <div\n      class=\"va-tree-category__list-container\"\n      v-if=\"isOpenCached\"\n    >\n      <div class=\"va-tree-category__list-internal-container\">\n        <slot />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { provide, inject, watch, ComponentPublicInstance, ref } from 'vue'\nimport { Options, Vue, mixins, prop, setup } from 'vue-class-component'\n\nimport ColorMixin from '../../../services/color-config/ColorMixin'\nimport SquareWithIcon from '../SquareWithIcon'\nimport VaIcon from '../../va-icon'\nimport VaTreeNode from '../VaTreeNode/VaTreeNode.vue'\n\nclass TreeCategoryProps {\n  label = prop<string | number>({ default: '', type: [String, Number] })\n  isOpen = prop<boolean>(Boolean)\n  icon = prop<string>({ default: '', type: String })\n  color = prop<string>({ type: String, default: 'primary' })\n}\n\nconst TreeCategoryPropsMixin = Vue.with(TreeCategoryProps)\n\n@Options({\n  name: 'VaTreeCategory',\n  components: { VaIcon, SquareWithIcon },\n})\nexport default class VaTreeCategory extends mixins(\n  ColorMixin,\n  TreeCategoryPropsMixin,\n) {\n  isOpenCached: boolean | undefined = false\n\n  setupContext = setup(() => {\n    const nodes = ref<(VaTreeCategory | VaTreeNode)[]>([])\n\n    const onChildMounted = (node: VaTreeCategory | VaTreeNode) => {\n      nodes.value.push(node)\n    }\n\n    const onChildUnmounted = (removableNode: VaTreeCategory | VaTreeNode) => {\n      nodes.value = nodes.value.filter((node: VaTreeCategory | VaTreeNode) => node !== removableNode)\n    }\n\n    const treeCategory = {\n      onChildMounted,\n      onChildUnmounted,\n    }\n\n    provide('treeCategory', treeCategory)\n\n    const treeRoot = inject('treeRoot', {\n      onChildMounted: (value: any) => undefined,\n      onChildUnmounted: (value: any) => undefined,\n    })\n\n    return {\n      treeCategory,\n      treeRoot,\n      nodes,\n    }\n  })\n\n  created () {\n    watch(\n      () => this.$props.isOpen,\n      (isOpen) => {\n        this.isOpenCached = isOpen\n      },\n      { immediate: true })\n  }\n\n  collapse () {\n    this.isOpenCached = false\n    this.$nextTick(() => {\n      this.setupContext.nodes.forEach((child: ComponentPublicInstance) => {\n        if (child.$options.name === 'va-tree-category') {\n          (child as VaTreeCategory).collapse()\n        }\n      })\n    })\n  }\n\n  expand () {\n    this.isOpenCached = true\n    this.$nextTick(() => {\n      this.setupContext.nodes.forEach((child: VaTreeCategory | VaTreeNode) => {\n        if (child instanceof VaTreeCategory) {\n          child.expand()\n        }\n      })\n    })\n  }\n\n  toggle (e: MouseEvent) {\n    if (!(e.target as HTMLElement).classList.contains('va-checkbox__input')) {\n      this.isOpenCached = !this.isOpenCached\n    }\n  }\n\n  mounted () {\n    if (this.setupContext.treeRoot) {\n      this.setupContext.treeRoot.onChildMounted(this)\n    }\n  }\n\n  beforeUnmount () {\n    if (this.setupContext.treeRoot) {\n      this.setupContext.treeRoot.onChildUnmounted(this)\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import \"../../../styles/resources\";\n@import 'variables';\n\n.va-tree-category {\n  font-family: var(--va-font-family);\n\n  &__header {\n    cursor: var(--va-tree-category-header-cursor);\n    display: var(--va-tree-category-header-display);\n    align-items: var(--va-tree-category-header-align-items);\n  }\n\n  &__header-switcher {\n    margin-right: 0.5rem;\n  }\n\n  &__header-checkbox {\n    margin-right: var(--va-tree-category-header-checkbox-margin-right);\n    height: var(--va-tree-category-header-checkbox-height);\n    width: var(--va-tree-category-header-checkbox-width);\n    display: var(--va-tree-category-header-checkbox-display);\n    align-items: var(--va-tree-category-header-checkbox-align-items);\n    justify-content: var(--va-tree-category-header-checkbox-justify-content);\n\n    .va-checkbox__square {\n      width: 1.5rem;\n      height: 1.5rem;\n      flex: 0 0 1.5rem;\n    }\n  }\n\n  &__header-icon {\n    color: var(--va-tree-category-header-icon-color);\n    margin-right: var(--va-tree-category-header-icon-margin-right);\n    font-size: var(--va-tree-category-header-icon-font-size);\n    line-height: var(--va-tree-category-header-icon-line-height);\n  }\n\n  &__header-label {\n    word-wrap: var(--va-tree-category-header-label-word-wrap);\n    overflow: var(--va-tree-category-header-label-overflow);\n    line-height: var(--va-tree-category-header-label-line-height);\n  }\n\n  &__list-container {\n    margin-top: var(--va-tree-category-list-container-margin-top);\n    padding-left: var(--va-tree-category-list-container-padding-left);\n  }\n\n  &__list-internal-container {\n    background-image: linear-gradient(#adb3b9 33%, rgba(255, 255, 255, 0) 0%);\n    background-position: left;\n    background-size: 1px 3px;\n    background-repeat: repeat-y;\n    padding-left: 1.1875rem;\n  }\n\n  & + .va-tree-category,\n  .va-tree-node + .va-tree-node,\n  .va-tree-category + .va-tree-node,\n  .va-tree-node + .va-tree-category {\n    margin-top: 0.75rem;\n  }\n}\n</style>\n","import withConfigTransport from '../../../services/config-transport/withConfigTransport'\nimport VaTreeCategory from './VaTreeCategory.vue'\n\nexport default withConfigTransport(VaTreeCategory as any)\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\nimport VaTreeRoot from './VaTreeRoot.vue'\n\nexport { default as VaTreeNode } from './VaTreeNode'\nexport { default as VaTreeCategory } from './VaTreeCategory'\n\nexport default withConfigTransport(VaTreeRoot as any)\n"]},"metadata":{},"sourceType":"module"}