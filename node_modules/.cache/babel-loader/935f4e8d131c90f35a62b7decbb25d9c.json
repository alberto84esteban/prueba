{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport { __decorate as e } from \"tslib\";\nimport { nextTick as t, watch as o, openBlock as n, createElementBlock as r, normalizeClass as s, createElementVNode as i, withKeys as a, withModifiers as d, renderSlot as p, createBlock as h, Teleport as c, normalizeStyle as l, createCommentVNode as u, defineComponent as v } from \"vue\";\nimport { V as f, m, O as C, p as w } from \"./vue-class-component.esm-bundler.js\";\nimport { DebounceLoader as k } from \"asva-executors\";\nimport { createPopper as b } from \"@popperjs/core\";\nimport { S as y } from \"./StatefulMixin.js\";\nimport { s as g } from \"./style-inject.es.js\";\nconst O = f.with(class DropdownProps {\n  constructor() {\n    this.debugId = w({\n      type: String,\n      default: \"\"\n    }), this.position = w({\n      type: String,\n      default: \"\"\n    }), this.hoverOverTimeout = w({\n      type: Number,\n      default: 30\n    }), this.hoverOutTimeout = w({\n      type: Number,\n      default: 200\n    }), this.modelValue = w({\n      type: Boolean,\n      default: !1\n    }), this.disabled = w({\n      type: Boolean\n    }), this.attachElement = w({\n      type: String,\n      default: \"body\"\n    }), this.disableAttachment = w({\n      type: Boolean\n    }), this.keepAnchorWidth = w({\n      type: Boolean\n    }), this.anchorSelector = w({\n      type: String,\n      default: \"\"\n    }), this.closeOnContentClick = w({\n      type: Boolean,\n      default: !0\n    }), this.closeOnClickOutside = w({\n      type: Boolean,\n      default: !0\n    }), this.closeOnAnchorClick = w({\n      type: Boolean,\n      default: !0\n    }), this.isContentHoverable = w({\n      type: Boolean,\n      default: !0\n    }), this.offset = w({\n      type: [Array, Number],\n      default: () => []\n    }), this.trigger = w({\n      type: String,\n      default: \"click\",\n      validator: e => [\"click\", \"hover\", \"none\"].includes(e)\n    }), this.stateful = w({\n      type: Boolean,\n      default: !0\n    });\n  }\n\n});\nlet $ = class VaDropdown extends m(y, O) {\n  constructor() {\n    super(...arguments), this.popperInstance = null, this.anchorWidth = 0;\n  }\n\n  get anchorWidthStyles() {\n    return {\n      width: this.anchorWidth + \"px\",\n      maxWidth: this.anchorWidth + \"px\"\n    };\n  }\n\n  get classComputed() {\n    return {\n      \"va-dropdown--disabled\": this.$props.disabled\n    };\n  }\n\n  get showContent() {\n    return this.valueComputed;\n  }\n\n  handlePopperInstance() {\n    this.popperInstance && this.removePopper(), this.showContent && (this.updateAnchorWidth(), t(() => {\n      this.initPopper();\n    }));\n  }\n\n  handleClick(e, t) {\n    this.$emit(e), t && this.hide();\n  }\n\n  onDropdownContentClick() {\n    this.handleClick(\"dropdown-content-click\", this.closeOnContentClick);\n  }\n\n  onClickOutside() {\n    this.handleClick(\"click-outside\", this.closeOnClickOutside);\n  }\n\n  onAnchorClick() {\n    if (!this.$props.disabled) {\n      if (\"click\" === this.$props.trigger) {\n        if (this.valueComputed) return void this.handleClick(\"anchor-click\", this.closeOnAnchorClick);\n        this.valueComputed = !0;\n      }\n\n      this.$emit(\"anchor-click\");\n    }\n  }\n\n  onMouseOver() {\n    this.$props.disabled || \"hover\" !== this.$props.trigger || (this.valueComputed || this.hoverOverDebounceLoader.run(), this.hoverOutDebounceLoader.reset());\n  }\n\n  onMouseOut() {\n    \"hover\" === this.$props.trigger && (this.isContentHoverable ? this.hoverOutDebounceLoader.run() : this.valueComputed = !1, this.hoverOverDebounceLoader.reset());\n  }\n\n  registerClickOutsideListener() {\n    document.addEventListener(\"click\", e => this.handleDocumentClick(e), !1);\n  }\n\n  unregisterClickOutsideListener() {\n    document.removeEventListener(\"click\", e => this.handleDocumentClick(e), !1);\n  }\n\n  handleDocumentClick(e) {\n    let t = e.target;\n    const o = [];\n\n    for (; t;) o.push(t), t = t.parentNode;\n\n    o.includes(this.$refs.anchor) || o.includes(this.$refs.contentWrapper) || this.showContent && this.onClickOutside();\n  }\n\n  updateAnchorWidth() {\n    this.keepAnchorWidth && (this.anchorWidth = this.$refs.anchor.offsetWidth), this.popperInstance && this.popperInstance.forceUpdate();\n  }\n\n  hide() {\n    this.valueComputed = !1;\n  }\n\n  initPopper() {\n    const e = {\n      placement: this.position || \"bottom\",\n      modifiers: [],\n      onFirstUpdate: () => {\n        this.valueComputed = !0;\n      }\n    };\n    this.offset && e.modifiers.push({\n      name: \"offset\",\n      options: {\n        offset: Array.isArray(this.offset) ? this.offset : [this.offset]\n      }\n    });\n    const t = this.$props.anchorSelector && this.$refs.anchor.querySelector(this.$props.anchorSelector) || this.$refs.anchor;\n    this.popperInstance = b(t, this.$refs.contentWrapper, e);\n  }\n\n  removePopper() {\n    this.valueComputed = !1, this.popperInstance && (this.popperInstance.destroy(), this.popperInstance = null);\n  }\n\n  created() {\n    o(() => this.showContent, () => {\n      this.handlePopperInstance();\n    }), this.hoverOverDebounceLoader = new k(async () => {\n      this.valueComputed = !0;\n    }, this.hoverOverTimeout), this.hoverOutDebounceLoader = new k(async () => {\n      this.valueComputed = !1;\n    }, this.hoverOutTimeout), this.$isServer || this.registerClickOutsideListener();\n  }\n\n  mounted() {\n    this.handlePopperInstance();\n  }\n\n  beforeUnmount() {\n    this.unregisterClickOutsideListener(), this.removePopper();\n  }\n\n};\n$ = e([C({\n  name: \"VaDropdown\",\n  emits: [\"update:modelValue\", \"anchor-click\", \"click-outside\", \"dropdown-content-click\"]\n})], $);\nvar D = $;\ng(\":root{--va-dropdown-line-height:1;--va-dropdown-content-wrapper-z-index:var(--va-z-index-teleport-overlay)}.va-dropdown{font-family:var(--va-font-family);line-height:var(--va-dropdown-line-height)}.va-dropdown--disabled{cursor:default;opacity:.4;pointer-events:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.va-dropdown__content-wrapper{z-index:var(--va-dropdown-content-wrapper-z-index)}\"), D.render = function render$1(e, t, o, v, f, m) {\n  return n(), r(\"div\", {\n    class: s([\"va-dropdown\", e.classComputed])\n  }, [i(\"div\", {\n    class: \"va-dropdown__anchor\",\n    onMouseover: t[0] || (t[0] = t => e.onMouseOver()),\n    onMouseout: t[1] || (t[1] = t => e.onMouseOut()),\n    onClick: t[2] || (t[2] = t => e.onAnchorClick()),\n    onKeyup: t[3] || (t[3] = a(d(t => e.onAnchorClick(), [\"stop\", \"prevent\"]), [\"enter\"])),\n    ref: \"anchor\"\n  }, [p(e.$slots, \"anchor\")], 544), e.showContent ? (n(), h(c, {\n    key: 0,\n    to: e.attachElement,\n    disabled: e.disableAttachment\n  }, [i(\"div\", {\n    class: \"va-dropdown__content-wrapper\",\n    onMouseover: t[4] || (t[4] = t => e.$props.isContentHoverable && e.onMouseOver()),\n    onMouseout: t[5] || (t[5] = t => e.onMouseOut()),\n    onClick: t[6] || (t[6] = d(t => e.onDropdownContentClick(), [\"stop\"])),\n    ref: \"contentWrapper\"\n  }, [i(\"div\", {\n    style: l(e.$props.keepAnchorWidth ? e.anchorWidthStyles : \"\")\n  }, [p(e.$slots, \"default\")], 4)], 544)], 8, [\"to\", \"disabled\"])) : u(\"v-if\", !0)], 2);\n}, D.__file = \"src/components/va-dropdown/VaDropdown.vue\";\nvar x = v({\n  name: \"VaDropdownContent\",\n  props: {\n    noPadding: {\n      type: Boolean,\n      default: !1\n    }\n  }\n});\ng(\":root{--va-dropdown-content-background:#fff;--va-dropdown-content-padding:0.5rem;--va-dropdown-content-box-shadow:var(--va-box-shadow);--va-dropdown-content-border-radius:4px}.va-dropdown__content{background:var(--va-dropdown-content-background);border-radius:var(--va-dropdown-content-border-radius);box-shadow:var(--va-dropdown-content-box-shadow);font-family:var(--va-font-family);padding:var(--va-dropdown-content-padding)}\"), x.render = function render(e, t, o, s, i, a) {\n  return n(), r(\"div\", {\n    class: \"va-dropdown__content\",\n    style: l(e.noPadding && {\n      padding: 0\n    })\n  }, [p(e.$slots, \"default\")], 4);\n}, x.__file = \"src/components/va-dropdown/VaDropdownContent/VaDropdownContent.vue\";\nexport { D as a, x as s };","map":{"version":3,"mappings":"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","names":["DropdownPropsMixin","Vue","with","DropdownProps","constructor","this","prop","type","String","default","Number","Boolean","Array","validator","trigger","includes","VaDropdown","mixins","StatefulMixin","anchorWidthStyles","width","anchorWidth","maxWidth","classComputed","$props","disabled","showContent","valueComputed","handlePopperInstance","popperInstance","removePopper","updateAnchorWidth","nextTick","initPopper","handleClick","emitName","toClose","$emit","hide","onDropdownContentClick","closeOnContentClick","onClickOutside","closeOnClickOutside","onAnchorClick","closeOnAnchorClick","onMouseOver","hoverOverDebounceLoader","run","hoverOutDebounceLoader","reset","onMouseOut","isContentHoverable","registerClickOutsideListener","document","addEventListener","event","handleDocumentClick","unregisterClickOutsideListener","removeEventListener","el","target","clickedElements","push","parentNode","$refs","anchor","contentWrapper","keepAnchorWidth","offsetWidth","forceUpdate","options","placement","position","modifiers","onFirstUpdate","offset","name","isArray","anchorSelector","querySelector","createPopper","destroy","created","watch","DebounceLoader","async","hoverOverTimeout","hoverOutTimeout","$isServer","mounted","beforeUnmount","Options","emits","_createElementBlock","class","_ctx","_createElementVNode","onMouseover","onMouseout","onClick","onKeyup","ref","_renderSlot","n","_createBlock","to","style","defineComponent","props","noPadding","g"],"sources":["../../src/components/va-dropdown/VaDropdown.vue","../../src/components/va-dropdown/VaDropdown.vue?vue&type=template&id=6d4e48a8&lang.js","../../src/components/va-dropdown/VaDropdownContent/VaDropdownContent.vue","../../src/components/va-dropdown/VaDropdownContent/VaDropdownContent.vue?vue&type=template&id=4b360faf&lang.js"],"sourcesContent":["<template>\n  <div\n    class=\"va-dropdown\"\n    :class=\"classComputed\"\n  >\n    <div\n      class=\"va-dropdown__anchor\"\n      @mouseover=\"onMouseOver()\"\n      @mouseout=\"onMouseOut()\"\n      @click=\"onAnchorClick()\"\n      @keyup.enter.stop.prevent=\"onAnchorClick()\"\n      ref=\"anchor\"\n    >\n      <slot name=\"anchor\" />\n    </div>\n    <template v-if=\"showContent\">\n      <teleport :to=\"attachElement\" :disabled=\"disableAttachment\">\n        <div\n          class=\"va-dropdown__content-wrapper\"\n          @mouseover=\"$props.isContentHoverable && onMouseOver()\"\n          @mouseout=\"onMouseOut()\"\n          @click.stop=\"onDropdownContentClick()\"\n          ref=\"contentWrapper\"\n        >\n          <div :style=\"$props.keepAnchorWidth ? anchorWidthStyles : ''\">\n            <slot />\n          </div>\n        </div>\n      </teleport>\n    </template>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { watch, nextTick } from 'vue'\nimport { Vue, Options, prop, mixins } from 'vue-class-component'\nimport { DebounceLoader } from 'asva-executors'\nimport { createPopper, Instance } from '@popperjs/core'\nimport { StatefulMixin } from '../../mixins/StatefulMixin/StatefulMixin'\n\ntype PopperInstance = Instance | null\ntype ClickType = 'anchor-click' | 'dropdown-content-click' | 'click-outside'\n\nclass DropdownProps {\n  debugId = prop<string>({ type: String, default: '' })\n  position = prop<string>({ type: String, default: '' })\n  hoverOverTimeout = prop<number>({ type: Number, default: 30 })\n  hoverOutTimeout = prop<number>({ type: Number, default: 200 })\n  modelValue = prop<boolean>({ type: Boolean, default: false })\n  disabled = prop<boolean>({ type: Boolean })\n  attachElement = prop<string>({ type: String, default: 'body' })\n  disableAttachment = prop<boolean>({ type: Boolean })\n  // Means dropdown width should be the same as anchor's width.\n  keepAnchorWidth = prop<boolean>({ type: Boolean })\n  anchorSelector = prop<string>({ type: String, default: '' })\n  closeOnContentClick = prop<boolean>({ type: Boolean, default: true })\n  closeOnClickOutside = prop<boolean>({ type: Boolean, default: true })\n  closeOnAnchorClick = prop<boolean>({ type: Boolean, default: true })\n  isContentHoverable = prop<boolean>({ type: Boolean, default: true })\n  offset = prop<number | number[]>({ type: [Array, Number], default: () => [] })\n  trigger = prop<string>({\n    type: String,\n    default: 'click',\n    validator: (trigger: string) => ['click', 'hover', 'none'].includes(trigger),\n  })\n  stateful = prop<boolean>({ type: Boolean, default: true })\n}\n\nconst DropdownPropsMixin = Vue.with(DropdownProps)\n\n@Options({\n  name: 'VaDropdown',\n  emits: ['update:modelValue', 'anchor-click', 'click-outside', 'dropdown-content-click'],\n})\nexport default class VaDropdown extends mixins(\n  StatefulMixin,\n  DropdownPropsMixin,\n) {\n  popperInstance: PopperInstance = null\n  anchorWidth = 0\n  hoverOverDebounceLoader!: DebounceLoader\n  hoverOutDebounceLoader!: DebounceLoader\n\n  get anchorWidthStyles (): { width: string; maxWidth: string } {\n    return {\n      width: this.anchorWidth + 'px',\n      maxWidth: this.anchorWidth + 'px',\n    }\n  }\n\n  get classComputed () {\n    return {\n      'va-dropdown--disabled': this.$props.disabled,\n    }\n  }\n\n  get showContent (): boolean {\n    return this.valueComputed\n  }\n\n  handlePopperInstance (): void {\n    if (this.popperInstance) {\n      this.removePopper()\n    }\n\n    if (!this.showContent) {\n      return\n    }\n\n    this.updateAnchorWidth()\n\n    nextTick(() => {\n      this.initPopper()\n    })\n  }\n\n  handleClick (emitName: ClickType, toClose: boolean): void {\n    this.$emit(emitName)\n    if (toClose) {\n      this.hide()\n    }\n  }\n\n  onDropdownContentClick (): void {\n    this.handleClick('dropdown-content-click', this.closeOnContentClick)\n  }\n\n  onClickOutside (): void {\n    this.handleClick('click-outside', this.closeOnClickOutside)\n  }\n\n  onAnchorClick (): void {\n    if (this.$props.disabled) {\n      return\n    }\n    if (this.$props.trigger === 'click') {\n      if (this.valueComputed) {\n        this.handleClick('anchor-click', this.closeOnAnchorClick)\n        return\n      }\n      this.valueComputed = true\n    }\n    this.$emit('anchor-click')\n  }\n\n  // Kinda complex logic here.\n  // We want to achieve 2 things:\n  // * Fast mouse-over shouldn't trigger dropdown.\n  // * Dropdown shouldn't close when you move mouse from anchor to content (even with offset).\n  onMouseOver (): void {\n    if (this.$props.disabled || this.$props.trigger !== 'hover') {\n      return\n    }\n    if (!this.valueComputed) {\n      this.hoverOverDebounceLoader.run()\n    }\n    this.hoverOutDebounceLoader.reset()\n  }\n\n  onMouseOut (): void {\n    if (this.$props.trigger !== 'hover') {\n      return\n    }\n    if (this.isContentHoverable) {\n      this.hoverOutDebounceLoader.run()\n    } else {\n      this.valueComputed = false\n    }\n    this.hoverOverDebounceLoader.reset()\n  }\n\n  registerClickOutsideListener (): void {\n    document.addEventListener('click', event => this.handleDocumentClick(event), false)\n  }\n\n  unregisterClickOutsideListener (): void {\n    document.removeEventListener('click', event => this.handleDocumentClick(event), false)\n  }\n\n  handleDocumentClick (event: any): void {\n    let el = event.target\n    const clickedElements = [] // Array because dropdowns can be nested.\n    // TODO Make DOM walk-over global, so that each dropdown doesn't have to do it.\n    while (el) {\n      clickedElements.push(el)\n      el = el.parentNode\n    }\n    const isCurrentDropdownClicked = clickedElements.includes(this.$refs.anchor) || clickedElements.includes(this.$refs.contentWrapper)\n    if (isCurrentDropdownClicked) {\n      return\n    }\n    if (this.showContent) {\n      this.onClickOutside()\n    }\n  }\n\n  updateAnchorWidth (): void {\n    if (this.keepAnchorWidth) {\n      this.anchorWidth = (this as any).$refs.anchor.offsetWidth\n    }\n    if (this.popperInstance) {\n      this.popperInstance.forceUpdate()\n    }\n  }\n\n  /** @public */\n  hide (): void {\n    this.valueComputed = false\n  }\n\n  initPopper (): void {\n    const options: any = {\n      placement: this.position || 'bottom',\n      modifiers: [],\n      // strategy: this.fixed ? 'fixed' : undefined,\n      onFirstUpdate: () => {\n        this.valueComputed = true\n      },\n    }\n\n    if (this.offset) {\n      options.modifiers.push({\n        name: 'offset',\n        options: {\n          offset: Array.isArray(this.offset) ? this.offset : [this.offset],\n        },\n      })\n      // options.modifiers.keepTogether = { enabled: false }\n      // options.modifiers.arrow = { enabled: false }\n    }\n\n    const anchor = this.$props.anchorSelector\n      ? (this.$refs.anchor as Element).querySelector(this.$props.anchorSelector) || this.$refs.anchor\n      : this.$refs.anchor\n\n    this.popperInstance = createPopper(\n      anchor as Element,\n      this.$refs.contentWrapper as HTMLElement,\n      options,\n    )\n  }\n\n  removePopper (): void {\n    this.valueComputed = false\n\n    if (!this.popperInstance) {\n      return\n    }\n    this.popperInstance.destroy()\n    this.popperInstance = null\n  }\n\n  created (): void {\n    watch(() => this.showContent, () => {\n      this.handlePopperInstance()\n    })\n    this.hoverOverDebounceLoader = new DebounceLoader(\n      async () => {\n        this.valueComputed = true\n      },\n      this.hoverOverTimeout,\n    )\n    this.hoverOutDebounceLoader = new DebounceLoader(\n      async () => {\n        this.valueComputed = false\n      },\n      this.hoverOutTimeout,\n    )\n    // nuxt fix\n    if ((this as any).$isServer) {\n      return\n    }\n    this.registerClickOutsideListener()\n  }\n\n  mounted (): void {\n    this.handlePopperInstance()\n  }\n\n  beforeUnmount (): void {\n    this.unregisterClickOutsideListener()\n    this.removePopper()\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import '../../styles/resources';\n@import 'variables';\n\n.va-dropdown {\n  /* Solved the alignment problem (if we try to align inline and block elements) */\n  line-height: var(--va-dropdown-line-height);\n  font-family: var(--va-font-family);\n\n  &--disabled {\n    @include va-disabled;\n  }\n\n  &__content-wrapper {\n    /* overflow: hidden; */\n    z-index: var(--va-dropdown-content-wrapper-z-index);\n  }\n}\n</style>\n","<template>\n  <div\n    class=\"va-dropdown\"\n    :class=\"classComputed\"\n  >\n    <div\n      class=\"va-dropdown__anchor\"\n      @mouseover=\"onMouseOver()\"\n      @mouseout=\"onMouseOut()\"\n      @click=\"onAnchorClick()\"\n      @keyup.enter.stop.prevent=\"onAnchorClick()\"\n      ref=\"anchor\"\n    >\n      <slot name=\"anchor\" />\n    </div>\n    <template v-if=\"showContent\">\n      <teleport :to=\"attachElement\" :disabled=\"disableAttachment\">\n        <div\n          class=\"va-dropdown__content-wrapper\"\n          @mouseover=\"$props.isContentHoverable && onMouseOver()\"\n          @mouseout=\"onMouseOut()\"\n          @click.stop=\"onDropdownContentClick()\"\n          ref=\"contentWrapper\"\n        >\n          <div :style=\"$props.keepAnchorWidth ? anchorWidthStyles : ''\">\n            <slot />\n          </div>\n        </div>\n      </teleport>\n    </template>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { watch, nextTick } from 'vue'\nimport { Vue, Options, prop, mixins } from 'vue-class-component'\nimport { DebounceLoader } from 'asva-executors'\nimport { createPopper, Instance } from '@popperjs/core'\nimport { StatefulMixin } from '../../mixins/StatefulMixin/StatefulMixin'\n\ntype PopperInstance = Instance | null\ntype ClickType = 'anchor-click' | 'dropdown-content-click' | 'click-outside'\n\nclass DropdownProps {\n  debugId = prop<string>({ type: String, default: '' })\n  position = prop<string>({ type: String, default: '' })\n  hoverOverTimeout = prop<number>({ type: Number, default: 30 })\n  hoverOutTimeout = prop<number>({ type: Number, default: 200 })\n  modelValue = prop<boolean>({ type: Boolean, default: false })\n  disabled = prop<boolean>({ type: Boolean })\n  attachElement = prop<string>({ type: String, default: 'body' })\n  disableAttachment = prop<boolean>({ type: Boolean })\n  // Means dropdown width should be the same as anchor's width.\n  keepAnchorWidth = prop<boolean>({ type: Boolean })\n  anchorSelector = prop<string>({ type: String, default: '' })\n  closeOnContentClick = prop<boolean>({ type: Boolean, default: true })\n  closeOnClickOutside = prop<boolean>({ type: Boolean, default: true })\n  closeOnAnchorClick = prop<boolean>({ type: Boolean, default: true })\n  isContentHoverable = prop<boolean>({ type: Boolean, default: true })\n  offset = prop<number | number[]>({ type: [Array, Number], default: () => [] })\n  trigger = prop<string>({\n    type: String,\n    default: 'click',\n    validator: (trigger: string) => ['click', 'hover', 'none'].includes(trigger),\n  })\n  stateful = prop<boolean>({ type: Boolean, default: true })\n}\n\nconst DropdownPropsMixin = Vue.with(DropdownProps)\n\n@Options({\n  name: 'VaDropdown',\n  emits: ['update:modelValue', 'anchor-click', 'click-outside', 'dropdown-content-click'],\n})\nexport default class VaDropdown extends mixins(\n  StatefulMixin,\n  DropdownPropsMixin,\n) {\n  popperInstance: PopperInstance = null\n  anchorWidth = 0\n  hoverOverDebounceLoader!: DebounceLoader\n  hoverOutDebounceLoader!: DebounceLoader\n\n  get anchorWidthStyles (): { width: string; maxWidth: string } {\n    return {\n      width: this.anchorWidth + 'px',\n      maxWidth: this.anchorWidth + 'px',\n    }\n  }\n\n  get classComputed () {\n    return {\n      'va-dropdown--disabled': this.$props.disabled,\n    }\n  }\n\n  get showContent (): boolean {\n    return this.valueComputed\n  }\n\n  handlePopperInstance (): void {\n    if (this.popperInstance) {\n      this.removePopper()\n    }\n\n    if (!this.showContent) {\n      return\n    }\n\n    this.updateAnchorWidth()\n\n    nextTick(() => {\n      this.initPopper()\n    })\n  }\n\n  handleClick (emitName: ClickType, toClose: boolean): void {\n    this.$emit(emitName)\n    if (toClose) {\n      this.hide()\n    }\n  }\n\n  onDropdownContentClick (): void {\n    this.handleClick('dropdown-content-click', this.closeOnContentClick)\n  }\n\n  onClickOutside (): void {\n    this.handleClick('click-outside', this.closeOnClickOutside)\n  }\n\n  onAnchorClick (): void {\n    if (this.$props.disabled) {\n      return\n    }\n    if (this.$props.trigger === 'click') {\n      if (this.valueComputed) {\n        this.handleClick('anchor-click', this.closeOnAnchorClick)\n        return\n      }\n      this.valueComputed = true\n    }\n    this.$emit('anchor-click')\n  }\n\n  // Kinda complex logic here.\n  // We want to achieve 2 things:\n  // * Fast mouse-over shouldn't trigger dropdown.\n  // * Dropdown shouldn't close when you move mouse from anchor to content (even with offset).\n  onMouseOver (): void {\n    if (this.$props.disabled || this.$props.trigger !== 'hover') {\n      return\n    }\n    if (!this.valueComputed) {\n      this.hoverOverDebounceLoader.run()\n    }\n    this.hoverOutDebounceLoader.reset()\n  }\n\n  onMouseOut (): void {\n    if (this.$props.trigger !== 'hover') {\n      return\n    }\n    if (this.isContentHoverable) {\n      this.hoverOutDebounceLoader.run()\n    } else {\n      this.valueComputed = false\n    }\n    this.hoverOverDebounceLoader.reset()\n  }\n\n  registerClickOutsideListener (): void {\n    document.addEventListener('click', event => this.handleDocumentClick(event), false)\n  }\n\n  unregisterClickOutsideListener (): void {\n    document.removeEventListener('click', event => this.handleDocumentClick(event), false)\n  }\n\n  handleDocumentClick (event: any): void {\n    let el = event.target\n    const clickedElements = [] // Array because dropdowns can be nested.\n    // TODO Make DOM walk-over global, so that each dropdown doesn't have to do it.\n    while (el) {\n      clickedElements.push(el)\n      el = el.parentNode\n    }\n    const isCurrentDropdownClicked = clickedElements.includes(this.$refs.anchor) || clickedElements.includes(this.$refs.contentWrapper)\n    if (isCurrentDropdownClicked) {\n      return\n    }\n    if (this.showContent) {\n      this.onClickOutside()\n    }\n  }\n\n  updateAnchorWidth (): void {\n    if (this.keepAnchorWidth) {\n      this.anchorWidth = (this as any).$refs.anchor.offsetWidth\n    }\n    if (this.popperInstance) {\n      this.popperInstance.forceUpdate()\n    }\n  }\n\n  /** @public */\n  hide (): void {\n    this.valueComputed = false\n  }\n\n  initPopper (): void {\n    const options: any = {\n      placement: this.position || 'bottom',\n      modifiers: [],\n      // strategy: this.fixed ? 'fixed' : undefined,\n      onFirstUpdate: () => {\n        this.valueComputed = true\n      },\n    }\n\n    if (this.offset) {\n      options.modifiers.push({\n        name: 'offset',\n        options: {\n          offset: Array.isArray(this.offset) ? this.offset : [this.offset],\n        },\n      })\n      // options.modifiers.keepTogether = { enabled: false }\n      // options.modifiers.arrow = { enabled: false }\n    }\n\n    const anchor = this.$props.anchorSelector\n      ? (this.$refs.anchor as Element).querySelector(this.$props.anchorSelector) || this.$refs.anchor\n      : this.$refs.anchor\n\n    this.popperInstance = createPopper(\n      anchor as Element,\n      this.$refs.contentWrapper as HTMLElement,\n      options,\n    )\n  }\n\n  removePopper (): void {\n    this.valueComputed = false\n\n    if (!this.popperInstance) {\n      return\n    }\n    this.popperInstance.destroy()\n    this.popperInstance = null\n  }\n\n  created (): void {\n    watch(() => this.showContent, () => {\n      this.handlePopperInstance()\n    })\n    this.hoverOverDebounceLoader = new DebounceLoader(\n      async () => {\n        this.valueComputed = true\n      },\n      this.hoverOverTimeout,\n    )\n    this.hoverOutDebounceLoader = new DebounceLoader(\n      async () => {\n        this.valueComputed = false\n      },\n      this.hoverOutTimeout,\n    )\n    // nuxt fix\n    if ((this as any).$isServer) {\n      return\n    }\n    this.registerClickOutsideListener()\n  }\n\n  mounted (): void {\n    this.handlePopperInstance()\n  }\n\n  beforeUnmount (): void {\n    this.unregisterClickOutsideListener()\n    this.removePopper()\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import '../../styles/resources';\n@import 'variables';\n\n.va-dropdown {\n  /* Solved the alignment problem (if we try to align inline and block elements) */\n  line-height: var(--va-dropdown-line-height);\n  font-family: var(--va-font-family);\n\n  &--disabled {\n    @include va-disabled;\n  }\n\n  &__content-wrapper {\n    /* overflow: hidden; */\n    z-index: var(--va-dropdown-content-wrapper-z-index);\n  }\n}\n</style>\n","<template>\n  <div class=\"va-dropdown__content\" :style=\"noPadding && { padding: 0 }\">\n    <slot />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\n\nexport default defineComponent({\n  name: 'VaDropdownContent',\n  props: {\n    noPadding: { type: Boolean, default: false },\n  },\n})\n</script>\n\n<style lang=\"scss\">\n  @import \"variables\";\n\n  .va-dropdown {\n    &__content {\n      background: var(--va-dropdown-content-background);\n      padding: var(--va-dropdown-content-padding);\n      box-shadow: var(--va-dropdown-content-box-shadow);\n      border-radius: var(--va-dropdown-content-border-radius);\n      font-family: var(--va-font-family);\n    }\n  }\n</style>\n","<template>\n  <div class=\"va-dropdown__content\" :style=\"noPadding && { padding: 0 }\">\n    <slot />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\n\nexport default defineComponent({\n  name: 'VaDropdownContent',\n  props: {\n    noPadding: { type: Boolean, default: false },\n  },\n})\n</script>\n\n<style lang=\"scss\">\n  @import \"variables\";\n\n  .va-dropdown {\n    &__content {\n      background: var(--va-dropdown-content-background);\n      padding: var(--va-dropdown-content-padding);\n      box-shadow: var(--va-dropdown-content-box-shadow);\n      border-radius: var(--va-dropdown-content-border-radius);\n      font-family: var(--va-font-family);\n    }\n  }\n</style>\n"]},"metadata":{},"sourceType":"module"}