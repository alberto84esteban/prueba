{"ast":null,"code":"import { ref as o } from \"vue\";\n\nfunction useKeyboardOnlyFocus() {\n  const e = o(!1);\n  let u = !1;\n  const s = {\n    mousedown: () => {\n      u = !0;\n    },\n    focus: () => {\n      u || (e.value = !0), u = !1;\n    },\n    blur: () => {\n      e.value = !1, u = !1;\n    }\n  };\n  return {\n    hasKeyboardFocus: e,\n    keyboardFocusListeners: s\n  };\n}\n\nexport { useKeyboardOnlyFocus as u };","map":{"version":3,"mappings":";;SAIwBA;AACtB,QAAMC,IAAmBC,GAAI,CAAJA,CAAzB;AACA,MAAIC,KAAoB,CAAxB;AAEA,QAAMC,IAAyB;AAC7BC,eAAW;AACTF,WAAoB,CAApBA;AAAoB,KAFO;AAK7BG,WAAO;AACAH,YACHF,EAAiBM,KAAjBN,GAAiBM,CAAQ,CADtBJ,GAILA,KAAoB,CAJfA;AAIe,KAVO;AAa7BK,UAAM;AACJP,QAAiBM,KAAjBN,GAAiBM,CAAQ,CAAzBN,EACAE,KAAoB,CADpBF;AACoB;AAfO,GAA/B;AAmBA,SAAO;AACLA,uBADK;AAELG;AAFK,GAAP;AAEEA;;AAAAA","names":["useKeyboardOnlyFocus","hasKeyboardFocus","ref","previouslyClicked","keyboardFocusListeners","mousedown","focus","value","blur"],"sources":["../../src/composables/useKeyboardOnlyFocus.ts"],"sourcesContent":["// it's another implementation of KeyboardOnlyFocusMixin's functionality but for use with the Composition API\n\nimport { ref } from 'vue'\n\nexport default function useKeyboardOnlyFocus () {\n  const hasKeyboardFocus = ref(false)\n  let previouslyClicked = false\n\n  const keyboardFocusListeners = {\n    mousedown: () => {\n      previouslyClicked = true\n    },\n\n    focus: () => {\n      if (!previouslyClicked) {\n        hasKeyboardFocus.value = true\n      }\n\n      previouslyClicked = false\n    },\n\n    blur: () => {\n      hasKeyboardFocus.value = false\n      previouslyClicked = false\n    },\n  }\n\n  return {\n    hasKeyboardFocus,\n    keyboardFocusListeners,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}