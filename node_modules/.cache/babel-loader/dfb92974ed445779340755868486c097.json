{"ast":null,"code":"const o = {\n  loading: {\n    type: Boolean,\n    default: !1\n  }\n};\nexport { o as u };","map":{"version":3,"mappings":"MAaaA,IAAkB;AAC7BC,WAAS;AAAEC,UAAMC,OAAR;AAAsCC,cAAS;AAA/C;AADoB;AAC2B","names":["useLoadingProps","loading","type","Boolean","default"],"sources":["../../src/composables/useLoading.ts"],"sourcesContent":["import { PropType } from 'vue'\n\nexport type LoadingProps = {\n  loading: boolean\n  [prop: string]: unknown\n}\n\n/**\n * You could add these props to any component by destructuring them inside props option.\n * @example\n * props: { ...useLoadingProps, componentsOwnProp, etc. }\n * It's better to add props at the beginning, to make sure that Component own props will be used instead in case of collision\n */\nexport const useLoadingProps = {\n  loading: { type: Boolean as PropType<boolean>, default: false },\n}\n\nexport const useLoading = () => {\n  const hasLoading = true\n\n  return {\n    hasLoading,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}