{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport { ref as e, computed as a, isRef as t, unref as l, watch as r, defineComponent as o, openBlock as d, createElementBlock as n, normalizeClass as i, withKeys as c, withModifiers as s, renderSlot as u, toRefs as v, resolveComponent as p, mergeProps as y, Fragment as k, renderList as h, createTextVNode as m, toDisplayString as f, createCommentVNode as g, createVNode as w, withCtx as V, createElementVNode as b, normalizeProps as _, guardReactiveProps as x, pushScopeId as C, popScopeId as D, onMounted as M, createBlock as P, nextTick as I, normalizeStyle as S, createSlots as A } from \"vue\";\nimport { u as $, b as Y, a as z } from \"./useStateful.js\";\nimport { u as U } from \"./color-config.js\";\nimport { f as T, e as B, a as F } from \"./child-props.js\";\nimport { s as N } from \"./style-inject.es.js\";\nimport O from \"./index8.js\";\n\nconst isRange = e => void 0 !== e.start && void 0 !== e.end,\n      isSingleDate = e => e instanceof Date,\n      isDates = e => Array.isArray(e),\n      throwIncorrectModelValueError = (e, a) => {\n  throw Error(`Incorrect modelValue for mode ${a}. Got ${JSON.stringify(e)}`);\n},\n      sortRange = e => e.start && e.end && e.start > e.end ? {\n  start: e.end,\n  end: e.start\n} : e,\n      useDatePickerModelValue = (e, a, t) => ({\n  updateModelValue: l => {\n    if (!e.modelValue) return void a(\"update:modelValue\", ((e, a) => {\n      if (\"single\" === a) return e;\n      if (\"range\" === a) return {\n        start: e,\n        end: null\n      };\n      if (\"multiple\" === a) return [e];\n      if (\"auto\" === a) return e;\n      throw new Error(\"Unknown mode\");\n    })(l, e.mode));\n    const r = \"auto\" === e.mode ? (o = e.modelValue, isSingleDate(o) ? \"single\" : isRange(o) ? \"range\" : isDates(o) ? \"multiple\" : throwIncorrectModelValueError(o, \"auto\")) : e.mode;\n    var o;\n\n    if (\"single\" === r) {\n      if (!isSingleDate(e.modelValue)) return throwIncorrectModelValueError(e.modelValue, r);\n      a(\"update:modelValue\", l);\n    } else if (\"range\" === r) {\n      if (!isRange(e.modelValue)) return throwIncorrectModelValueError(e.modelValue, r);\n      if (e.modelValue.end && t(e.modelValue.end, l)) return a(\"update:modelValue\", {\n        start: e.modelValue.start,\n        end: null\n      });\n      if (e.modelValue.start && t(e.modelValue.start, l)) return a(\"update:modelValue\", {\n        start: null,\n        end: e.modelValue.end\n      });\n      if (null === e.modelValue.end) return a(\"update:modelValue\", sortRange({\n        start: e.modelValue.start,\n        end: l\n      }));\n      if (null === e.modelValue.start) return a(\"update:modelValue\", sortRange({\n        end: e.modelValue.end,\n        start: l\n      }));\n      a(\"update:modelValue\", {\n        start: l,\n        end: null\n      });\n    } else if (\"multiple\" === r) {\n      if (!isDates(e.modelValue)) return throwIncorrectModelValueError(e.modelValue, r);\n      const o = !!e.modelValue.find(e => t(e, l));\n      a(\"update:modelValue\", o ? e.modelValue.filter(e => !t(e, l)) : [...e.modelValue, l].sort((e, a) => e.getTime() - a.getTime()));\n    }\n  }\n}),\n      useView = (t, l, r) => {\n  const o = {\n    type: \"day\",\n    year: new Date().getFullYear(),\n    month: new Date().getMonth(),\n    ...r\n  },\n        d = e(o),\n        n = a({\n    get: () => ({ ...d.value,\n      ...t.view\n    }),\n\n    set(e) {\n      d.value = e, l(\"update:view\", e);\n    }\n\n  });\n  return {\n    syncView: n,\n    next: () => {\n      var e;\n      \"day\" === n.value.type ? n.value = 11 === (e = n.value).month ? { ...e,\n        year: e.year + 1,\n        month: 0\n      } : { ...e,\n        month: e.month + 1\n      } : \"month\" === n.value.type && (n.value = { ...n.value,\n        year: n.value.year + 1\n      });\n    },\n    prev: () => {\n      var e;\n      \"day\" === n.value.type ? n.value = 0 === (e = n.value).month ? { ...e,\n        year: e.year - 1,\n        month: 11\n      } : { ...e,\n        month: e.month - 1\n      } : \"month\" === n.value.type && (n.value = { ...n.value,\n        year: n.value.year - 1\n      });\n    }\n  };\n},\n      getMonthDaysCount = (e, a) => new Date(e, a + 1, 0).getDate(),\n      getNumbersArray = e => Array.from(Array(e).keys()).map(e => e + 1),\n      useVaDatePickerCalendar = (e, t) => {\n  const l = a(() => {\n    return r = e.value.year, o = e.value.month, a = new Date(r, o, 1).getDay(), t && \"Monday\" === (null === (l = t.firstWeekday) || void 0 === l ? void 0 : l.value) ? 0 === a ? 6 : a - 1 : a;\n    var a, l, r, o;\n  }),\n        getPreviousDates = () => {\n    if (0 === l.value) return [];\n    const a = getMonthDaysCount(e.value.year, e.value.month - 1);\n    return getNumbersArray(a).slice(-l.value).map(a => new Date(e.value.year, e.value.month - 1, a));\n  },\n        r = a(() => [...getPreviousDates(), ...getNumbersArray(getMonthDaysCount(e.value.year, e.value.month)).map(a => new Date(e.value.year, e.value.month, a))]),\n        o = a(() => r.value.length);\n\n  return {\n    calendarDates: a(() => {\n      const a = r.value,\n            t = 42 - a.length,\n            l = getMonthDaysCount(e.value.year, e.value.month + 1),\n            o = getNumbersArray(l);\n      return [...a, ...o.slice(0, t).map(a => new Date(e.value.year, e.value.month + 1, a))];\n    }),\n    currentMonthStartIndex: l,\n    currentMonthEndIndex: o\n  };\n};\n\nfunction safeUnref(e) {\n  return t(e) ? l(e) : e;\n}\n\nfunction isUndefined(e) {\n  return void 0 === e;\n}\n\nconst useGridKeyboardNavigation = ({\n  rowSize: a,\n  start: t,\n  end: l,\n  onSelected: r,\n  onFocusIndex: o\n}) => {\n  const d = e(-1);\n  let n = !1;\n  const i = {\n    onFocus: () => {\n      if (n) return;\n      n = !1;\n      const e = void 0 === o ? safeUnref(t) || 0 : safeUnref(o);\n      d.value = e;\n    },\n    onKeydown: e => {\n      if ([\"ArrowRight\", \"ArrowLeft\", \"ArrowDown\", \"ArrowUp\", \"Enter\", \"Space\"].includes(e.key) && e.preventDefault(), \"Enter\" !== e.key && \"Space\" !== e.key) \"ArrowRight\" === e.key && (d.value += 1), \"ArrowLeft\" === e.key && (d.value -= 1), \"ArrowDown\" === e.key && (d.value += a), \"ArrowUp\" === e.key && (d.value -= a), !isUndefined(t) && d.value < safeUnref(t) && (d.value = safeUnref(t)), !isUndefined(l) && d.value > safeUnref(l) - 1 && (d.value = safeUnref(l) - 1);else {\n        if (void 0 === r) return;\n        r(d.value);\n      }\n    },\n    onBlur: () => {\n      n = !1, d.value = -1;\n    },\n    onMousedown: () => {\n      n = !0;\n    },\n    tabindex: 0\n  };\n  return {\n    focusedCellIndex: d,\n    containerAttributes: i\n  };\n},\n      isDatesDayEqual = (e, a) => (null == e ? void 0 : e.toDateString()) === (null == a ? void 0 : a.toDateString()),\n      isDatesMonthEqual = (e, a) => (null == e ? void 0 : e.getFullYear()) === (null == a ? void 0 : a.getFullYear()) && (null == e ? void 0 : e.getMonth()) === (null == a ? void 0 : a.getMonth()),\n      isDatesYearEqual = (e, a) => (null == e ? void 0 : e.getFullYear()) === (null == a ? void 0 : a.getFullYear()),\n      useDatePicker = (t, l, o, d) => {\n  const n = (e => ({\n    month: isDatesMonthEqual,\n    day: isDatesDayEqual,\n    year: isDatesYearEqual\n  })[e])(t),\n        i = e(0),\n        c = a(() => l.value[i.value]),\n        {\n    updateModelValue: s\n  } = useDatePickerModelValue(o, d, n);\n\n  return r(c, e => {\n    d(`hover:${t}`, e);\n  }), {\n    hoveredIndex: i,\n    hoveredValue: c,\n    onClick: e => {\n      s(e), d(`click:${t}`, e);\n    },\n    isToday: e => {\n      const a = new Date();\n      return n(a, e);\n    },\n    isSelected: e => !!o.modelValue && (isSingleDate(o.modelValue) ? n(o.modelValue, e) : isDates(o.modelValue) ? !!o.modelValue.find(a => n(a, e)) : !!isRange(o.modelValue) && (n(o.modelValue.start, e) || n(o.modelValue.end, e))),\n    isInRange: e => {\n      if (!o.modelValue) return !1;\n      if (!isRange(o.modelValue)) return !1;\n      if (o.modelValue.start && o.modelValue.end) return o.modelValue.start < e && o.modelValue.end > e;\n      const a = o.modelValue.start || o.modelValue.end;\n      return !!a && !!c.value && (a < e ? c.value >= e : c.value <= e);\n    }\n  };\n};\n\nvar R = o({\n  name: \"VaDatePickerCell\",\n  props: {\n    otherMonth: {\n      type: Boolean,\n      default: !1\n    },\n    today: {\n      type: Boolean,\n      default: !1\n    },\n    inRange: {\n      type: Boolean,\n      default: !1\n    },\n    disabled: {\n      type: Boolean,\n      default: !1\n    },\n    selected: {\n      type: Boolean,\n      default: !1\n    },\n    weekend: {\n      type: Boolean,\n      default: !1\n    },\n    hidden: {\n      type: Boolean,\n      default: !1\n    },\n    focused: {\n      type: Boolean,\n      default: !1\n    },\n    highlightWeekend: {\n      type: Boolean,\n      default: !1\n    },\n    highlightToday: {\n      type: Boolean,\n      default: !1\n    },\n    readonly: {\n      type: Boolean,\n      default: !1\n    }\n  },\n  emits: [\"click\"],\n  setup: (e, {\n    emit: a\n  }) => ({\n    onClick: () => {\n      e.disabled || a(\"click\");\n    }\n  })\n});\nconst j = {\n  key: 0,\n  class: \"va-date-picker-cell va-date-picker-cell_clear\"\n};\nN('.va-date-picker-cell{color:var(--va-date-picker-text-color);cursor:pointer;font-size:12px;font-style:normal;font-weight:600;line-height:var(--va-date-picker-cell-size);min-height:var(--va-date-picker-cell-size);min-width:var(--va-date-picker-cell-size);position:relative;text-align:center;z-index:1}.va-date-picker-cell,.va-date-picker-cell:after,.va-date-picker-cell:before{border-radius:var(--va-date-picker-cell-radius);box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.va-date-picker-cell:after,.va-date-picker-cell:before{content:\"\";height:100%;left:0;position:absolute;width:100%;z-index:-1}.va-date-picker-cell_clear{cursor:default;opacity:0}.va-date-picker-cell_highlighted-weekend{color:var(--va-date-picker-weekends-color)}.va-date-picker-cell_selected{background-color:var(--va-date-picker-selected-background);color:var(--va-date-picker-selected-text)}.va-date-picker-cell_in-range:before{border:2px solid var(--va-date-picker-color);opacity:.5}.va-date-picker-cell_today{color:var(--va-date-picker-today-text)}.va-date-picker-cell_today:after{background-color:var(--va-date-picker-today-background);opacity:var(--va-date-picker-today-background-opacity)}.va-date-picker-cell_selected.va-date-picker-cell_today:before{border:2px solid var(--va-date-picker-selected-text);opacity:1}.va-date-picker-cell_selected.va-date-picker-cell_today:after{opacity:1}.va-date-picker-cell_other-month{opacity:.5}.va-date-picker-cell:hover:before,.va-date-picker-cell_focused:before,.va-date-picker-cell_focused:hover:before{border:2px solid var(--va-date-picker-focused-border-color);opacity:.8}.va-date-picker-cell:hover.va-date-picker-cell_selected:before,.va-date-picker-cell_focused.va-date-picker-cell_selected:before,.va-date-picker-cell_focused:hover.va-date-picker-cell_selected:before{border:2px solid var(--va-date-picker-focused-selected-border-color);height:calc(100% - 4px);opacity:.8;padding:2px;transform:translateY(2px) translateX(2px);width:calc(100% - 4px)}.va-date-picker-cell:hover.va-date-picker-cell_selected.va-date-picker-cell_today:after,.va-date-picker-cell_focused.va-date-picker-cell_selected.va-date-picker-cell_today:after,.va-date-picker-cell_focused:hover.va-date-picker-cell_selected.va-date-picker-cell_today:after{opacity:0}.va-date-picker-cell_disabled{color:var(--va-date-picker-secondary);cursor:default;opacity:.5}.va-date-picker-cell_disabled:after{background:var(--va-date-picker-secondary);border:none;height:2px;left:50%;opacity:.5;top:50%;transform:translate(-50%,-50%);width:50%}.va-date-picker-cell_disabled.va-date-picker-cell_today{color:var(--va-date-picker-today-text)}.va-date-picker-cell_disabled.va-date-picker-cell_today:after{background:var(--va-date-picker-today-text)}.va-date-picker-cell_disabled.va-date-picker-cell_today:before{background-color:var(--va-date-picker-today-background);opacity:var(--va-date-picker-today-background-opacity)}.va-date-picker-cell_readonly{cursor:default}.va-date-picker-cell_readonly:before{display:none}'), R.render = function render$5(e, a, t, l, r, o) {\n  return e.hidden ? (d(), n(\"div\", j)) : (d(), n(\"div\", {\n    key: 1,\n    class: i([\"va-date-picker-cell\", {\n      \"va-date-picker-cell_other-month\": e.otherMonth,\n      \"va-date-picker-cell_today\": e.highlightToday && e.today,\n      \"va-date-picker-cell_in-range\": e.inRange,\n      \"va-date-picker-cell_disabled\": e.disabled,\n      \"va-date-picker-cell_highlighted-weekend\": e.highlightWeekend && e.weekend,\n      \"va-date-picker-cell_selected\": e.selected,\n      \"va-date-picker-cell_focused\": e.focused,\n      \"va-date-picker-cell_readonly\": e.readonly\n    }]),\n    onClick: a[0] || (a[0] = (...a) => e.onClick && e.onClick(...a)),\n    onKeypress: a[1] || (a[1] = c(s((...a) => e.onClick && e.onClick(...a), [\"prevent\", \"stop\"]), [\"space\", \"enter\"]))\n  }, [u(e.$slots, \"default\")], 34));\n}, R.__file = \"src/components/va-date-picker/components/VaDatePickerCell.vue\";\nconst W = B(R, [\"date\", \"selectedValue\", \"focusedDate\", \"focused\"]);\nvar H = o({\n  name: \"VaDayPicker\",\n  components: {\n    VaDatePickerCell: R\n  },\n  props: { ...W,\n    monthNames: {\n      type: Array,\n      required: !0\n    },\n    weekdayNames: {\n      type: Array,\n      required: !0\n    },\n    firstWeekday: {\n      type: String,\n      default: \"Sunday\"\n    },\n    hideWeekDays: {\n      type: Boolean,\n      default: !1\n    },\n    view: {\n      type: Object,\n      default: () => ({\n        type: \"day\"\n      })\n    },\n    modelValue: {\n      type: [Date, Array, Object]\n    },\n    mode: {\n      type: String,\n      default: \"auto\"\n    },\n    showOtherMonths: {\n      type: Boolean,\n      default: !1\n    },\n    allowedDays: {\n      type: Function\n    },\n    weekends: {\n      type: [Function]\n    },\n    highlightWeekend: {\n      type: Boolean,\n      default: !1\n    },\n    highlightToday: {\n      type: Boolean,\n      default: !1\n    },\n    readonly: {\n      type: Boolean,\n      default: !1\n    }\n  },\n  emits: [\"update:modelValue\", \"hover:day\", \"click:day\"],\n\n  setup(e, {\n    emit: t\n  }) {\n    const {\n      firstWeekday: l,\n      weekdayNames: o,\n      view: d\n    } = v(e),\n          n = T(e, W),\n          {\n      calendarDates: i,\n      currentMonthStartIndex: c,\n      currentMonthEndIndex: s\n    } = useVaDatePickerCalendar(d, {\n      firstWeekday: l\n    }),\n          u = a(() => \"Sunday\" === l.value ? o.value : [...o.value.slice(1), o.value[0]]),\n          {\n      hoveredIndex: p,\n      onClick: y,\n      isToday: k,\n      isSelected: h,\n      isInRange: m\n    } = useDatePicker(\"day\", i, e, t),\n          f = a(() => e.showOtherMonths ? 0 : c.value),\n          g = a(() => e.showOtherMonths ? i.value.length : s.value),\n          {\n      focusedCellIndex: w,\n      containerAttributes: V\n    } = useGridKeyboardNavigation({\n      rowSize: 7,\n      start: f,\n      end: g,\n      onSelected: e => y(i.value[e])\n    });\n    r(w, e => {\n      p.value = e;\n    }), r(p, e => {\n      w.value = e;\n    });\n    return {\n      hoveredIndex: p,\n      calendarDates: i,\n      onClick: y,\n      isToday: k,\n      isSelected: h,\n      isInRange: m,\n      isOtherMonth: a => e.view.month !== a.getMonth(),\n      isDateDisabled: a => void 0 !== e.allowedDays && !e.allowedDays(a),\n      isDateWeekend: a => void 0 === e.weekends ? 6 === a.getDay() || 0 === a.getDay() : e.weekends(a),\n      containerAttributes: V,\n      weekdayNamesComputed: u,\n      VaDayPickerCellPropValues: n,\n      focusedCellIndex: w\n    };\n  }\n\n});\nconst E = [\"onMouseenter\"],\n      q = {\n  class: \"va-date-picker-cell__day\"\n};\nN(\".va-day-picker{grid-gap:var(--va-date-picker-cell-gap);display:grid;grid-template-columns:repeat(7,1fr)}.va-day-picker__weekday{color:var(--va-secondary);font-size:9px;font-weight:700;height:var(--va-date-picker-cell-size);line-height:var(--va-date-picker-cell-size);text-align:center}\"), H.render = function render$4(e, a, t, l, r, o) {\n  const i = p(\"va-date-picker-cell\");\n  return d(), n(\"div\", y({\n    class: \"va-day-picker\"\n  }, e.containerAttributes), [e.hideWeekDays ? g(\"v-if\", !0) : (d(!0), n(k, {\n    key: 0\n  }, h(e.weekdayNamesComputed, a => (d(), n(\"div\", {\n    key: a,\n    class: \"va-day-picker__weekday\"\n  }, [u(e.$slots, \"weekday\", {}, () => [m(f(a), 1)])]))), 128)), (d(!0), n(k, null, h(e.calendarDates, (t, l) => (d(), n(\"div\", {\n    class: \"va-day-picker__calendar__day-wrapper\",\n    key: l,\n    onMouseenter: a => e.hoveredIndex = l,\n    onMouseleave: a[0] || (a[0] = a => e.hoveredIndex = -1)\n  }, [w(i, {\n    hidden: e.isOtherMonth(t) && !e.showOtherMonths,\n    today: e.isToday(t),\n    selected: e.isSelected(t),\n    \"in-range\": e.isInRange(t),\n    \"other-month\": e.isOtherMonth(t),\n    weekend: e.isDateWeekend(t),\n    disabled: e.isDateDisabled(t),\n    focused: e.hoveredIndex === l,\n    \"highlight-today\": e.highlightToday,\n    \"highlight-weekend\": e.highlightWeekend,\n    readonly: e.readonly,\n    onClick: a => {\n      e.onClick(t), e.focusedCellIndex = l;\n    }\n  }, {\n    default: V(() => [b(\"span\", q, [u(e.$slots, \"day\", _(x({\n      date: t\n    })), () => [m(f(t.getDate()), 1)])])]),\n    _: 2\n  }, 1032, [\"hidden\", \"today\", \"selected\", \"in-range\", \"other-month\", \"weekend\", \"disabled\", \"focused\", \"highlight-today\", \"highlight-weekend\", \"readonly\", \"onClick\"])], 40, E))), 128))], 16);\n}, H.__file = \"src/components/va-date-picker/components/VaDayPicker/VaDayPicker.vue\";\nvar J = o({\n  name: \"VaDatePickerHeader\",\n  components: {\n    VaButton: O\n  },\n  emits: [\"update:view\"],\n  props: {\n    monthNames: {\n      type: Array,\n      required: !0\n    },\n    view: {\n      type: Object\n    },\n    color: {\n      type: String,\n      default: void 0\n    }\n  },\n\n  setup(e, {\n    emit: a\n  }) {\n    const {\n      syncView: t,\n      prev: l,\n      next: r\n    } = useView(e, a);\n    return {\n      prev: l,\n      next: r,\n      changeView: e => {\n        t.value = e;\n      },\n      switchView: () => {\n        \"day\" === t.value.type ? t.value = { ...t.value,\n          type: \"month\"\n        } : \"month\" === t.value.type && (t.value = { ...t.value,\n          type: \"year\"\n        });\n      },\n      syncView: t\n    };\n  }\n\n});\nC(\"data-v-0e4bae0c\");\nconst K = {\n  key: 0,\n  class: \"va-date-picker-header va-date-picker__header\"\n},\n      L = {\n  class: \"va-date-picker-header__text\"\n},\n      G = {\n  class: \"mr-1\"\n};\nD();\nN(\".va-date-picker__header[data-v-0e4bae0c]{align-items:center;display:flex;justify-content:space-between}.va-date-picker__header__text[data-v-0e4bae0c]{color:var(--va-dark);font-family:Source Sans Pro;font-size:12px;font-style:normal;font-weight:600;line-height:15px}\"), J.render = function render$3(e, a, t, l, r, o) {\n  const i = p(\"va-button\");\n  return \"year\" !== e.syncView.type ? (d(), n(\"div\", K, [u(e.$slots, \"buttonPrev\", _(x({\n    onClick: e.prev\n  })), () => [w(i, {\n    icon: \"chevron_left\",\n    flat: \"\",\n    size: \"small\",\n    color: e.color,\n    onClick: e.prev\n  }, null, 8, [\"color\", \"onClick\"])]), b(\"div\", L, [u(e.$slots, \"header\", _(x({\n    year: e.syncView.year,\n    month: e.syncView.month,\n    monthNames: e.monthNames,\n    view: e.syncView,\n    changeView: e.changeView,\n    switchView: e.switchView\n  })), () => [w(i, {\n    flat: \"\",\n    onClick: e.switchView,\n    size: \"small\",\n    color: e.color\n  }, {\n    default: V(() => [b(\"span\", G, [u(e.$slots, \"year\", _(x({\n      year: e.syncView.year\n    })), () => [m(f(e.syncView.year), 1)])]), \"day\" === e.syncView.type ? u(e.$slots, \"month\", _(y({\n      key: 0\n    }, {\n      month: e.syncView.month\n    })), () => [m(f(e.monthNames[e.syncView.month]), 1)]) : g(\"v-if\", !0)]),\n    _: 3\n  }, 8, [\"onClick\", \"color\"])])]), u(e.$slots, \"buttonNext\", _(x({\n    onClick: e.next\n  })), () => [w(i, {\n    icon: \"chevron_right\",\n    flat: \"\",\n    size: \"small\",\n    color: e.color,\n    onClick: e.next\n  }, null, 8, [\"color\", \"onClick\"])])])) : g(\"v-if\", !0);\n}, J.__scopeId = \"data-v-0e4bae0c\", J.__file = \"src/components/va-date-picker/components/VaDatePickerHeader/VaDatePickerHeader.vue\";\nvar X = o({\n  name: \"VaMonthPicker\",\n  components: {\n    VaDatePickerCell: R\n  },\n  props: {\n    modelValue: {\n      type: [Date, Array, Object]\n    },\n    monthNames: {\n      type: Array,\n      required: !0\n    },\n    view: {\n      type: Object,\n      default: () => ({\n        type: \"month\"\n      })\n    },\n    allowedMonths: {\n      type: Function,\n      default: void 0\n    },\n    highlightToday: {\n      type: Boolean,\n      default: !0\n    },\n    mode: {\n      type: String,\n      default: \"auto\"\n    },\n    readonly: {\n      type: Boolean,\n      default: !1\n    }\n  },\n  emits: [\"update:modelValue\", \"hover:month\", \"click:month\"],\n\n  setup(e, {\n    emit: t\n  }) {\n    const {\n      view: l\n    } = v(e),\n          o = a(() => Array.from(Array(12).keys()).map(e => new Date(l.value.year, e))),\n          {\n      hoveredIndex: d,\n      onClick: n,\n      isToday: i,\n      isSelected: c,\n      isInRange: s\n    } = useDatePicker(\"month\", o, e, t),\n          {\n      focusedCellIndex: u,\n      containerAttributes: p\n    } = useGridKeyboardNavigation({\n      rowSize: 3,\n      start: 0,\n      end: o.value.length,\n      onSelected: e => n(o.value[e])\n    });\n    return r(u, e => {\n      d.value = e;\n    }), r(d, e => {\n      u.value = e;\n    }), {\n      months: o,\n      hoveredIndex: d,\n      onClick: n,\n      isToday: i,\n      isSelected: c,\n      isInRange: s,\n      isDisabled: a => void 0 !== e.allowedMonths && !e.allowedMonths(a),\n      containerAttributes: p\n    };\n  }\n\n});\nconst Q = [\"onMouseenter\"];\nN(\".va-month-picker{grid-gap:var(--va-date-picker-cell-gap);display:grid;grid-template-columns:repeat(3,1fr);min-width:calc(var(--va-date-picker-cell-size)*7 + var(--va-date-picker-cell-gap)*6);width:100%}.va-month-picker__month-wrapper{border-radius:6px;overflow:hidden;padding:1px;text-align:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.va-month-picker__month{color:var(--va-secondary);font-size:12px;font-style:normal;font-weight:700;height:var(--va-date-picker-cell-size);line-height:var(--va-date-picker-cell-size);position:relative}\"), X.render = function render$2(e, a, t, l, r, o) {\n  const i = p(\"va-date-picker-cell\");\n  return d(), n(\"div\", y({\n    class: \"va-month-picker\"\n  }, e.containerAttributes), [(d(!0), n(k, null, h(e.months, (t, l) => (d(), n(\"div\", {\n    class: \"va-month-picker__month-wrapper\",\n    key: l,\n    onMouseenter: a => e.hoveredIndex = l,\n    onMouseleave: a[0] || (a[0] = a => e.hoveredIndex = -1)\n  }, [w(i, {\n    \"in-range\": !!e.isInRange(t),\n    selected: !!e.isSelected(t),\n    disabled: !!e.isDisabled(t),\n    today: !!e.isToday(t),\n    focused: e.hoveredIndex === l,\n    \"highlight-today\": e.highlightToday,\n    readonly: e.readonly,\n    onClick: a => {\n      e.onClick(t), e.focusedCellIndex = l;\n    }\n  }, {\n    default: V(() => [u(e.$slots, \"month\", _(x({\n      monthIndex: l,\n      month: e.monthNames[l]\n    })), () => [m(f(e.monthNames[l]), 1)])]),\n    _: 2\n  }, 1032, [\"in-range\", \"selected\", \"disabled\", \"today\", \"focused\", \"highlight-today\", \"readonly\", \"onClick\"])], 40, Q))), 128))], 16);\n}, X.__file = \"src/components/va-date-picker/components/VaMonthPicker/VaMonthPicker.vue\";\nvar Z = o({\n  name: \"VaYearPicker\",\n  components: {\n    VaDatePickerCell: R\n  },\n  props: {\n    modelValue: {\n      type: [Date, Array, Object]\n    },\n    allowedYears: {\n      type: Function,\n      default: void 0\n    },\n    highlightToday: {\n      type: Boolean,\n      default: !0\n    },\n    mode: {\n      type: String,\n      default: \"auto\"\n    },\n    view: {\n      type: Object,\n      default: () => ({\n        type: \"year\"\n      })\n    },\n    startYear: {\n      type: Number,\n      default: () => 1970\n    },\n    endYear: {\n      type: Number,\n      default: () => new Date().getFullYear() + 50\n    },\n    readonly: {\n      type: Boolean,\n      default: !1\n    }\n  },\n  emits: [\"update:modelValue\", \"hover:year\", \"click:year\"],\n\n  setup(t, {\n    emit: l\n  }) {\n    const {\n      view: o\n    } = v(t),\n          d = e(null),\n          generateYearsArray = (e, a) => {\n      const t = a - e + 1;\n      return Array.from(Array(t).keys()).map(a => (e => {\n        const a = new Date();\n        return a.setFullYear(e), a;\n      })(e + a));\n    },\n          n = a(() => generateYearsArray(t.startYear, t.endYear));\n\n    M(() => {\n      (e => {\n        if (!d.value) return;\n        const a = d.value.scrollHeight,\n              t = d.value.offsetHeight,\n              l = a / n.value.length * e;\n        d.value.scrollTo({\n          top: l - t / 2\n        });\n      })(n.value.findIndex(e => e.getFullYear() === o.value.year));\n    });\n    const {\n      hoveredIndex: i,\n      onClick: c,\n      isToday: s,\n      isSelected: u,\n      isInRange: p\n    } = useDatePicker(\"year\", n, t, l),\n          {\n      focusedCellIndex: y,\n      containerAttributes: k\n    } = useGridKeyboardNavigation({\n      rowSize: 1,\n      start: 0,\n      end: n.value.length,\n      onFocusIndex: a(() => n.value.findIndex(e => e.getFullYear() === o.value.year)),\n      onSelected: e => c(n.value[e])\n    });\n    return r(y, e => -1 !== e && (e => {\n      if (!d.value) return;\n      const a = d.value.scrollHeight,\n            t = d.value.offsetHeight,\n            l = a / n.value.length * e,\n            r = a / n.value.length,\n            o = l - d.value.scrollTop;\n      o < 0 ? d.value.scrollTo({\n        top: l\n      }) : o > t && d.value.scrollTo({\n        top: l - t + r\n      });\n    })(e)), r(y, e => {\n      i.value = e;\n    }), r(i, e => {\n      y.value = e;\n    }), {\n      hoveredIndex: i,\n      years: n,\n      rootNode: d,\n      onClick: c,\n      isToday: s,\n      isSelected: u,\n      isInRange: p,\n      isYearDisabled: e => void 0 !== t.allowedYears && !t.allowedYears(e),\n      focusedCellIndex: y,\n      containerAttributes: k\n    };\n  }\n\n});\nN(\".va-year-picker{grid-gap:var(--va-date-picker-cell-gap);display:flex;flex-direction:column;max-height:100%;overflow:auto;position:relative}.va-year-picker .va-year-picker-cell{height:30px;width:100%}\"), Z.render = function render$1(e, a, t, l, r, o) {\n  const i = p(\"va-date-picker-cell\");\n  return d(), n(\"div\", y({\n    class: \"va-year-picker\",\n    ref: \"rootNode\"\n  }, e.containerAttributes, {\n    onKeydown: a[1] || (a[1] = c(s(() => {}, [\"prevent\"]), [\"space\"]))\n  }), [(d(!0), n(k, null, h(e.years, (t, l) => (d(), P(i, {\n    key: t,\n    \"in-range\": e.isInRange(t),\n    selected: e.isSelected(t),\n    disabled: e.isYearDisabled(t),\n    today: e.isToday(t),\n    focused: e.focusedCellIndex === l,\n    \"highlight-today\": e.highlightToday,\n    readonly: e.readonly,\n    onClick: a => {\n      e.onClick(t), e.focusedCellIndex = l;\n    },\n    onMouseenter: a => e.hoveredIndex = l,\n    onMouseleave: a[0] || (a[0] = a => e.hoveredIndex = -1)\n  }, {\n    default: V(() => [m(f(t.getFullYear()), 1)]),\n    _: 2\n  }, 1032, [\"in-range\", \"selected\", \"disabled\", \"today\", \"focused\", \"highlight-today\", \"readonly\", \"onClick\", \"onMouseenter\"]))), 128))], 16);\n}, Z.__file = \"src/components/va-date-picker/components/VaYearPicker/VaYearPicker.vue\";\nvar ee = o({\n  name: \"VaDatePicker\",\n  components: {\n    VaDayPicker: H,\n    VaDatePickerHeader: J,\n    VaMonthPicker: X,\n    VaYearPicker: Z\n  },\n  props: { ...$,\n    ...B(J),\n    ...B(H),\n    ...B(X),\n    ...B(Z),\n    modelValue: {\n      type: [Date, Array, Object]\n    },\n    monthNames: {\n      type: Array,\n      required: !1,\n      default: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n    },\n    weekdayNames: {\n      type: Array,\n      required: !1,\n      default: [\"SU\", \"MO\", \"TU\", \"WE\", \"TH\", \"FR\", \"SA\"]\n    },\n    view: {\n      type: Object\n    },\n    type: {\n      type: String,\n      default: \"day\"\n    },\n    readonly: {\n      type: Boolean,\n      default: !1\n    },\n    disabled: {\n      type: Boolean,\n      default: !1\n    },\n    color: {\n      type: String,\n      default: void 0\n    },\n    weekendsColor: {\n      type: String,\n      default: void 0\n    }\n  },\n  emits: [...Y, ...F(J), ...F(Z), ...F(H), ...F(X)],\n\n  setup(t, {\n    emit: l\n  }) {\n    const {\n      valueComputed: o\n    } = z(t, l),\n          {\n      syncView: d\n    } = useView(t, l, {\n      type: t.type\n    }),\n          n = a(() => ({\n      \"va-date-picker_without-week-days\": t.hideWeekDays,\n      \"va-date-picker_disabled\": t.disabled\n    })),\n          {\n      colorsToCSSVariable: i\n    } = U(),\n          c = i({\n      color: t.color,\n      \"weekends-color\": t.weekendsColor\n    }, \"va-date-picker\"),\n          s = e(null);\n    r(d, (e, a) => {\n      e.type !== a.type && I(() => {\n        s.value && s.value.$el.focus();\n      });\n    });\n    return {\n      dayPickerProps: T(t, B(H)),\n      headerProps: T(t, B(J)),\n      monthPickerProps: T(t, B(X)),\n      yearPickerProps: T(t, B(Z)),\n      syncView: d,\n      classComputed: n,\n      valueComputed: o,\n      onDayModelValueUpdate: e => {\n        t.readonly || \"day\" === t.type && (o.value = e);\n      },\n      onMonthClick: e => {\n        l(\"click:month\", e);\n        const a = e.getFullYear(),\n              r = e.getMonth();\n        \"month\" !== t.type && (d.value = {\n          type: \"day\",\n          year: a,\n          month: r\n        });\n      },\n      onMonthModelValueUpdate: e => {\n        \"month\" === t.type && (o.value = e);\n      },\n      onYearClick: e => {\n        l(\"click:year\", e);\n        const a = e.getFullYear();\n        \"year\" !== t.type && (d.value = {\n          type: \"month\",\n          year: a,\n          month: d.value.month\n        });\n      },\n      onYearModelValueUpdate: e => {\n        \"year\" === t.type && (o.value = e);\n      },\n      colorsStyle: c,\n      currentPicker: s,\n      isPickerReadonly: e => t.readonly && t.type === e\n    };\n  }\n\n});\nconst ae = {\n  class: \"va-date-picker__picker-wrapper\"\n};\nN('.va-date-picker{--va-date-picker-color:var(--va-primary);--va-date-picker-secondary:var(--va-secondary);--va-date-picker-white:var(--va-white);--va-date-picker-text-color:var(--va-dark);--va-date-picker-cell-size:32px;--va-date-picker-cell-gap:2px;--va-date-picker-cell-radius:6px;--va-date-picker-selected-text:var(--va-white);--va-date-picker-selected-background:var(--va-date-picker-color);--va-date-picker-today-background:var(--va-date-picker-color);--va-date-picker-today-background-opacity:0.8;--va-date-picker-today-text:var(--va-white);--va-date-picker-weekends-color:var(--va-danger);--va-date-picker-focused-border-color:var(--va-date-picker-color);--va-date-picker-focused-selected-border-color:var(--va-white);--va-date-picker-content-height:calc(var(--va-date-picker-cell-size)*7 + var(--va-date-picker-cell-gap)*6);font-family:var(--va-font-family);width:calc(var(--va-date-picker-cell-size)*7 + var(--va-date-picker-cell-gap)*6)}.va-date-picker__picker-wrapper{height:var(--va-date-picker-content-height)}.va-date-picker_without-week-days{--va-date-picker-content-height:calc(var(--va-date-picker-cell-size)*6 + var(--va-date-picker-cell-gap)*6)}.va-date-picker_mobile .va-day-picker,.va-date-picker_mobile .va-month-picker,.va-date-picker_mobile .va-year-picker{height:100%}.va-date-picker_disabled{opacity:.4;position:relative}.va-date-picker_disabled:before{content:\"\";height:100%;position:absolute;width:100%;z-index:100}.va-date-picker-header{padding-bottom:.25rem}'), ee.render = function render(e, a, t, l, r, o) {\n  const c = p(\"va-date-picker-header\"),\n        s = p(\"va-day-picker\"),\n        v = p(\"va-month-picker\"),\n        k = p(\"va-year-picker\");\n  return d(), n(\"div\", {\n    class: i([\"va-date-picker\", e.classComputed]),\n    style: S(e.colorsStyle)\n  }, [w(c, y(e.headerProps, {\n    view: e.syncView,\n    \"onUpdate:view\": a[0] || (a[0] = a => e.syncView = a)\n  }), A({\n    _: 2\n  }, [h(e.$slots, (a, t) => ({\n    name: t,\n    fn: V(a => [u(e.$slots, t, _(x(a)))])\n  }))]), 1040, [\"view\"]), b(\"div\", ae, [\"day\" === e.syncView.type ? (d(), P(s, y({\n    key: 0\n  }, e.dayPickerProps, {\n    ref: \"currentPicker\",\n    \"model-value\": e.valueComputed,\n    view: e.syncView,\n    readonly: e.isPickerReadonly(\"day\"),\n    \"onUpdate:modelValue\": e.onDayModelValueUpdate,\n    \"onHover:day\": a[1] || (a[1] = a => e.$emit(\"hover:day\", a)),\n    \"onClick:day\": a[2] || (a[2] = a => e.$emit(\"click:day\", a))\n  }), A({\n    _: 2\n  }, [h(e.$slots, (a, t) => ({\n    name: t,\n    fn: V(a => [u(e.$slots, t, _(x(a)))])\n  }))]), 1040, [\"model-value\", \"view\", \"readonly\", \"onUpdate:modelValue\"])) : g(\"v-if\", !0), \"month\" === e.syncView.type ? (d(), P(v, y({\n    key: 1\n  }, e.monthPickerProps, {\n    ref: \"currentPicker\",\n    view: e.syncView,\n    \"model-value\": e.valueComputed,\n    readonly: e.isPickerReadonly(\"month\"),\n    \"onUpdate:modelValue\": e.onMonthModelValueUpdate,\n    \"onHover:month\": a[3] || (a[3] = a => e.$emit(\"hover:month\", a)),\n    \"onClick:month\": e.onMonthClick\n  }), A({\n    _: 2\n  }, [h(e.$slots, (a, t) => ({\n    name: t,\n    fn: V(a => [u(e.$slots, t, _(x(a)))])\n  }))]), 1040, [\"view\", \"model-value\", \"readonly\", \"onUpdate:modelValue\", \"onClick:month\"])) : g(\"v-if\", !0), \"year\" === e.syncView.type ? (d(), P(k, y({\n    key: 2\n  }, e.yearPickerProps, {\n    ref: \"currentPicker\",\n    view: e.syncView,\n    \"model-value\": e.valueComputed,\n    readonly: e.isPickerReadonly(\"year\"),\n    \"onHover:year\": a[4] || (a[4] = a => e.$emit(\"hover:year\", a)),\n    \"onUpdate:modelValue\": e.onYearModelValueUpdate,\n    \"onClick:year\": e.onYearClick\n  }), A({\n    _: 2\n  }, [h(e.$slots, (a, t) => ({\n    name: t,\n    fn: V(a => [u(e.$slots, t, _(x(a)))])\n  }))]), 1040, [\"view\", \"model-value\", \"readonly\", \"onUpdate:modelValue\", \"onClick:year\"])) : g(\"v-if\", !0)])], 6);\n}, ee.__file = \"src/components/va-date-picker/VaDatePicker.vue\";\nexport { isDates as a, isSingleDate as b, isRange as i, ee as s };","map":{"version":3,"mappings":"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","names":["isRange","value","start","end","isSingleDate","Date","isDates","Array","isArray","throwIncorrectModelValueError","modelValue","mode","Error","JSON","stringify","sortRange","useDatePickerModelValue","props","emit","dateEqual","updateModelValue","date","isDatesIncludesDate","find","d","filter","sort","a","b","getTime","useView","defaultOverride","defaultView","type","year","getFullYear","month","getMonth","statefulView","ref","syncView","computed","get","view","set","next","prev","getMonthDaysCount","getDate","getNumbersArray","length","from","keys","map","k","useVaDatePickerCalendar","options","currentMonthStartWeekday","localizeWeekday","weekdayNumber","getDay","firstWeekday","getPreviousDates","prevMonthDaysCount","slice","prevAndCurrentDays","currentMonthEndIndex","calendarDates","days","daysRemaining","nextMonthDaysCount","nextMonthDays","currentMonthStartIndex","safeUnref","refOrRaw","isRef","unref","isUndefined","t","undefined","useGridKeyboardNavigation","rowSize","onSelected","onFocusIndex","focusedCellIndex","previouslyClicked","containerAttributes","onFocus","index","onKeydown","e","includes","key","preventDefault","onBlur","onMousedown","tabindex","isDatesDayEqual","date1","date2","toDateString","isDatesMonthEqual","isDatesYearEqual","useDatePicker","dates","datesEqual","day","hoveredIndex","hoveredValue","watch","onClick","isToday","today","isSelected","isInRange","selectedDate","defineComponent","name","otherMonth","Boolean","default","inRange","disabled","selected","weekend","hidden","focused","highlightWeekend","highlightToday","readonly","emits","setup","class","N","_ctx","_createElementBlock","_hoisted_1","onKeypress","_renderSlot","VaDatePickerCellProps","extractComponentProps","VaDatePickerCell","components","monthNames","required","weekdayNames","String","hideWeekDays","Object","showOtherMonths","allowedDays","Function","weekends","toRefs","VaDayPickerCellPropValues","filterComponentProps","weekdayNamesComputed","gridStartIndex","gridEndIndex","selectedValue","isOtherMonth","isDateDisabled","isDateWeekend","_mergeProps","weekday","onMouseenter","onMouseleave","_createVNode","_hoisted_2","VaButton","color","changeView","switchView","L","G","D","icon","flat","size","_createElementVNode","_hoisted_3","allowedMonths","months","selectedIndex","isDisabled","monthIndex","allowedYears","startYear","Number","endYear","rootNode","generateYearsArray","yearsCount","i","setFullYear","years","onMounted","scrollHeight","rootNodeHeight","offsetHeight","currentYearOffset","scrollTo","top","findIndex","cellSize","relativeScrollPosition","scrollTop","isYearDisabled","_createBlock","VaDayPicker","VaDatePickerHeader","VaMonthPicker","VaYearPicker","useStatefulProps","weekendsColor","useStatefulEmits","extractComponentEmits","valueComputed","useStateful","classComputed","colorsToCSSVariable","useColors","colorsStyle","currentPicker","newValue","prevValue","nextTick","$el","focus","dayPickerProps","headerProps","monthPickerProps","yearPickerProps","onDayModelValueUpdate","onMonthClick","onMonthModelValueUpdate","onYearClick","onYearModelValueUpdate","isPickerReadonly","pickerName","style","_","bind"],"sources":["../../src/components/va-date-picker/hooks/model-value-helper.ts","../../src/components/va-date-picker/hooks/view.ts","../../src/components/va-date-picker/components/VaDayPicker/va-date-picker-calendar-hook.ts","../../src/components/va-date-picker/hooks/grid-keyboard-navigation.ts","../../src/components/va-date-picker/utils/date-utils.ts","../../src/components/va-date-picker/hooks/use-picker.ts","../../src/components/va-date-picker/components/VaDatePickerCell.vue","../../src/components/va-date-picker/components/VaDatePickerCell.vue?vue&type=template&id=1c43554e&lang.js","../../src/components/va-date-picker/components/VaDayPicker/VaDayPicker.vue","../../src/components/va-date-picker/components/VaDayPicker/VaDayPicker.vue?vue&type=template&id=cfaf508c&lang.js","../../src/components/va-date-picker/components/VaDatePickerHeader/VaDatePickerHeader.vue","../../src/components/va-date-picker/components/VaDatePickerHeader/VaDatePickerHeader.vue?vue&type=template&id=0e4bae0c&lang.js","../../src/components/va-date-picker/components/VaMonthPicker/VaMonthPicker.vue","../../src/components/va-date-picker/components/VaMonthPicker/VaMonthPicker.vue?vue&type=template&id=299f7c82&lang.js","../../src/components/va-date-picker/components/VaYearPicker/VaYearPicker.vue","../../src/components/va-date-picker/components/VaYearPicker/VaYearPicker.vue?vue&type=template&id=01d8d4fa&lang.js","../../src/components/va-date-picker/VaDatePicker.vue","../../src/components/va-date-picker/VaDatePicker.vue?vue&type=template&id=efd6986a&lang.js"],"sourcesContent":["import { VaDatePickerModelValue, VaDatePickerModelValuePeriod, VaDatePickerMode } from '../types/types'\n\nexport const isRange = (value: VaDatePickerModelValue): value is VaDatePickerModelValuePeriod => {\n  return typeof (value as any).start !== 'undefined' && typeof (value as any).end !== 'undefined'\n}\nexport const isSingleDate = (value: VaDatePickerModelValue): value is Date => value instanceof Date\nexport const isDates = (value: VaDatePickerModelValue): value is Date[] => Array.isArray(value)\n\nconst modeInitialValue = (date: Date, mode: VaDatePickerMode) => {\n  if (mode === 'single') {\n    return date\n  } else if (mode === 'range') {\n    return { start: date, end: null }\n  } else if (mode === 'multiple') {\n    return [date]\n  } else if (mode === 'auto') {\n    return date\n  }\n\n  throw new Error('Unknown mode')\n}\n\nconst throwIncorrectModelValueError = (modelValue: VaDatePickerModelValue, mode: VaDatePickerMode) : never => {\n  throw Error(`Incorrect modelValue for mode ${mode}. Got ${JSON.stringify(modelValue)}`)\n}\n\nconst modeFromModelValue = (modelValue: VaDatePickerModelValue): VaDatePickerMode => {\n  if (isSingleDate(modelValue)) {\n    return 'single'\n  } else if (isRange(modelValue)) {\n    return 'range'\n  } else if (isDates(modelValue)) {\n    return 'multiple'\n  }\n\n  return throwIncorrectModelValueError(modelValue, 'auto')\n}\n\nconst sortRange = (modelValue: VaDatePickerModelValuePeriod) => {\n  if (modelValue.start && modelValue.end) {\n    if (modelValue.start > modelValue.end) {\n      return { start: modelValue.end, end: modelValue.start }\n    }\n  }\n\n  return modelValue\n}\n\nexport const useDatePickerModelValue = (\n  props: {\n    [key: string]: any,\n    modelValue?: VaDatePickerModelValue,\n    mode: VaDatePickerMode\n  },\n  emit: (event: 'update:modelValue', newValue: VaDatePickerModelValue) => any,\n  dateEqual: (date1: Date | null, date2: Date | null) => boolean,\n) => {\n  const updateModelValue = (date: Date) => {\n    if (!props.modelValue) {\n      emit('update:modelValue', modeInitialValue(date, props.mode))\n      return\n    }\n\n    const mode = props.mode === 'auto' ? modeFromModelValue(props.modelValue) : props.mode\n\n    if (mode === 'single') {\n      if (!isSingleDate(props.modelValue)) {\n        return throwIncorrectModelValueError(props.modelValue, mode)\n      }\n\n      emit('update:modelValue', date)\n    } else if (mode === 'range') {\n      if (!isRange(props.modelValue)) {\n        return throwIncorrectModelValueError(props.modelValue, mode)\n      }\n\n      if (props.modelValue.end && dateEqual(props.modelValue.end, date)) {\n        return emit('update:modelValue', { start: props.modelValue.start, end: null })\n      }\n      if (props.modelValue.start && dateEqual(props.modelValue.start, date)) {\n        return emit('update:modelValue', { start: null, end: props.modelValue.end })\n      }\n\n      if (props.modelValue.end === null) {\n        return emit('update:modelValue', sortRange({ start: props.modelValue.start, end: date }))\n      }\n      if (props.modelValue.start === null) {\n        return emit('update:modelValue', sortRange({ end: props.modelValue.end, start: date }))\n      }\n\n      emit('update:modelValue', { start: date, end: null })\n    } else if (mode === 'multiple') {\n      if (!isDates(props.modelValue)) {\n        return throwIncorrectModelValueError(props.modelValue, mode)\n      }\n\n      const isDatesIncludesDate = !!props.modelValue.find((d) => dateEqual(d, date))\n\n      if (isDatesIncludesDate) {\n        emit('update:modelValue', props.modelValue.filter((d) => !dateEqual(d, date)))\n      } else {\n        emit('update:modelValue', [...props.modelValue, date].sort((a, b) => a.getTime() - b.getTime()))\n      }\n    }\n  }\n\n  return {\n    updateModelValue,\n  }\n}\n","import { VaDatePickerView, VaDatePickerViewProp } from './../types/types'\nimport { computed, ref } from 'vue'\n\nconst JANUARY_MONTH_INDEX = 0\nconst DECEMBER_MONTH_INDEX = 11\n\nconst addMonth = (view: VaDatePickerView) => {\n  if (view.month === DECEMBER_MONTH_INDEX) {\n    return { ...view, year: view.year + 1, month: JANUARY_MONTH_INDEX }\n  } else {\n    return { ...view, month: view.month + 1 }\n  }\n}\n\nconst subMonth = (view: VaDatePickerView) => {\n  if (view.month === JANUARY_MONTH_INDEX) {\n    return { ...view, year: view.year - 1, month: DECEMBER_MONTH_INDEX }\n  } else {\n    return { ...view, month: view.month - 1 }\n  }\n}\n\nexport const useView = (\n  props: { [key: string]: any, 'view'?: VaDatePickerViewProp },\n  emit: (event: any | 'update:view', newValue: VaDatePickerViewProp) => any,\n  defaultOverride?: VaDatePickerViewProp,\n) => {\n  const defaultView: VaDatePickerView = {\n    type: 'day',\n    year: new Date().getFullYear(),\n    month: new Date().getMonth(),\n    ...defaultOverride,\n  }\n\n  const statefulView = ref(defaultView)\n\n  const syncView = computed<VaDatePickerView>({\n    get () {\n      // Merge default view and user view prop\n      return { ...statefulView.value, ...props.view }\n    },\n    set (view: VaDatePickerView) {\n      statefulView.value = view\n\n      emit('update:view', view)\n    },\n  })\n\n  const next = () => {\n    if (syncView.value.type === 'day') {\n      syncView.value = addMonth(syncView.value)\n    } else if (syncView.value.type === 'month') {\n      syncView.value = { ...syncView.value, year: syncView.value.year + 1 }\n    }\n  }\n\n  const prev = () => {\n    if (syncView.value.type === 'day') {\n      syncView.value = subMonth(syncView.value)\n    } else if (syncView.value.type === 'month') {\n      syncView.value = { ...syncView.value, year: syncView.value.year - 1 }\n    }\n  }\n\n  return {\n    syncView,\n    next,\n    prev,\n  }\n}\n","import { computed, Ref } from 'vue'\nimport { VaDatePickerView } from '../../types/types'\n\n/** Returns last day of previous month */\nexport const getMonthDaysCount = (year: number, month: number): number => new Date(year, month + 1, 0).getDate()\n\nexport const getMonthStartWeekday = (year: number, month: number) => new Date(year, month, 1).getDay()\n\n/** Returns array from 1 to length */\nexport const getNumbersArray = (length: number) => Array.from(Array(length).keys()).map((k) => k + 1)\n\nexport const useVaDatePickerCalendar = (view: Ref<VaDatePickerView>, options?: { firstWeekday?: Ref<'Monday' | 'Sunday'> }) => {\n  const CALENDAR_ROWS_COUNT = 6 // Need 6 rows if first day of a month is Saturday and the last day is Monday 31th.\n\n  const localizeWeekday = (weekdayNumber: number) => {\n    if (options && options.firstWeekday?.value === 'Monday') {\n      // Set Sunday as 7th day of the week and Monday as first day of the week.\n      return weekdayNumber === 0 ? 6 : weekdayNumber - 1\n    }\n\n    return weekdayNumber\n  }\n\n  const currentMonthStartWeekday = computed(() => localizeWeekday(getMonthStartWeekday(view.value.year, view.value.month)))\n\n  const getPreviousDates = () => {\n    if (currentMonthStartWeekday.value === 0) { return [] }\n\n    const prevMonthDaysCount = getMonthDaysCount(view.value.year, view.value.month - 1)\n    const prevMonthDays: number[] = getNumbersArray(prevMonthDaysCount)\n\n    return prevMonthDays\n      .slice(-currentMonthStartWeekday.value)\n      .map((d) => new Date(view.value.year, view.value.month - 1, d))\n  }\n\n  const getCurrentDates = () => {\n    const currentMonthDays: number[] = getNumbersArray(getMonthDaysCount(view.value.year, view.value.month))\n\n    return currentMonthDays.map((d) => new Date(view.value.year, view.value.month, d))\n  }\n\n  const prevAndCurrentDays = computed(() => [...getPreviousDates(), ...getCurrentDates()])\n  const currentMonthEndIndex = computed(() => prevAndCurrentDays.value.length)\n\n  const calendarDates = computed(() => {\n    const days = prevAndCurrentDays.value\n\n    const daysRemaining = 7 * CALENDAR_ROWS_COUNT - days.length\n\n    const nextMonthDaysCount = getMonthDaysCount(view.value.year, view.value.month + 1)\n    const nextMonthDays: number[] = getNumbersArray(nextMonthDaysCount)\n\n    return [\n      ...days,\n      ...nextMonthDays\n        .slice(0, daysRemaining)\n        .map((d) => new Date(view.value.year, view.value.month + 1, d)),\n    ]\n  })\n\n  return { calendarDates, currentMonthStartIndex: currentMonthStartWeekday, currentMonthEndIndex }\n}\n","import { ref, Ref, isRef, unref } from 'vue'\n\nfunction safeUnref<T> (refOrRaw: Ref<T> | T): T {\n  if (isRef(refOrRaw)) {\n    return unref(refOrRaw)\n  }\n\n  return refOrRaw\n}\n\nfunction isUndefined<T> (t: T | undefined): t is undefined {\n  return t === undefined\n}\n\nexport const useGridKeyboardNavigation = (\n  {\n    rowSize,\n    start,\n    end,\n    onSelected,\n    onFocusIndex,\n  }: {\n    rowSize: number,\n    start?: Ref<number> | number,\n    end?: Ref<number> | number,\n    onFocusIndex?: Ref<number> | number,\n    onSelected?: (selectedValue: number) => any | null,\n  },\n) => {\n  const focusedCellIndex = ref(-1)\n\n  let previouslyClicked = false\n  const onMousedown = () => { previouslyClicked = true }\n\n  const onFocus = () => {\n    if (previouslyClicked) { return }\n    previouslyClicked = false\n\n    const index = onFocusIndex === undefined ? safeUnref(start) || 0 : safeUnref(onFocusIndex)\n\n    focusedCellIndex.value = index\n  }\n\n  const onBlur = () => {\n    previouslyClicked = false\n\n    focusedCellIndex.value = -1\n  }\n\n  const onKeydown = (e: KeyboardEvent) => {\n    if (['ArrowRight', 'ArrowLeft', 'ArrowDown', 'ArrowUp', 'Enter', 'Space'].includes(e.key)) {\n      // Prevent default for arrow keys and enter. Do not prevent default for tab! :)\n      e.preventDefault()\n    }\n\n    if (e.key === 'Enter' || e.key === 'Space') {\n      if (onSelected === undefined) { return }\n\n      onSelected(focusedCellIndex.value)\n      return\n    }\n\n    if (e.key === 'ArrowRight') {\n      focusedCellIndex.value += 1\n    }\n    if (e.key === 'ArrowLeft') {\n      focusedCellIndex.value -= 1\n    }\n    if (e.key === 'ArrowDown') {\n      focusedCellIndex.value += rowSize\n    }\n    if (e.key === 'ArrowUp') {\n      focusedCellIndex.value -= rowSize\n    }\n\n    if (!isUndefined(start) && focusedCellIndex.value < safeUnref(start)) {\n      focusedCellIndex.value = safeUnref(start)\n    }\n    if (!isUndefined(end) && focusedCellIndex.value > safeUnref(end) - 1) {\n      focusedCellIndex.value = safeUnref(end) - 1\n    }\n  }\n\n  const containerAttributes = {\n    onFocus, onKeydown, onBlur, onMousedown, tabindex: 0,\n  }\n\n  return {\n    focusedCellIndex, containerAttributes,\n  }\n}\n","\nexport const isDatesDayEqual = (date1: Date | null, date2: Date | null): boolean => date1?.toDateString() === date2?.toDateString()\n\nexport const isDatesMonthEqual = (date1: Date | null, date2: Date | null): boolean => {\n  return date1?.getFullYear() === date2?.getFullYear() && date1?.getMonth() === date2?.getMonth()\n}\n\nexport const isDatesYearEqual = (date1: Date | null, date2: Date | null): boolean => {\n  return date1?.getFullYear() === date2?.getFullYear()\n}\n\nexport const createYearDate = (year: number) => {\n  const date = new Date()\n  date.setFullYear(year)\n  return date\n}\n\nexport const isDatesArrayIncludeDay = (dates: Date[], date: Date): boolean => {\n  return !!dates.find((d) => isDatesDayEqual(d, date))\n}\n\nexport const isDatesArrayIncludeMonth = (dates: Date[], date: Date): boolean => {\n  return !!dates.find((d) => isDatesMonthEqual(d, date))\n}\n","import { isDatesMonthEqual, isDatesDayEqual, isDatesYearEqual } from './../utils/date-utils'\nimport { VaDatePickerMode, VaDatePickerModelValue, VaDatePickerType } from '../types/types'\nimport { isDates, isRange, isSingleDate, useDatePickerModelValue } from './model-value-helper'\nimport { computed, ComputedRef, ref, watch } from 'vue'\n\nconst getDateEqualFunction = (type: VaDatePickerType) => {\n  return {\n    month: isDatesMonthEqual,\n    day: isDatesDayEqual,\n    year: isDatesYearEqual,\n  }[type]\n}\n\nexport const useDatePicker = (\n  type: VaDatePickerType,\n  dates: ComputedRef<Date[]>,\n  props: {\n    [key: string]: any,\n    modelValue?: VaDatePickerModelValue,\n    mode: VaDatePickerMode,\n  },\n  emit: (\n    event: 'update:modelValue' | any,\n    ...args: any[]\n  ) => any,\n) => {\n  const datesEqual = getDateEqualFunction(type)\n\n  const hoveredIndex = ref(0)\n  const hoveredValue = computed(() => dates.value[hoveredIndex.value])\n\n  const { updateModelValue } = useDatePickerModelValue(\n    props,\n    emit,\n    datesEqual,\n  )\n\n  const onClick = (date: Date) => {\n    updateModelValue(date)\n    emit(`click:${type}`, date)\n  }\n\n  const isToday = (date: Date): boolean => {\n    const today = new Date()\n    return datesEqual(today, date)\n  }\n\n  const isSelected = (date: Date): boolean => {\n    if (!props.modelValue) { return false }\n\n    if (isSingleDate(props.modelValue)) {\n      return datesEqual(props.modelValue, date)\n    } else if (isDates(props.modelValue)) {\n      return !!props.modelValue.find((d) => datesEqual(d, date))\n    } else if (isRange(props.modelValue)) {\n      return datesEqual(props.modelValue.start, date) || datesEqual(props.modelValue.end, date)\n    }\n\n    return false\n  }\n\n  const isInRange = (date: Date): boolean => {\n    if (!props.modelValue) { return false }\n\n    if (!isRange(props.modelValue)) { return false }\n\n    if (props.modelValue.start && props.modelValue.end) {\n      return props.modelValue.start < date && props.modelValue.end > date\n    }\n\n    const selectedDate = props.modelValue.start || props.modelValue.end\n\n    if (selectedDate) {\n      if (!hoveredValue.value) { return false }\n\n      return selectedDate < date\n        ? (hoveredValue.value >= date)\n        : (hoveredValue.value <= date)\n    }\n\n    return false\n  }\n\n  watch(hoveredValue, (date) => { emit(`hover:${type}`, date) })\n\n  return {\n    hoveredIndex,\n    hoveredValue,\n    onClick,\n    isToday,\n    isSelected,\n    isInRange,\n  }\n}\n","<template>\n  <div\n    v-if=\"hidden\"\n    class=\"va-date-picker-cell va-date-picker-cell_clear\"\n  />\n  <div\n    v-else\n    class=\"va-date-picker-cell\"\n    :class=\"{\n      'va-date-picker-cell_other-month': otherMonth,\n      'va-date-picker-cell_today': highlightToday && today,\n      'va-date-picker-cell_in-range': inRange,\n      'va-date-picker-cell_disabled': disabled,\n      'va-date-picker-cell_highlighted-weekend': highlightWeekend && weekend,\n      'va-date-picker-cell_selected': selected,\n      'va-date-picker-cell_focused': focused,\n      'va-date-picker-cell_readonly': readonly,\n    }\"\n    @click=\"onClick\"\n    @keypress.space.enter.prevent.stop=\"onClick\"\n  >\n    <slot />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\n\nexport default defineComponent({\n  name: 'VaDatePickerCell',\n\n  props: {\n    otherMonth: { type: Boolean, default: false },\n    today: { type: Boolean, default: false },\n    inRange: { type: Boolean, default: false },\n    disabled: { type: Boolean, default: false },\n    selected: { type: Boolean, default: false },\n    weekend: { type: Boolean, default: false },\n    hidden: { type: Boolean, default: false },\n    focused: { type: Boolean, default: false },\n    highlightWeekend: { type: Boolean, default: false },\n    highlightToday: { type: Boolean, default: false },\n    readonly: { type: Boolean, default: false },\n  },\n\n  emits: ['click'],\n\n  setup (props, { emit }) {\n    const onClick = () => {\n      if (!props.disabled) { emit('click') }\n    }\n\n    return {\n      onClick,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n.va-date-picker-cell {\n  position: relative;\n  color: var(--va-date-picker-text-color);\n  font-style: normal;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: var(--va-date-picker-cell-size);\n  min-height: var(--va-date-picker-cell-size);\n  min-width: var(--va-date-picker-cell-size);\n  cursor: pointer;\n  user-select: none;\n  border-radius: var(--va-date-picker-cell-radius);\n  box-sizing: border-box;\n  text-align: center;\n  z-index: 1;\n\n  &::after,\n  &::before {\n    content: '';\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    left: 0;\n    z-index: -1;\n    user-select: none;\n    box-sizing: border-box;\n    border-radius: var(--va-date-picker-cell-radius);\n  }\n\n  &_clear {\n    cursor: default;\n    opacity: 0;\n  }\n\n  &_highlighted-weekend { color: var(--va-date-picker-weekends-color); }\n\n  &_selected {\n    background-color: var(--va-date-picker-selected-background);\n    color: var(--va-date-picker-selected-text);\n  }\n\n  &_in-range {\n    &::before {\n      border: 2px solid var(--va-date-picker-color);\n      opacity: 0.5;\n    }\n  }\n\n  &_today {\n    color: var(--va-date-picker-today-text);\n\n    &::after {\n      background-color: var(--va-date-picker-today-background);\n      opacity: var(--va-date-picker-today-background-opacity);\n    }\n  }\n\n  &_selected.va-date-picker-cell_today {\n    &::before {\n      border: 2px solid var(--va-date-picker-selected-text);\n      opacity: 1;\n    }\n\n    &::after {\n      opacity: 1;\n    }\n  }\n\n  &_other-month {\n    opacity: 0.5;\n  }\n\n  &:hover,\n  &_focused,\n  &_focused:hover {\n    $focus-border-opacity: 0.8;\n\n    &::before {\n      border: 2px solid var(--va-date-picker-focused-border-color);\n      opacity: $focus-border-opacity;\n    }\n\n    &.va-date-picker-cell_selected {\n      &::before {\n        width: calc(100% - 4px);\n        height: calc(100% - 4px);\n        transform: translateY(2px) translateX(2px);\n        padding: 2px;\n        border: 2px solid var(--va-date-picker-focused-selected-border-color);\n        opacity: $focus-border-opacity;\n      }\n\n      &.va-date-picker-cell_today {\n        &::after {\n          opacity: 0;\n        }\n      }\n    }\n  }\n\n  &_disabled {\n    cursor: default;\n    color: var(--va-date-picker-secondary);\n    opacity: 0.5;\n\n    &::after {\n      // Crossline\n      opacity: 0.5;\n      border: none;\n      height: 2px;\n      width: 50%;\n      background: var(--va-date-picker-secondary);\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n    }\n\n    &.va-date-picker-cell_today {\n      color: var(--va-date-picker-today-text);\n\n      &::after {\n        background: var(--va-date-picker-today-text);\n      }\n\n      &::before {\n        background-color: var(--va-date-picker-today-background);\n        opacity: var(--va-date-picker-today-background-opacity);\n      }\n    }\n  }\n\n  &_readonly {\n    cursor: default;\n\n    &::before {\n      display: none;\n    }\n  }\n}\n</style>\n","<template>\n  <div\n    v-if=\"hidden\"\n    class=\"va-date-picker-cell va-date-picker-cell_clear\"\n  />\n  <div\n    v-else\n    class=\"va-date-picker-cell\"\n    :class=\"{\n      'va-date-picker-cell_other-month': otherMonth,\n      'va-date-picker-cell_today': highlightToday && today,\n      'va-date-picker-cell_in-range': inRange,\n      'va-date-picker-cell_disabled': disabled,\n      'va-date-picker-cell_highlighted-weekend': highlightWeekend && weekend,\n      'va-date-picker-cell_selected': selected,\n      'va-date-picker-cell_focused': focused,\n      'va-date-picker-cell_readonly': readonly,\n    }\"\n    @click=\"onClick\"\n    @keypress.space.enter.prevent.stop=\"onClick\"\n  >\n    <slot />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\n\nexport default defineComponent({\n  name: 'VaDatePickerCell',\n\n  props: {\n    otherMonth: { type: Boolean, default: false },\n    today: { type: Boolean, default: false },\n    inRange: { type: Boolean, default: false },\n    disabled: { type: Boolean, default: false },\n    selected: { type: Boolean, default: false },\n    weekend: { type: Boolean, default: false },\n    hidden: { type: Boolean, default: false },\n    focused: { type: Boolean, default: false },\n    highlightWeekend: { type: Boolean, default: false },\n    highlightToday: { type: Boolean, default: false },\n    readonly: { type: Boolean, default: false },\n  },\n\n  emits: ['click'],\n\n  setup (props, { emit }) {\n    const onClick = () => {\n      if (!props.disabled) { emit('click') }\n    }\n\n    return {\n      onClick,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n.va-date-picker-cell {\n  position: relative;\n  color: var(--va-date-picker-text-color);\n  font-style: normal;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: var(--va-date-picker-cell-size);\n  min-height: var(--va-date-picker-cell-size);\n  min-width: var(--va-date-picker-cell-size);\n  cursor: pointer;\n  user-select: none;\n  border-radius: var(--va-date-picker-cell-radius);\n  box-sizing: border-box;\n  text-align: center;\n  z-index: 1;\n\n  &::after,\n  &::before {\n    content: '';\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    left: 0;\n    z-index: -1;\n    user-select: none;\n    box-sizing: border-box;\n    border-radius: var(--va-date-picker-cell-radius);\n  }\n\n  &_clear {\n    cursor: default;\n    opacity: 0;\n  }\n\n  &_highlighted-weekend { color: var(--va-date-picker-weekends-color); }\n\n  &_selected {\n    background-color: var(--va-date-picker-selected-background);\n    color: var(--va-date-picker-selected-text);\n  }\n\n  &_in-range {\n    &::before {\n      border: 2px solid var(--va-date-picker-color);\n      opacity: 0.5;\n    }\n  }\n\n  &_today {\n    color: var(--va-date-picker-today-text);\n\n    &::after {\n      background-color: var(--va-date-picker-today-background);\n      opacity: var(--va-date-picker-today-background-opacity);\n    }\n  }\n\n  &_selected.va-date-picker-cell_today {\n    &::before {\n      border: 2px solid var(--va-date-picker-selected-text);\n      opacity: 1;\n    }\n\n    &::after {\n      opacity: 1;\n    }\n  }\n\n  &_other-month {\n    opacity: 0.5;\n  }\n\n  &:hover,\n  &_focused,\n  &_focused:hover {\n    $focus-border-opacity: 0.8;\n\n    &::before {\n      border: 2px solid var(--va-date-picker-focused-border-color);\n      opacity: $focus-border-opacity;\n    }\n\n    &.va-date-picker-cell_selected {\n      &::before {\n        width: calc(100% - 4px);\n        height: calc(100% - 4px);\n        transform: translateY(2px) translateX(2px);\n        padding: 2px;\n        border: 2px solid var(--va-date-picker-focused-selected-border-color);\n        opacity: $focus-border-opacity;\n      }\n\n      &.va-date-picker-cell_today {\n        &::after {\n          opacity: 0;\n        }\n      }\n    }\n  }\n\n  &_disabled {\n    cursor: default;\n    color: var(--va-date-picker-secondary);\n    opacity: 0.5;\n\n    &::after {\n      // Crossline\n      opacity: 0.5;\n      border: none;\n      height: 2px;\n      width: 50%;\n      background: var(--va-date-picker-secondary);\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n    }\n\n    &.va-date-picker-cell_today {\n      color: var(--va-date-picker-today-text);\n\n      &::after {\n        background: var(--va-date-picker-today-text);\n      }\n\n      &::before {\n        background-color: var(--va-date-picker-today-background);\n        opacity: var(--va-date-picker-today-background-opacity);\n      }\n    }\n  }\n\n  &_readonly {\n    cursor: default;\n\n    &::before {\n      display: none;\n    }\n  }\n}\n</style>\n","<template>\n  <div class=\"va-day-picker\" v-bind=\"containerAttributes\">\n    <template v-if=\"!hideWeekDays\">\n      <div\n        v-for=\"weekday in weekdayNamesComputed\" :key=\"weekday\"\n        class=\"va-day-picker__weekday\"\n      >\n        <slot name=\"weekday\">\n          {{ weekday }}\n        </slot>\n      </div>\n    </template>\n\n    <div\n      class=\"va-day-picker__calendar__day-wrapper\"\n      v-for=\"(date, index) in calendarDates\"\n      :key=\"index\"\n      @mouseenter=\"hoveredIndex = index\"\n      @mouseleave=\"hoveredIndex = -1\"\n    >\n      <va-date-picker-cell\n        :hidden=\"isOtherMonth(date) && !showOtherMonths\"\n        :today=\"isToday(date)\"\n        :selected=\"isSelected(date)\"\n        :in-range=\"isInRange(date)\"\n        :other-month=\"isOtherMonth(date)\"\n        :weekend=\"isDateWeekend(date)\"\n        :disabled=\"isDateDisabled(date)\"\n        :focused=\"hoveredIndex === index\"\n        :highlight-today=\"highlightToday\"\n        :highlight-weekend=\"highlightWeekend\"\n        :readonly=\"readonly\"\n        @click=\"onClick(date); focusedCellIndex = index\"\n      >\n        <span class=\"va-date-picker-cell__day\">\n          <slot name=\"day\" v-bind=\"{ date }\">\n            {{ date.getDate() }}\n          </slot>\n        </span>\n      </va-date-picker-cell>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, toRefs, PropType, watch } from 'vue'\nimport { useVaDatePickerCalendar } from './va-date-picker-calendar-hook'\nimport { VaDatePickerMode, VaDatePickerModelValue, VaDatePickerView } from '../../types/types'\nimport { extractComponentProps, filterComponentProps } from '../../../../utils/child-props'\nimport { useGridKeyboardNavigation } from '../../hooks/grid-keyboard-navigation'\nimport { useDatePicker } from '../../hooks/use-picker'\nimport VaDatePickerCell from '../VaDatePickerCell.vue'\n\nconst VaDatePickerCellProps = extractComponentProps(VaDatePickerCell, ['date', 'selectedValue', 'focusedDate', 'focused'])\n\nexport default defineComponent({\n  name: 'VaDayPicker',\n\n  components: { VaDatePickerCell },\n\n  props: {\n    ...VaDatePickerCellProps,\n    monthNames: { type: Array as PropType<string[]>, required: true },\n    weekdayNames: { type: Array as PropType<string[]>, required: true },\n    firstWeekday: { type: String as PropType<'Monday' | 'Sunday'>, default: 'Sunday' },\n    hideWeekDays: { type: Boolean, default: false },\n    view: { type: Object as PropType<VaDatePickerView>, default: () => ({ type: 'day' }) },\n    modelValue: { type: [Date, Array, Object] as PropType<VaDatePickerModelValue> },\n    mode: { type: String as PropType<VaDatePickerMode>, default: 'auto' },\n    showOtherMonths: { type: Boolean, default: false },\n    allowedDays: { type: Function as PropType<(date: Date) => boolean> },\n    weekends: { type: [Function] as PropType<(d: Date) => boolean> },\n    highlightWeekend: { type: Boolean, default: false },\n    highlightToday: { type: Boolean, default: false },\n    readonly: { type: Boolean, default: false },\n  },\n\n  emits: ['update:modelValue', 'hover:day', 'click:day'],\n\n  setup (props, { emit }) {\n    const { firstWeekday, weekdayNames, view } = toRefs(props)\n\n    const VaDayPickerCellPropValues = filterComponentProps(props, VaDatePickerCellProps)\n\n    const { calendarDates, currentMonthStartIndex, currentMonthEndIndex } = useVaDatePickerCalendar(view, { firstWeekday })\n\n    const weekdayNamesComputed = computed(() => {\n      return firstWeekday.value === 'Sunday'\n        ? weekdayNames.value\n        : [...weekdayNames.value.slice(1), weekdayNames.value[0]]\n    })\n\n    const {\n      hoveredIndex,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange,\n    } = useDatePicker('day', calendarDates, props, emit)\n\n    const gridStartIndex = computed(() => props.showOtherMonths ? 0 : currentMonthStartIndex.value)\n    const gridEndIndex = computed(() => props.showOtherMonths ? calendarDates.value.length : currentMonthEndIndex.value)\n\n    const {\n      focusedCellIndex, containerAttributes,\n    } = useGridKeyboardNavigation({\n      rowSize: 7,\n      start: gridStartIndex,\n      end: gridEndIndex,\n      onSelected: (selectedValue) => onClick(calendarDates.value[selectedValue]),\n    })\n\n    watch(focusedCellIndex, (index) => { hoveredIndex.value = index })\n    watch(hoveredIndex, (index) => { focusedCellIndex.value = index })\n\n    const isOtherMonth = (date: Date) => props.view.month !== date.getMonth()\n    const isDateDisabled = (date: Date) => props.allowedDays === undefined ? false : !props.allowedDays(date)\n    const isDateWeekend = (date: Date) => {\n      if (props.weekends === undefined) {\n        return date.getDay() === 6 || date.getDay() === 0 // 0 - Sunday, 6 - Saturday\n      }\n\n      return props.weekends(date)\n    }\n\n    return {\n      hoveredIndex,\n      calendarDates,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange,\n      isOtherMonth,\n      isDateDisabled,\n      isDateWeekend,\n      containerAttributes,\n      weekdayNamesComputed,\n      VaDayPickerCellPropValues,\n      focusedCellIndex,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n.va-day-picker {\n  display: grid;\n  // 7 columns\n  grid-template-columns: repeat(7, 1fr);\n  grid-gap: var(--va-date-picker-cell-gap);\n\n  &__weekday {\n    text-align: center;\n    font-size: 9px;\n    color: var(--va-secondary);\n    font-weight: bold;\n    height: var(--va-date-picker-cell-size);\n    line-height: var(--va-date-picker-cell-size);\n  }\n}\n</style>\n","<template>\n  <div class=\"va-day-picker\" v-bind=\"containerAttributes\">\n    <template v-if=\"!hideWeekDays\">\n      <div\n        v-for=\"weekday in weekdayNamesComputed\" :key=\"weekday\"\n        class=\"va-day-picker__weekday\"\n      >\n        <slot name=\"weekday\">\n          {{ weekday }}\n        </slot>\n      </div>\n    </template>\n\n    <div\n      class=\"va-day-picker__calendar__day-wrapper\"\n      v-for=\"(date, index) in calendarDates\"\n      :key=\"index\"\n      @mouseenter=\"hoveredIndex = index\"\n      @mouseleave=\"hoveredIndex = -1\"\n    >\n      <va-date-picker-cell\n        :hidden=\"isOtherMonth(date) && !showOtherMonths\"\n        :today=\"isToday(date)\"\n        :selected=\"isSelected(date)\"\n        :in-range=\"isInRange(date)\"\n        :other-month=\"isOtherMonth(date)\"\n        :weekend=\"isDateWeekend(date)\"\n        :disabled=\"isDateDisabled(date)\"\n        :focused=\"hoveredIndex === index\"\n        :highlight-today=\"highlightToday\"\n        :highlight-weekend=\"highlightWeekend\"\n        :readonly=\"readonly\"\n        @click=\"onClick(date); focusedCellIndex = index\"\n      >\n        <span class=\"va-date-picker-cell__day\">\n          <slot name=\"day\" v-bind=\"{ date }\">\n            {{ date.getDate() }}\n          </slot>\n        </span>\n      </va-date-picker-cell>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, toRefs, PropType, watch } from 'vue'\nimport { useVaDatePickerCalendar } from './va-date-picker-calendar-hook'\nimport { VaDatePickerMode, VaDatePickerModelValue, VaDatePickerView } from '../../types/types'\nimport { extractComponentProps, filterComponentProps } from '../../../../utils/child-props'\nimport { useGridKeyboardNavigation } from '../../hooks/grid-keyboard-navigation'\nimport { useDatePicker } from '../../hooks/use-picker'\nimport VaDatePickerCell from '../VaDatePickerCell.vue'\n\nconst VaDatePickerCellProps = extractComponentProps(VaDatePickerCell, ['date', 'selectedValue', 'focusedDate', 'focused'])\n\nexport default defineComponent({\n  name: 'VaDayPicker',\n\n  components: { VaDatePickerCell },\n\n  props: {\n    ...VaDatePickerCellProps,\n    monthNames: { type: Array as PropType<string[]>, required: true },\n    weekdayNames: { type: Array as PropType<string[]>, required: true },\n    firstWeekday: { type: String as PropType<'Monday' | 'Sunday'>, default: 'Sunday' },\n    hideWeekDays: { type: Boolean, default: false },\n    view: { type: Object as PropType<VaDatePickerView>, default: () => ({ type: 'day' }) },\n    modelValue: { type: [Date, Array, Object] as PropType<VaDatePickerModelValue> },\n    mode: { type: String as PropType<VaDatePickerMode>, default: 'auto' },\n    showOtherMonths: { type: Boolean, default: false },\n    allowedDays: { type: Function as PropType<(date: Date) => boolean> },\n    weekends: { type: [Function] as PropType<(d: Date) => boolean> },\n    highlightWeekend: { type: Boolean, default: false },\n    highlightToday: { type: Boolean, default: false },\n    readonly: { type: Boolean, default: false },\n  },\n\n  emits: ['update:modelValue', 'hover:day', 'click:day'],\n\n  setup (props, { emit }) {\n    const { firstWeekday, weekdayNames, view } = toRefs(props)\n\n    const VaDayPickerCellPropValues = filterComponentProps(props, VaDatePickerCellProps)\n\n    const { calendarDates, currentMonthStartIndex, currentMonthEndIndex } = useVaDatePickerCalendar(view, { firstWeekday })\n\n    const weekdayNamesComputed = computed(() => {\n      return firstWeekday.value === 'Sunday'\n        ? weekdayNames.value\n        : [...weekdayNames.value.slice(1), weekdayNames.value[0]]\n    })\n\n    const {\n      hoveredIndex,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange,\n    } = useDatePicker('day', calendarDates, props, emit)\n\n    const gridStartIndex = computed(() => props.showOtherMonths ? 0 : currentMonthStartIndex.value)\n    const gridEndIndex = computed(() => props.showOtherMonths ? calendarDates.value.length : currentMonthEndIndex.value)\n\n    const {\n      focusedCellIndex, containerAttributes,\n    } = useGridKeyboardNavigation({\n      rowSize: 7,\n      start: gridStartIndex,\n      end: gridEndIndex,\n      onSelected: (selectedValue) => onClick(calendarDates.value[selectedValue]),\n    })\n\n    watch(focusedCellIndex, (index) => { hoveredIndex.value = index })\n    watch(hoveredIndex, (index) => { focusedCellIndex.value = index })\n\n    const isOtherMonth = (date: Date) => props.view.month !== date.getMonth()\n    const isDateDisabled = (date: Date) => props.allowedDays === undefined ? false : !props.allowedDays(date)\n    const isDateWeekend = (date: Date) => {\n      if (props.weekends === undefined) {\n        return date.getDay() === 6 || date.getDay() === 0 // 0 - Sunday, 6 - Saturday\n      }\n\n      return props.weekends(date)\n    }\n\n    return {\n      hoveredIndex,\n      calendarDates,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange,\n      isOtherMonth,\n      isDateDisabled,\n      isDateWeekend,\n      containerAttributes,\n      weekdayNamesComputed,\n      VaDayPickerCellPropValues,\n      focusedCellIndex,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n.va-day-picker {\n  display: grid;\n  // 7 columns\n  grid-template-columns: repeat(7, 1fr);\n  grid-gap: var(--va-date-picker-cell-gap);\n\n  &__weekday {\n    text-align: center;\n    font-size: 9px;\n    color: var(--va-secondary);\n    font-weight: bold;\n    height: var(--va-date-picker-cell-size);\n    line-height: var(--va-date-picker-cell-size);\n  }\n}\n</style>\n","<template>\n  <div class=\"va-date-picker-header va-date-picker__header\" v-if=\"syncView.type !== 'year'\">\n    <slot name=\"buttonPrev\" v-bind=\"{ onClick: prev }\">\n      <va-button icon=\"chevron_left\" flat size=\"small\" :color=\"color\" @click=\"prev\" />\n    </slot>\n\n    <div class=\"va-date-picker-header__text\">\n      <slot name=\"header\" v-bind=\"{ year: syncView.year, month: syncView.month, monthNames, view: syncView, changeView, switchView }\">\n        <va-button flat @click=\"switchView\" size=\"small\" :color=\"color\">\n          <span class=\"mr-1\">\n            <slot name=\"year\" v-bind=\"{ year: syncView.year }\">{{ syncView.year }}</slot>\n          </span>\n\n          <slot v-if=\"syncView.type === 'day'\" name=\"month\" v-bind=\"{ month: syncView.month }\">{{ monthNames[syncView.month] }}</slot>\n        </va-button>\n      </slot>\n    </div>\n\n    <slot name=\"buttonNext\" v-bind=\"{ onClick: next }\">\n      <va-button icon=\"chevron_right\" flat size=\"small\" :color=\"color\" @click=\"next\" />\n    </slot>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType } from 'vue'\nimport { VaDatePickerView } from '../../types/types'\nimport { useView } from '../../hooks/view'\nimport VaButton from '../../../va-button'\n\nexport default defineComponent({\n  name: 'VaDatePickerHeader',\n\n  components: { VaButton },\n\n  emits: ['update:view'],\n\n  props: {\n    monthNames: { type: Array, required: true },\n    view: { type: Object as PropType<VaDatePickerView> },\n\n    // Colors\n    color: { type: String, default: undefined },\n  },\n\n  setup (props, { emit }) {\n    const { syncView, prev, next } = useView(props, emit)\n\n    const switchView = () => {\n      if (syncView.value.type === 'day') {\n        syncView.value = { ...syncView.value, type: 'month' }\n      } else if (syncView.value.type === 'month') {\n        syncView.value = { ...syncView.value, type: 'year' }\n      }\n    }\n\n    const changeView = (view: VaDatePickerView) => {\n      syncView.value = view\n    }\n\n    return { prev, next, changeView, switchView, syncView }\n  },\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.va-date-picker {\n  &__header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    &__text {\n      color: var(--va-dark);\n      font-family: Source Sans Pro;\n      font-style: normal;\n      font-weight: 600;\n      font-size: 12px;\n      line-height: 15px;\n    }\n  }\n}\n</style>\n","<template>\n  <div class=\"va-date-picker-header va-date-picker__header\" v-if=\"syncView.type !== 'year'\">\n    <slot name=\"buttonPrev\" v-bind=\"{ onClick: prev }\">\n      <va-button icon=\"chevron_left\" flat size=\"small\" :color=\"color\" @click=\"prev\" />\n    </slot>\n\n    <div class=\"va-date-picker-header__text\">\n      <slot name=\"header\" v-bind=\"{ year: syncView.year, month: syncView.month, monthNames, view: syncView, changeView, switchView }\">\n        <va-button flat @click=\"switchView\" size=\"small\" :color=\"color\">\n          <span class=\"mr-1\">\n            <slot name=\"year\" v-bind=\"{ year: syncView.year }\">{{ syncView.year }}</slot>\n          </span>\n\n          <slot v-if=\"syncView.type === 'day'\" name=\"month\" v-bind=\"{ month: syncView.month }\">{{ monthNames[syncView.month] }}</slot>\n        </va-button>\n      </slot>\n    </div>\n\n    <slot name=\"buttonNext\" v-bind=\"{ onClick: next }\">\n      <va-button icon=\"chevron_right\" flat size=\"small\" :color=\"color\" @click=\"next\" />\n    </slot>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType } from 'vue'\nimport { VaDatePickerView } from '../../types/types'\nimport { useView } from '../../hooks/view'\nimport VaButton from '../../../va-button'\n\nexport default defineComponent({\n  name: 'VaDatePickerHeader',\n\n  components: { VaButton },\n\n  emits: ['update:view'],\n\n  props: {\n    monthNames: { type: Array, required: true },\n    view: { type: Object as PropType<VaDatePickerView> },\n\n    // Colors\n    color: { type: String, default: undefined },\n  },\n\n  setup (props, { emit }) {\n    const { syncView, prev, next } = useView(props, emit)\n\n    const switchView = () => {\n      if (syncView.value.type === 'day') {\n        syncView.value = { ...syncView.value, type: 'month' }\n      } else if (syncView.value.type === 'month') {\n        syncView.value = { ...syncView.value, type: 'year' }\n      }\n    }\n\n    const changeView = (view: VaDatePickerView) => {\n      syncView.value = view\n    }\n\n    return { prev, next, changeView, switchView, syncView }\n  },\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.va-date-picker {\n  &__header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    &__text {\n      color: var(--va-dark);\n      font-family: Source Sans Pro;\n      font-style: normal;\n      font-weight: 600;\n      font-size: 12px;\n      line-height: 15px;\n    }\n  }\n}\n</style>\n","<template>\n  <div class=\"va-month-picker\" v-bind=\"containerAttributes\">\n    <div\n      class=\"va-month-picker__month-wrapper\"\n      v-for=\"(month, monthIndex) in months\"\n      :key=\"monthIndex\"\n      @mouseenter=\"hoveredIndex = monthIndex\"\n      @mouseleave=\"hoveredIndex = -1\"\n    >\n      <va-date-picker-cell\n        :in-range=\"!!isInRange(month)\"\n        :selected=\"!!isSelected(month)\"\n        :disabled=\"!!isDisabled(month)\"\n        :today=\"!!isToday(month)\"\n        :focused=\"hoveredIndex === monthIndex\"\n        :highlight-today=\"highlightToday\"\n        :readonly=\"readonly\"\n        @click=\"onClick(month); focusedCellIndex = monthIndex\"\n      >\n        <slot name=\"month\" v-bind=\"{ monthIndex, month: monthNames[monthIndex] }\">\n          {{ monthNames[monthIndex] }}\n        </slot>\n      </va-date-picker-cell>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, PropType, toRefs, watch } from 'vue'\nimport { VaDatePickerMode, VaDatePickerView, VaDatePickerModelValue } from '../../types/types'\nimport VaDatePickerCell from '../VaDatePickerCell.vue'\nimport { useGridKeyboardNavigation } from '../../hooks/grid-keyboard-navigation'\nimport { useDatePicker } from '../../hooks/use-picker'\n\nexport default defineComponent({\n  name: 'VaMonthPicker',\n\n  components: { VaDatePickerCell },\n\n  props: {\n    modelValue: { type: [Date, Array, Object] as PropType<VaDatePickerModelValue> },\n    monthNames: { type: Array as PropType<string[]>, required: true },\n    view: { type: Object as PropType<VaDatePickerView>, default: () => ({ type: 'month' }) },\n    allowedMonths: { type: Function as PropType<(date: Date) => boolean>, default: undefined },\n    highlightToday: { type: Boolean, default: true },\n    mode: { type: String as PropType<VaDatePickerMode>, default: 'auto' },\n    readonly: { type: Boolean, default: false },\n  },\n\n  emits: ['update:modelValue', 'hover:month', 'click:month'],\n\n  setup (props, { emit }) {\n    const { view } = toRefs(props)\n\n    const months = computed(() => Array.from(Array(12).keys()).map((month) => new Date(view.value.year, month)))\n\n    const {\n      hoveredIndex,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange,\n    } = useDatePicker('month', months, props, emit)\n\n    const isDisabled = (date: Date) => props.allowedMonths === undefined ? false : !props.allowedMonths(date)\n\n    const {\n      focusedCellIndex, containerAttributes,\n    } = useGridKeyboardNavigation({\n      rowSize: 3,\n      start: 0,\n      end: months.value.length,\n      onSelected: (selectedIndex) => onClick(months.value[selectedIndex]),\n    })\n\n    watch(focusedCellIndex, (index) => { hoveredIndex.value = index })\n    watch(hoveredIndex, (index) => { focusedCellIndex.value = index })\n\n    return {\n      months,\n      hoveredIndex,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange,\n      isDisabled,\n      containerAttributes,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n.va-month-picker {\n  display: grid;\n  // 4 columns\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: var(--va-date-picker-cell-gap);\n  // 7 days + gap\n  min-width: calc(var(--va-date-picker-cell-size) * 7 + var(--va-date-picker-cell-gap) * 6);\n  width: 100%;\n\n  &__month-wrapper {\n    padding: 1px;\n    border-radius: 6px;\n    text-align: center;\n    user-select: none;\n    overflow: hidden;\n  }\n\n  &__month {\n    color: var(--va-secondary);\n    font-style: normal;\n    font-weight: bold;\n    font-size: 12px;\n    height: var(--va-date-picker-cell-size);\n    line-height: var(--va-date-picker-cell-size);\n    position: relative;\n  }\n}\n</style>\n","<template>\n  <div class=\"va-month-picker\" v-bind=\"containerAttributes\">\n    <div\n      class=\"va-month-picker__month-wrapper\"\n      v-for=\"(month, monthIndex) in months\"\n      :key=\"monthIndex\"\n      @mouseenter=\"hoveredIndex = monthIndex\"\n      @mouseleave=\"hoveredIndex = -1\"\n    >\n      <va-date-picker-cell\n        :in-range=\"!!isInRange(month)\"\n        :selected=\"!!isSelected(month)\"\n        :disabled=\"!!isDisabled(month)\"\n        :today=\"!!isToday(month)\"\n        :focused=\"hoveredIndex === monthIndex\"\n        :highlight-today=\"highlightToday\"\n        :readonly=\"readonly\"\n        @click=\"onClick(month); focusedCellIndex = monthIndex\"\n      >\n        <slot name=\"month\" v-bind=\"{ monthIndex, month: monthNames[monthIndex] }\">\n          {{ monthNames[monthIndex] }}\n        </slot>\n      </va-date-picker-cell>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, PropType, toRefs, watch } from 'vue'\nimport { VaDatePickerMode, VaDatePickerView, VaDatePickerModelValue } from '../../types/types'\nimport VaDatePickerCell from '../VaDatePickerCell.vue'\nimport { useGridKeyboardNavigation } from '../../hooks/grid-keyboard-navigation'\nimport { useDatePicker } from '../../hooks/use-picker'\n\nexport default defineComponent({\n  name: 'VaMonthPicker',\n\n  components: { VaDatePickerCell },\n\n  props: {\n    modelValue: { type: [Date, Array, Object] as PropType<VaDatePickerModelValue> },\n    monthNames: { type: Array as PropType<string[]>, required: true },\n    view: { type: Object as PropType<VaDatePickerView>, default: () => ({ type: 'month' }) },\n    allowedMonths: { type: Function as PropType<(date: Date) => boolean>, default: undefined },\n    highlightToday: { type: Boolean, default: true },\n    mode: { type: String as PropType<VaDatePickerMode>, default: 'auto' },\n    readonly: { type: Boolean, default: false },\n  },\n\n  emits: ['update:modelValue', 'hover:month', 'click:month'],\n\n  setup (props, { emit }) {\n    const { view } = toRefs(props)\n\n    const months = computed(() => Array.from(Array(12).keys()).map((month) => new Date(view.value.year, month)))\n\n    const {\n      hoveredIndex,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange,\n    } = useDatePicker('month', months, props, emit)\n\n    const isDisabled = (date: Date) => props.allowedMonths === undefined ? false : !props.allowedMonths(date)\n\n    const {\n      focusedCellIndex, containerAttributes,\n    } = useGridKeyboardNavigation({\n      rowSize: 3,\n      start: 0,\n      end: months.value.length,\n      onSelected: (selectedIndex) => onClick(months.value[selectedIndex]),\n    })\n\n    watch(focusedCellIndex, (index) => { hoveredIndex.value = index })\n    watch(hoveredIndex, (index) => { focusedCellIndex.value = index })\n\n    return {\n      months,\n      hoveredIndex,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange,\n      isDisabled,\n      containerAttributes,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n.va-month-picker {\n  display: grid;\n  // 4 columns\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: var(--va-date-picker-cell-gap);\n  // 7 days + gap\n  min-width: calc(var(--va-date-picker-cell-size) * 7 + var(--va-date-picker-cell-gap) * 6);\n  width: 100%;\n\n  &__month-wrapper {\n    padding: 1px;\n    border-radius: 6px;\n    text-align: center;\n    user-select: none;\n    overflow: hidden;\n  }\n\n  &__month {\n    color: var(--va-secondary);\n    font-style: normal;\n    font-weight: bold;\n    font-size: 12px;\n    height: var(--va-date-picker-cell-size);\n    line-height: var(--va-date-picker-cell-size);\n    position: relative;\n  }\n}\n</style>\n","<template>\n  <div\n    class=\"va-year-picker\"\n    ref=\"rootNode\"\n    v-bind=\"containerAttributes\"\n    @keydown.space.prevent\n  >\n    <va-date-picker-cell\n      v-for=\"(year, index) in years\"\n      :key=\"year\"\n      :in-range=\"isInRange(year)\"\n      :selected=\"isSelected(year)\"\n      :disabled=\"isYearDisabled(year)\"\n      :today=\"isToday(year)\"\n      :focused=\"focusedCellIndex === index\"\n      :highlight-today=\"highlightToday\"\n      :readonly=\"readonly\"\n      @click=\"onClick(year); focusedCellIndex = index\"\n      @mouseenter=\"hoveredIndex = index\"\n      @mouseleave=\"hoveredIndex = -1\"\n    >\n      {{ year.getFullYear() }}\n    </va-date-picker-cell>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, toRefs, onMounted, ref, computed, watch } from 'vue'\nimport { VaDatePickerMode, VaDatePickerModelValue, VaDatePickerView } from '../../types/types'\nimport VaDatePickerCell from '../VaDatePickerCell.vue'\nimport { createYearDate, isDatesYearEqual } from '../../utils/date-utils'\nimport { useGridKeyboardNavigation } from '../../hooks/grid-keyboard-navigation'\nimport { useDatePicker } from '../../hooks/use-picker'\n\nexport default defineComponent({\n  name: 'VaYearPicker',\n  components: { VaDatePickerCell },\n\n  props: {\n    modelValue: { type: [Date, Array, Object] as PropType<VaDatePickerModelValue> },\n    allowedYears: { type: Function as PropType<(date: Date) => boolean>, default: undefined },\n    highlightToday: { type: Boolean, default: true },\n    mode: { type: String as PropType<VaDatePickerMode>, default: 'auto' },\n    view: { type: Object as PropType<VaDatePickerView>, default: () => ({ type: 'year' }) },\n    startYear: { type: Number, default: () => 1970 },\n    endYear: { type: Number, default: () => new Date().getFullYear() + 50 },\n    readonly: { type: Boolean, default: false },\n  },\n\n  emits: ['update:modelValue', 'hover:year', 'click:year'],\n\n  setup (props, { emit }) {\n    const { view } = toRefs(props)\n    const rootNode = ref<HTMLElement | null>(null)\n\n    const generateYearsArray = (start: number, end: number) => {\n      const yearsCount = end - start + 1\n      return Array.from(Array(yearsCount).keys())\n        .map((i) => createYearDate(start + i))\n    }\n\n    const years = computed(() => generateYearsArray(props.startYear, props.endYear))\n\n    const scrollIntoYearIndex = (index: number) => {\n      if (!rootNode.value) { return }\n\n      const scrollHeight = rootNode.value.scrollHeight\n      const rootNodeHeight = rootNode.value.offsetHeight\n      const currentYearOffset = scrollHeight / years.value.length * index\n      const cellSize = scrollHeight / years.value.length\n      const relativeScrollPosition = currentYearOffset - rootNode.value.scrollTop\n\n      if (relativeScrollPosition < 0) {\n        // First element in view\n        rootNode.value.scrollTo({ top: currentYearOffset })\n      } else if (relativeScrollPosition > rootNodeHeight) {\n        // Last element in view\n        rootNode.value.scrollTo({ top: currentYearOffset - rootNodeHeight + cellSize })\n      }\n    }\n\n    const scrollIntoYearIndexCenter = (index: number) => {\n      if (!rootNode.value) { return }\n\n      const scrollHeight = rootNode.value.scrollHeight\n      const rootNodeHeight = rootNode.value.offsetHeight\n      const currentYearOffset = scrollHeight / years.value.length * index\n\n      rootNode.value.scrollTo({ top: currentYearOffset - rootNodeHeight / 2 })\n    }\n\n    onMounted(() => {\n      const currentYearIndex = years.value.findIndex((date) => date.getFullYear() === view.value.year)\n\n      scrollIntoYearIndexCenter(currentYearIndex)\n    })\n\n    const {\n      hoveredIndex,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange,\n    } = useDatePicker('year', years, props, emit)\n\n    const isYearDisabled = (year: Date) => props.allowedYears === undefined ? false : !props.allowedYears(year)\n\n    const {\n      focusedCellIndex, containerAttributes,\n    } = useGridKeyboardNavigation({\n      rowSize: 1,\n      start: 0,\n      end: years.value.length,\n      onFocusIndex: computed(() => years.value.findIndex((date) => date.getFullYear() === view.value.year)),\n      onSelected: (selectedIndex) => onClick(years.value[selectedIndex]),\n    })\n\n    watch(focusedCellIndex, (index) => index !== -1 && scrollIntoYearIndex(index))\n    watch(focusedCellIndex, (index) => { hoveredIndex.value = index })\n    watch(hoveredIndex, (index) => { focusedCellIndex.value = index })\n\n    return {\n      hoveredIndex,\n      years,\n      rootNode,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange,\n      isYearDisabled,\n      focusedCellIndex,\n      containerAttributes,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n.va-year-picker {\n  display: flex;\n  flex-direction: column;\n  overflow: auto;\n  grid-gap: var(--va-date-picker-cell-gap);\n  max-height: 100%;\n  position: relative;\n\n  .va-year-picker-cell {\n    width: 100%;\n    height: 30px;\n  }\n}\n</style>\n","<template>\n  <div\n    class=\"va-year-picker\"\n    ref=\"rootNode\"\n    v-bind=\"containerAttributes\"\n    @keydown.space.prevent\n  >\n    <va-date-picker-cell\n      v-for=\"(year, index) in years\"\n      :key=\"year\"\n      :in-range=\"isInRange(year)\"\n      :selected=\"isSelected(year)\"\n      :disabled=\"isYearDisabled(year)\"\n      :today=\"isToday(year)\"\n      :focused=\"focusedCellIndex === index\"\n      :highlight-today=\"highlightToday\"\n      :readonly=\"readonly\"\n      @click=\"onClick(year); focusedCellIndex = index\"\n      @mouseenter=\"hoveredIndex = index\"\n      @mouseleave=\"hoveredIndex = -1\"\n    >\n      {{ year.getFullYear() }}\n    </va-date-picker-cell>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, toRefs, onMounted, ref, computed, watch } from 'vue'\nimport { VaDatePickerMode, VaDatePickerModelValue, VaDatePickerView } from '../../types/types'\nimport VaDatePickerCell from '../VaDatePickerCell.vue'\nimport { createYearDate, isDatesYearEqual } from '../../utils/date-utils'\nimport { useGridKeyboardNavigation } from '../../hooks/grid-keyboard-navigation'\nimport { useDatePicker } from '../../hooks/use-picker'\n\nexport default defineComponent({\n  name: 'VaYearPicker',\n  components: { VaDatePickerCell },\n\n  props: {\n    modelValue: { type: [Date, Array, Object] as PropType<VaDatePickerModelValue> },\n    allowedYears: { type: Function as PropType<(date: Date) => boolean>, default: undefined },\n    highlightToday: { type: Boolean, default: true },\n    mode: { type: String as PropType<VaDatePickerMode>, default: 'auto' },\n    view: { type: Object as PropType<VaDatePickerView>, default: () => ({ type: 'year' }) },\n    startYear: { type: Number, default: () => 1970 },\n    endYear: { type: Number, default: () => new Date().getFullYear() + 50 },\n    readonly: { type: Boolean, default: false },\n  },\n\n  emits: ['update:modelValue', 'hover:year', 'click:year'],\n\n  setup (props, { emit }) {\n    const { view } = toRefs(props)\n    const rootNode = ref<HTMLElement | null>(null)\n\n    const generateYearsArray = (start: number, end: number) => {\n      const yearsCount = end - start + 1\n      return Array.from(Array(yearsCount).keys())\n        .map((i) => createYearDate(start + i))\n    }\n\n    const years = computed(() => generateYearsArray(props.startYear, props.endYear))\n\n    const scrollIntoYearIndex = (index: number) => {\n      if (!rootNode.value) { return }\n\n      const scrollHeight = rootNode.value.scrollHeight\n      const rootNodeHeight = rootNode.value.offsetHeight\n      const currentYearOffset = scrollHeight / years.value.length * index\n      const cellSize = scrollHeight / years.value.length\n      const relativeScrollPosition = currentYearOffset - rootNode.value.scrollTop\n\n      if (relativeScrollPosition < 0) {\n        // First element in view\n        rootNode.value.scrollTo({ top: currentYearOffset })\n      } else if (relativeScrollPosition > rootNodeHeight) {\n        // Last element in view\n        rootNode.value.scrollTo({ top: currentYearOffset - rootNodeHeight + cellSize })\n      }\n    }\n\n    const scrollIntoYearIndexCenter = (index: number) => {\n      if (!rootNode.value) { return }\n\n      const scrollHeight = rootNode.value.scrollHeight\n      const rootNodeHeight = rootNode.value.offsetHeight\n      const currentYearOffset = scrollHeight / years.value.length * index\n\n      rootNode.value.scrollTo({ top: currentYearOffset - rootNodeHeight / 2 })\n    }\n\n    onMounted(() => {\n      const currentYearIndex = years.value.findIndex((date) => date.getFullYear() === view.value.year)\n\n      scrollIntoYearIndexCenter(currentYearIndex)\n    })\n\n    const {\n      hoveredIndex,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange,\n    } = useDatePicker('year', years, props, emit)\n\n    const isYearDisabled = (year: Date) => props.allowedYears === undefined ? false : !props.allowedYears(year)\n\n    const {\n      focusedCellIndex, containerAttributes,\n    } = useGridKeyboardNavigation({\n      rowSize: 1,\n      start: 0,\n      end: years.value.length,\n      onFocusIndex: computed(() => years.value.findIndex((date) => date.getFullYear() === view.value.year)),\n      onSelected: (selectedIndex) => onClick(years.value[selectedIndex]),\n    })\n\n    watch(focusedCellIndex, (index) => index !== -1 && scrollIntoYearIndex(index))\n    watch(focusedCellIndex, (index) => { hoveredIndex.value = index })\n    watch(hoveredIndex, (index) => { focusedCellIndex.value = index })\n\n    return {\n      hoveredIndex,\n      years,\n      rootNode,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange,\n      isYearDisabled,\n      focusedCellIndex,\n      containerAttributes,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n.va-year-picker {\n  display: flex;\n  flex-direction: column;\n  overflow: auto;\n  grid-gap: var(--va-date-picker-cell-gap);\n  max-height: 100%;\n  position: relative;\n\n  .va-year-picker-cell {\n    width: 100%;\n    height: 30px;\n  }\n}\n</style>\n","<template>\n  <div class=\"va-date-picker\" :class=\"classComputed\" :style=\"colorsStyle\">\n    <va-date-picker-header\n      v-bind=\"headerProps\"\n      v-model:view=\"syncView\"\n    >\n      <template v-for=\"(_, name) in $slots\" v-slot:[name]=\"bind\">\n        <slot :name=\"name\" v-bind=\"bind\" />\n      </template>\n    </va-date-picker-header>\n\n    <div class=\"va-date-picker__picker-wrapper\">\n      <va-day-picker\n        v-if=\"syncView.type === 'day'\"\n        v-bind=\"dayPickerProps\"\n        ref=\"currentPicker\"\n        :model-value=\"valueComputed\"\n        :view=\"syncView\"\n        :readonly=\"isPickerReadonly('day')\"\n        @update:model-value=\"onDayModelValueUpdate\"\n        @hover:day=\"(value) => $emit('hover:day', value)\"\n        @click:day=\"(value) => $emit('click:day', value)\"\n      >\n        <template v-for=\"(_, name) in $slots\" v-slot:[name]=\"bind\">\n          <slot :name=\"name\" v-bind=\"bind\" />\n        </template>\n      </va-day-picker>\n\n      <va-month-picker\n        v-if=\"syncView.type === 'month'\"\n        v-bind=\"monthPickerProps\"\n        ref=\"currentPicker\"\n        :view=\"syncView\"\n        :model-value=\"valueComputed\"\n        :readonly=\"isPickerReadonly('month')\"\n        @update:model-value=\"onMonthModelValueUpdate\"\n        @hover:month=\"(value) => $emit('hover:month', value)\"\n        @click:month=\"onMonthClick\"\n      >\n        <template v-for=\"(_, name) in $slots\" v-slot:[name]=\"bind\">\n          <slot :name=\"name\" v-bind=\"bind\" />\n        </template>\n      </va-month-picker>\n\n      <va-year-picker\n        v-if=\"syncView.type === 'year'\"\n        v-bind=\"yearPickerProps\"\n        ref=\"currentPicker\"\n        :view=\"syncView\"\n        :model-value=\"valueComputed\"\n        :readonly=\"isPickerReadonly('year')\"\n        @hover:year=\"(value) => $emit('hover:year', value)\"\n        @update:model-value=\"onYearModelValueUpdate\"\n        @click:year=\"onYearClick\"\n      >\n        <template v-for=\"(_, name) in $slots\" v-slot:[name]=\"bind\">\n          <slot :name=\"name\" v-bind=\"bind\" />\n        </template>\n      </va-year-picker>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { ComponentOptions, computed, defineComponent, nextTick, PropType, ref, watch } from 'vue'\nimport { useStateful, useStatefulProps, useStatefulEmits } from '../../composables/useStateful'\nimport { useColors } from '../../services/color-config/color-config'\n\nimport { VaDatePickerModelValue, VaDatePickerType, VaDatePickerView } from './types/types'\nimport { filterComponentProps, extractComponentProps, extractComponentEmits } from '../../utils/child-props'\nimport { useView } from './hooks/view'\n\nimport VaDayPicker from './components/VaDayPicker/VaDayPicker.vue'\nimport VaDatePickerHeader from './components/VaDatePickerHeader/VaDatePickerHeader.vue'\nimport VaMonthPicker from './components/VaMonthPicker/VaMonthPicker.vue'\nimport VaYearPicker from './components/VaYearPicker/VaYearPicker.vue'\n\nconst DEFAULT_MONTH_NAMES = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\nconst DEFAULT_WEEKDAY_NAMES = ['SU', 'MO', 'TU', 'WE', 'TH', 'FR', 'SA']\n\nexport default defineComponent({\n  name: 'VaDatePicker',\n\n  components: { VaDayPicker, VaDatePickerHeader, VaMonthPicker, VaYearPicker },\n\n  props: {\n    ...useStatefulProps,\n    ...extractComponentProps(VaDatePickerHeader),\n    ...extractComponentProps(VaDayPicker),\n    ...extractComponentProps(VaMonthPicker),\n    ...extractComponentProps(VaYearPicker),\n    modelValue: { type: [Date, Array, Object] as PropType<VaDatePickerModelValue | undefined> },\n    monthNames: { type: Array as PropType<string[]>, required: false, default: DEFAULT_MONTH_NAMES },\n    weekdayNames: { type: Array as PropType<string[]>, required: false, default: DEFAULT_WEEKDAY_NAMES },\n    view: { type: Object as PropType<VaDatePickerView> },\n    type: { type: String as PropType<VaDatePickerType>, default: 'day' },\n    readonly: { type: Boolean, default: false },\n    disabled: { type: Boolean, default: false },\n\n    // Colors\n    color: { type: String, default: undefined },\n    weekendsColor: { type: String, default: undefined },\n  },\n\n  emits: [\n    ...useStatefulEmits,\n    ...extractComponentEmits(VaDatePickerHeader),\n    ...extractComponentEmits(VaYearPicker),\n    ...extractComponentEmits(VaDayPicker),\n    ...extractComponentEmits(VaMonthPicker),\n  ],\n\n  setup (props, { emit }) {\n    const { valueComputed } = useStateful(props, emit)\n\n    const { syncView } = useView(props, emit, { type: props.type })\n\n    const classComputed = computed(() => ({\n      'va-date-picker_without-week-days': props.hideWeekDays,\n      'va-date-picker_disabled': props.disabled,\n    }))\n\n    const onDayModelValueUpdate = (modelValue: VaDatePickerModelValue) => {\n      if (props.readonly) { return }\n\n      // Do not update model value if we just want to change view (We can change it for now, but later we can add here timepicker)\n      if (props.type === 'day') { valueComputed.value = modelValue }\n    }\n\n    const onMonthClick = (date: Date) => {\n      emit('click:month', date)\n      const year = date.getFullYear()\n      const month = date.getMonth()\n      if (props.type !== 'month') {\n        syncView.value = { type: 'day', year, month }\n      }\n    }\n\n    const onMonthModelValueUpdate = (modelValue: VaDatePickerModelValue) => {\n      // Do not update model value if we just want to change view\n      if (props.type === 'month') { valueComputed.value = modelValue }\n    }\n\n    const onYearClick = (date : Date) => {\n      emit('click:year', date)\n\n      const year = date.getFullYear()\n\n      if (props.type !== 'year') {\n        syncView.value = { type: 'month', year, month: syncView.value.month }\n      }\n    }\n\n    const onYearModelValueUpdate = (modelValue: VaDatePickerModelValue) => {\n      // Do not update model value if we just want to change view\n      if (props.type === 'year') { valueComputed.value = modelValue }\n    }\n\n    const { colorsToCSSVariable } = useColors()\n\n    const colorsStyle = colorsToCSSVariable({\n      color: props.color,\n      'weekends-color': props.weekendsColor,\n    }, 'va-date-picker')\n\n    const currentPicker = ref<ComponentOptions | null>(null)\n\n    watch(syncView, (newValue, prevValue) => {\n      // Don't focus new picker if user does not change type\n      if (newValue.type === prevValue.type) { return }\n\n      nextTick(() => {\n        if (currentPicker.value) { currentPicker.value.$el.focus() }\n      })\n    })\n\n    const isPickerReadonly = (pickerName: 'year' | 'month' | 'day') => {\n      return props.readonly && props.type === pickerName\n    }\n\n    return {\n      dayPickerProps: filterComponentProps(props, extractComponentProps(VaDayPicker)),\n      headerProps: filterComponentProps(props, extractComponentProps(VaDatePickerHeader)),\n      monthPickerProps: filterComponentProps(props, extractComponentProps(VaMonthPicker)),\n      yearPickerProps: filterComponentProps(props, extractComponentProps(VaYearPicker)),\n\n      syncView,\n\n      classComputed,\n      valueComputed,\n\n      onDayModelValueUpdate,\n\n      onMonthClick,\n      onMonthModelValueUpdate,\n\n      onYearClick,\n      onYearModelValueUpdate,\n\n      colorsStyle,\n      currentPicker,\n\n      isPickerReadonly,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import 'variables';\n\n.va-date-picker {\n  --va-date-picker-content-height: calc(var(--va-date-picker-cell-size) * 7 + var(--va-date-picker-cell-gap) * 6);\n\n  width: calc(var(--va-date-picker-cell-size) * 7 + var(--va-date-picker-cell-gap) * 6);\n  font-family: var(--va-font-family);\n\n  &__picker-wrapper {\n    height: var(--va-date-picker-content-height);\n  }\n\n  &_without-week-days {\n    --va-date-picker-content-height: calc(var(--va-date-picker-cell-size) * 6 + var(--va-date-picker-cell-gap) * 6);\n  }\n\n  &_mobile {\n    .va-day-picker,\n    .va-month-picker,\n    .va-year-picker {\n      height: 100%;\n    }\n  }\n\n  &_disabled {\n    opacity: 0.4;\n    position: relative;\n\n    &::before {\n      content: '';\n      position: absolute;\n      height: 100%;\n      width: 100%;\n      z-index: 100;\n    }\n  }\n}\n\n.va-date-picker-header {\n  padding-bottom: 0.25rem;\n}\n</style>\n","<template>\n  <div class=\"va-date-picker\" :class=\"classComputed\" :style=\"colorsStyle\">\n    <va-date-picker-header\n      v-bind=\"headerProps\"\n      v-model:view=\"syncView\"\n    >\n      <template v-for=\"(_, name) in $slots\" v-slot:[name]=\"bind\">\n        <slot :name=\"name\" v-bind=\"bind\" />\n      </template>\n    </va-date-picker-header>\n\n    <div class=\"va-date-picker__picker-wrapper\">\n      <va-day-picker\n        v-if=\"syncView.type === 'day'\"\n        v-bind=\"dayPickerProps\"\n        ref=\"currentPicker\"\n        :model-value=\"valueComputed\"\n        :view=\"syncView\"\n        :readonly=\"isPickerReadonly('day')\"\n        @update:model-value=\"onDayModelValueUpdate\"\n        @hover:day=\"(value) => $emit('hover:day', value)\"\n        @click:day=\"(value) => $emit('click:day', value)\"\n      >\n        <template v-for=\"(_, name) in $slots\" v-slot:[name]=\"bind\">\n          <slot :name=\"name\" v-bind=\"bind\" />\n        </template>\n      </va-day-picker>\n\n      <va-month-picker\n        v-if=\"syncView.type === 'month'\"\n        v-bind=\"monthPickerProps\"\n        ref=\"currentPicker\"\n        :view=\"syncView\"\n        :model-value=\"valueComputed\"\n        :readonly=\"isPickerReadonly('month')\"\n        @update:model-value=\"onMonthModelValueUpdate\"\n        @hover:month=\"(value) => $emit('hover:month', value)\"\n        @click:month=\"onMonthClick\"\n      >\n        <template v-for=\"(_, name) in $slots\" v-slot:[name]=\"bind\">\n          <slot :name=\"name\" v-bind=\"bind\" />\n        </template>\n      </va-month-picker>\n\n      <va-year-picker\n        v-if=\"syncView.type === 'year'\"\n        v-bind=\"yearPickerProps\"\n        ref=\"currentPicker\"\n        :view=\"syncView\"\n        :model-value=\"valueComputed\"\n        :readonly=\"isPickerReadonly('year')\"\n        @hover:year=\"(value) => $emit('hover:year', value)\"\n        @update:model-value=\"onYearModelValueUpdate\"\n        @click:year=\"onYearClick\"\n      >\n        <template v-for=\"(_, name) in $slots\" v-slot:[name]=\"bind\">\n          <slot :name=\"name\" v-bind=\"bind\" />\n        </template>\n      </va-year-picker>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { ComponentOptions, computed, defineComponent, nextTick, PropType, ref, watch } from 'vue'\nimport { useStateful, useStatefulProps, useStatefulEmits } from '../../composables/useStateful'\nimport { useColors } from '../../services/color-config/color-config'\n\nimport { VaDatePickerModelValue, VaDatePickerType, VaDatePickerView } from './types/types'\nimport { filterComponentProps, extractComponentProps, extractComponentEmits } from '../../utils/child-props'\nimport { useView } from './hooks/view'\n\nimport VaDayPicker from './components/VaDayPicker/VaDayPicker.vue'\nimport VaDatePickerHeader from './components/VaDatePickerHeader/VaDatePickerHeader.vue'\nimport VaMonthPicker from './components/VaMonthPicker/VaMonthPicker.vue'\nimport VaYearPicker from './components/VaYearPicker/VaYearPicker.vue'\n\nconst DEFAULT_MONTH_NAMES = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\nconst DEFAULT_WEEKDAY_NAMES = ['SU', 'MO', 'TU', 'WE', 'TH', 'FR', 'SA']\n\nexport default defineComponent({\n  name: 'VaDatePicker',\n\n  components: { VaDayPicker, VaDatePickerHeader, VaMonthPicker, VaYearPicker },\n\n  props: {\n    ...useStatefulProps,\n    ...extractComponentProps(VaDatePickerHeader),\n    ...extractComponentProps(VaDayPicker),\n    ...extractComponentProps(VaMonthPicker),\n    ...extractComponentProps(VaYearPicker),\n    modelValue: { type: [Date, Array, Object] as PropType<VaDatePickerModelValue | undefined> },\n    monthNames: { type: Array as PropType<string[]>, required: false, default: DEFAULT_MONTH_NAMES },\n    weekdayNames: { type: Array as PropType<string[]>, required: false, default: DEFAULT_WEEKDAY_NAMES },\n    view: { type: Object as PropType<VaDatePickerView> },\n    type: { type: String as PropType<VaDatePickerType>, default: 'day' },\n    readonly: { type: Boolean, default: false },\n    disabled: { type: Boolean, default: false },\n\n    // Colors\n    color: { type: String, default: undefined },\n    weekendsColor: { type: String, default: undefined },\n  },\n\n  emits: [\n    ...useStatefulEmits,\n    ...extractComponentEmits(VaDatePickerHeader),\n    ...extractComponentEmits(VaYearPicker),\n    ...extractComponentEmits(VaDayPicker),\n    ...extractComponentEmits(VaMonthPicker),\n  ],\n\n  setup (props, { emit }) {\n    const { valueComputed } = useStateful(props, emit)\n\n    const { syncView } = useView(props, emit, { type: props.type })\n\n    const classComputed = computed(() => ({\n      'va-date-picker_without-week-days': props.hideWeekDays,\n      'va-date-picker_disabled': props.disabled,\n    }))\n\n    const onDayModelValueUpdate = (modelValue: VaDatePickerModelValue) => {\n      if (props.readonly) { return }\n\n      // Do not update model value if we just want to change view (We can change it for now, but later we can add here timepicker)\n      if (props.type === 'day') { valueComputed.value = modelValue }\n    }\n\n    const onMonthClick = (date: Date) => {\n      emit('click:month', date)\n      const year = date.getFullYear()\n      const month = date.getMonth()\n      if (props.type !== 'month') {\n        syncView.value = { type: 'day', year, month }\n      }\n    }\n\n    const onMonthModelValueUpdate = (modelValue: VaDatePickerModelValue) => {\n      // Do not update model value if we just want to change view\n      if (props.type === 'month') { valueComputed.value = modelValue }\n    }\n\n    const onYearClick = (date : Date) => {\n      emit('click:year', date)\n\n      const year = date.getFullYear()\n\n      if (props.type !== 'year') {\n        syncView.value = { type: 'month', year, month: syncView.value.month }\n      }\n    }\n\n    const onYearModelValueUpdate = (modelValue: VaDatePickerModelValue) => {\n      // Do not update model value if we just want to change view\n      if (props.type === 'year') { valueComputed.value = modelValue }\n    }\n\n    const { colorsToCSSVariable } = useColors()\n\n    const colorsStyle = colorsToCSSVariable({\n      color: props.color,\n      'weekends-color': props.weekendsColor,\n    }, 'va-date-picker')\n\n    const currentPicker = ref<ComponentOptions | null>(null)\n\n    watch(syncView, (newValue, prevValue) => {\n      // Don't focus new picker if user does not change type\n      if (newValue.type === prevValue.type) { return }\n\n      nextTick(() => {\n        if (currentPicker.value) { currentPicker.value.$el.focus() }\n      })\n    })\n\n    const isPickerReadonly = (pickerName: 'year' | 'month' | 'day') => {\n      return props.readonly && props.type === pickerName\n    }\n\n    return {\n      dayPickerProps: filterComponentProps(props, extractComponentProps(VaDayPicker)),\n      headerProps: filterComponentProps(props, extractComponentProps(VaDatePickerHeader)),\n      monthPickerProps: filterComponentProps(props, extractComponentProps(VaMonthPicker)),\n      yearPickerProps: filterComponentProps(props, extractComponentProps(VaYearPicker)),\n\n      syncView,\n\n      classComputed,\n      valueComputed,\n\n      onDayModelValueUpdate,\n\n      onMonthClick,\n      onMonthModelValueUpdate,\n\n      onYearClick,\n      onYearModelValueUpdate,\n\n      colorsStyle,\n      currentPicker,\n\n      isPickerReadonly,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import 'variables';\n\n.va-date-picker {\n  --va-date-picker-content-height: calc(var(--va-date-picker-cell-size) * 7 + var(--va-date-picker-cell-gap) * 6);\n\n  width: calc(var(--va-date-picker-cell-size) * 7 + var(--va-date-picker-cell-gap) * 6);\n  font-family: var(--va-font-family);\n\n  &__picker-wrapper {\n    height: var(--va-date-picker-content-height);\n  }\n\n  &_without-week-days {\n    --va-date-picker-content-height: calc(var(--va-date-picker-cell-size) * 6 + var(--va-date-picker-cell-gap) * 6);\n  }\n\n  &_mobile {\n    .va-day-picker,\n    .va-month-picker,\n    .va-year-picker {\n      height: 100%;\n    }\n  }\n\n  &_disabled {\n    opacity: 0.4;\n    position: relative;\n\n    &::before {\n      content: '';\n      position: absolute;\n      height: 100%;\n      width: 100%;\n      z-index: 100;\n    }\n  }\n}\n\n.va-date-picker-header {\n  padding-bottom: 0.25rem;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}