{"ast":null,"code":"import { computed as e, getCurrentInstance as t } from \"vue\";\n\nconst a = {\n  tag: {\n    type: String,\n    default: \"router-link\"\n  },\n  to: {\n    type: [String, Object],\n    default: null\n  },\n  replace: {\n    type: Boolean,\n    default: !1\n  },\n  append: {\n    type: Boolean,\n    default: !1\n  },\n  exact: {\n    type: Boolean,\n    default: !1\n  },\n  activeClass: {\n    type: String,\n    default: \"\"\n  },\n  exactActiveClass: {\n    type: String,\n    default: \"\"\n  },\n  href: {\n    type: String,\n    default: \"\"\n  },\n  target: {\n    type: String,\n    default: \"\"\n  }\n},\n      useRouterLink = a => {\n  const r = e(() => {\n    var e;\n    return null === (e = t()) || void 0 === e ? void 0 : e.appContext.config.globalProperties;\n  }),\n        l = e(() => {\n    var e;\n    return !!(null === (e = r.value) || void 0 === e ? void 0 : e.$nuxt);\n  }),\n        u = e(() => {\n    var e;\n    return null === (e = r.value) || void 0 === e ? void 0 : e.$router;\n  }),\n        o = e(() => {\n    var e;\n    return null === (e = r.value) || void 0 === e ? void 0 : e.$route;\n  }),\n        n = e(() => Boolean(a.to || a.append || a.replace || a.exact || a.activeClass || a.href || a.exactActiveClass)),\n        v = e(() => \"a\" === a.tag || a.href && !a.to || a.target ? \"a\" : \"nuxt-link\" === a.tag || l.value && n.value ? \"nuxt-link\" : \"router-link\" === a.tag || n.value ? \"router-link\" : a.tag),\n        i = e(() => {\n    if (!u.value || !a.to) return !1;\n    const e = u.value.resolve(a.to).href,\n          t = u.value.currentRoute.value.path;\n    return e.replace(\"#\", \"\") === t.replace(\"#\", \"\");\n  }),\n        p = e(() => {\n    var e;\n    return a.href || (a.to ? null === (e = u.value) || void 0 === e ? void 0 : e.resolve(a.to, o.value).href : null);\n  });\n  return {\n    hasRouterLinkParams: n,\n    tagComputed: v,\n    isActiveRouterLink: i,\n    hrefComputed: p\n  };\n};\n\nexport { useRouterLink as a, a as u };","map":{"version":3,"mappings":"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","names":["useRouterLinkProps","tag","type","String","default","to","Object","replace","Boolean","append","exact","activeClass","exactActiveClass","href","target","useRouterLink","props","globalProperties","computed","appContext","getCurrentInstance","config","isNuxt","value","$nuxt","vueRouter","$router","vueRoute","$route","hasRouterLinkParams","tagComputed","isActiveRouterLink","resolve","currentHref","currentRoute","path","hrefComputed"],"sources":["../../src/composables/useRouterLink.ts"],"sourcesContent":["import { computed, PropType, getCurrentInstance } from 'vue'\n\nexport interface RouterLinkProps {\n  tag: string\n  to: string | Record<string, unknown>\n  replace: boolean\n  append: boolean\n  exact: boolean\n  activeClass: string\n  exactActiveClass: string\n  href: string\n  target: string\n  [prop: string]: unknown\n}\n\nexport const useRouterLinkProps = {\n  tag: { type: String as PropType<string>, default: 'router-link' },\n  to: { type: [String, Object] as PropType<string | Record<string, unknown>>, default: null },\n  replace: { type: Boolean as PropType<boolean>, default: false },\n  append: { type: Boolean as PropType<boolean>, default: false },\n  exact: { type: Boolean as PropType<boolean>, default: false },\n  activeClass: { type: String as PropType<string>, default: '' },\n  exactActiveClass: { type: String as PropType<string>, default: '' },\n  href: { type: String as PropType<string>, default: '' },\n  target: { type: String as PropType<string>, default: '' },\n}\n\nexport const useRouterLink = (props: RouterLinkProps) => {\n  const globalProperties = computed(() => getCurrentInstance()?.appContext.config.globalProperties)\n  const isNuxt = computed(() => !!globalProperties.value?.$nuxt)\n  const vueRouter = computed(() => globalProperties.value?.$router)\n  const vueRoute = computed(() => globalProperties.value?.$route)\n\n  const hasRouterLinkParams = computed(() => Boolean(\n    props.to ||\n    props.append ||\n    props.replace ||\n    props.exact ||\n    props.activeClass ||\n    props.href ||\n    props.exactActiveClass,\n  ))\n\n  const tagComputed = computed(() => {\n    if (props.tag === 'a' || (props.href && !props.to) || props.target) {\n      return 'a'\n    }\n    if (props.tag === 'nuxt-link' || (isNuxt.value && hasRouterLinkParams.value)) {\n      return 'nuxt-link'\n    }\n    if (props.tag === 'router-link' || hasRouterLinkParams.value) {\n      return 'router-link'\n    }\n\n    return props.tag\n  })\n\n  const isActiveRouterLink = computed(() => {\n    if (!vueRouter.value || !props.to) {\n      return false\n    }\n\n    const to = vueRouter.value.resolve(props.to).href\n    const currentHref = vueRouter.value.currentRoute.value.path\n\n    return to.replace('#', '') === currentHref.replace('#', '')\n  })\n\n  const hrefComputed = computed(() => {\n    // to resolve href on server for SEO optimization\n    // https://github.com/nuxt/nuxt.js/issues/8204\n    // @ts-ignore\n    return props.href || (props.to ? vueRouter.value?.resolve(props.to, vueRoute.value).href : null)\n  })\n\n  return {\n    hasRouterLinkParams,\n    tagComputed,\n    isActiveRouterLink,\n    hrefComputed,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}