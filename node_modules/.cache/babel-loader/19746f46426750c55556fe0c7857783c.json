{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport { w as t } from \"./withConfigTransport.js\";\nimport { defineComponent as o, reactive as r, computed as a, resolveComponent as n, openBlock as u, createElementBlock as e, normalizeClass as i, normalizeStyle as d, createVNode as l, withCtx as p, renderSlot as s } from \"vue\";\nimport { d as g, u as b } from \"./color-config.js\";\nimport { V as v } from \"./VaConfig.js\";\nimport { s as m } from \"./style-inject.es.js\";\nimport \"colortranslator\";\nvar f = o({\n  name: \"VaButtonGroup\",\n  components: {\n    VaConfig: v\n  },\n  props: {\n    color: {\n      type: String,\n      default: \"primary\"\n    },\n    gradient: {\n      type: Boolean,\n      default: void 0\n    },\n    textColor: {\n      type: String,\n      default: void 0\n    },\n    rounded: {\n      type: Boolean,\n      default: !0\n    },\n    outline: {\n      type: Boolean,\n      default: !1\n    },\n    flat: {\n      type: Boolean,\n      default: !1\n    },\n    size: {\n      type: String,\n      default: \"medium\",\n      validator: t => [\"medium\", \"small\", \"large\"].includes(t)\n    }\n  },\n\n  setup(t) {\n    const o = r({\n      VaButton: { ...t,\n        color: t.gradient ? \"#00000000\" : t.color\n      }\n    }),\n          {\n      getColor: n\n    } = b(),\n          u = a(() => n(t.color)),\n          e = a(() => t.outline || t.flat ? \"\" : t.gradient ? g(u.value) : u.value);\n    return {\n      buttonConfig: o,\n      computedStyle: a(() => ({\n        [t.gradient ? \"background-image\" : \"background\"]: e.value\n      })),\n      computedClass: a(() => ({\n        \"va-button-group_square\": !t.rounded\n      }))\n    };\n  }\n\n});\nm(\":root{--va-button-group-display:flex;--va-button-group-justify-content:stretch;--va-button-group-border-radius:1.5rem;--va-button-group-button-margin:0;--va-button-group-lg-border-radius:2rem;--va-button-group-sm-border-radius:1rem}.va-button-group{border-radius:9999999px;display:flex;font-family:var(--va-font-family);justify-content:stretch;overflow:hidden;width:-webkit-max-content;width:-moz-max-content;width:max-content}.va-button-group_square{border-radius:var(--va-button-square-border-radius)}.va-button-group .va-button{box-shadow:none!important;margin:var(--va-button-group-button-margin)}.va-button-group>.va-button:last-child{padding-right:1rem!important;width:auto}.va-button-group>.va-button:last-child.va-button--small{padding-right:.75rem!important}.va-button-group>.va-button:last-child.va-button--large{padding-right:1.5rem!important}.va-button-group>.va-button:first-child{padding-left:1rem;width:auto}.va-button-group>.va-button:first-child.va-button--small{padding-left:.75rem}.va-button-group>.va-button:first-child.va-button--large{padding-left:1.5rem}.va-button-group>.va-button:not(:last-child){border-bottom-right-radius:0;border-right:0;border-top-right-radius:0;padding-right:.5rem}.va-button-group>.va-button:not(:last-child) .va-button__content{margin-right:0}.va-button-group>.va-button+.va-button{border-bottom-left-radius:0;border-left:0;border-top-left-radius:0;padding-left:.5rem}.va-button-group>.va-button+.va-button .va-button__content{margin-left:0}\"), f.render = function render(t, o, r, a, g, b) {\n  const v = n(\"va-config\");\n  return u(), e(\"div\", {\n    class: i([\"va-button-group\", t.computedClass]),\n    style: d(t.computedStyle)\n  }, [l(v, {\n    components: t.buttonConfig\n  }, {\n    default: p(() => [s(t.$slots, \"default\")]),\n    _: 3\n  }, 8, [\"components\"])], 6);\n}, f.__file = \"src/components/va-button-group/VaButtonGroup.vue\";\nvar c = t(f);\nexport { c as default };","map":{"version":3,"mappings":";;;;;;;AAeA,QAAeA,EAAgB;AAC7BC,QAAM,eADuB;AAE7BC,cAAY;AAAEC;AAAF,GAFiB;AAG7BC,SAAO;AACLC,WAAO;AAAEC,YAAMC,MAAR;AAAoCC,eAAS;AAA7C,KADF;AAELC,cAAU;AAAEH,YAAMI,OAAR;AAAsCF,oBAASG;AAA/C,KAFL;AAGLC,eAAW;AAAEN,YAAMC,MAAR;AAAoCC,oBAASG;AAA7C,KAHN;AAILE,aAAS;AAAEP,YAAMI,OAAR;AAAsCF,gBAAS;AAA/C,KAJJ;AAKLM,aAAS;AAAER,YAAMI,OAAR;AAAsCF,gBAAS;AAA/C,KALJ;AAMLO,UAAM;AAAET,YAAMI,OAAR;AAAsCF,gBAAS;AAA/C,KAND;AAOLQ,UAAM;AACJV,YAAMC,MADF;AAEJC,eAAS,QAFL;AAGJS,iBAAYC,KAAc,CAAC,QAAD,EAAW,OAAX,EAAoB,OAApB,EAA6BC,QAA7B,CAAsCD,CAAtC;AAHtB;AAPD,GAHsB;;AAgB7BE,QAAOhB,CAAPgB,EAAOhB;AACL,UAAMiB,IAAeC,EAAS;AAC5BC,gBAAU,KACLnB,CADK;AAERC,eAAOD,EAAMK,QAANL,GAAiB,WAAjBA,GAA+BA,EAAMC;AAFpC;AADkB,KAATiB,CAArB;AAAA,UAGgDjB;AAI1CmB,gBAAEA;AAJwCnB,QAI3BoB,GAPrB;AAAA,UAQMC,IAAgBC,EAAS,MAAMH,EAASpB,EAAMC,KAAfmB,CAAfG,CARtB;AAAA,UASMC,IAAqBD,EAAS,MAC9BvB,EAAMU,OAANV,IAAiBA,EAAMW,IAAvBX,GAAsC,EAAtCA,GAEGA,EAAMK,QAANL,GAAiByB,EAAsBH,EAAcI,KAApCD,CAAjBzB,GAA8DsB,EAAcI,KAH1DH,CAT3B;AAsBA,WAAO;AACLN,qBADK;AAELU,qBAVoBJ,EAAS,OAGtB;AAAE,SAFkBvB,EAAMK,QAANL,GAAiB,kBAAjBA,GAAsC,YAExD,GAAsBwB,EAAmBE;AAA3C,OAHsB,CAATH,CAQf;AAGLK,qBALoBL,EAAS;AAAS,mCAA2BvB,EAAMS;AAA1C,QAATc;AAEf,KAAP;AAFyEd;;AArC9C,CAAhBb,CAAf;AAqC6Ea;AAAAA;AAAAA,cCnD3EoB;AAAKC,cAAM,iBAANA,EAAuDC,eAAvDD,EAALD;AAA8BG,aAAOD,eAAPC;AAA9BH,KAAqCE,CACnCE;AAAYnC,gBAAYiC;AAAxBE,KAAwBF;AAAAA,eACtB,8BADsBA;AACtBG;AADsBH,GAAxBE,EACEC,CADFD,EACEC,cADFD,CADmCF,CAArCF,EAEIK,CAFJL,CDmD2EpB;ACjDvEyB,CDiDuEzB,ECjDvEyB,6DDiDuEzB;AE/C7E,QAAe0B,EAAoBC,CAApBD,CAAf;AAAmCC","names":["defineComponent","name","components","VaConfig","props","color","type","String","default","gradient","Boolean","undefined","textColor","rounded","outline","flat","size","validator","v","includes","setup","buttonConfig","reactive","VaButton","getColor","useColors","colorComputed","computed","computedBackground","getGradientBackground","value","computedStyle","computedClass","_createElementBlock","class","_ctx","style","_createVNode","_renderSlot","withConfigTransport","VaButtonGroup"],"sources":["../../src/components/va-button-group/VaButtonGroup.vue","../../src/components/va-button-group/VaButtonGroup.vue?vue&type=template&id=f503100e&lang.js","../../src/components/va-button-group/index.ts"],"sourcesContent":["<template>\n  <div class=\"va-button-group\" :style=\"computedStyle\" :class=\"computedClass\">\n    <va-config :components=\"buttonConfig\">\n      <slot />\n    </va-config>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, PropType, reactive } from 'vue'\n\nimport VaConfig from '../va-config'\nimport { getGradientBackground } from '../../services/color-config/color-functions'\nimport { useColors } from '../../composables/useColor'\n\nexport default defineComponent({\n  name: 'VaButtonGroup',\n  components: { VaConfig },\n  props: {\n    color: { type: String as PropType<string>, default: 'primary' },\n    gradient: { type: Boolean as PropType<boolean>, default: undefined },\n    textColor: { type: String as PropType<string>, default: undefined },\n    rounded: { type: Boolean as PropType<boolean>, default: true },\n    outline: { type: Boolean as PropType<boolean>, default: false },\n    flat: { type: Boolean as PropType<boolean>, default: false },\n    size: {\n      type: String as PropType<string>,\n      default: 'medium',\n      validator: (v: string) => ['medium', 'small', 'large'].includes(v),\n    },\n  },\n  setup (props) {\n    const buttonConfig = reactive({\n      VaButton: {\n        ...props,\n        color: props.gradient ? '#00000000' : props.color,\n      },\n    })\n\n    const { getColor } = useColors()\n    const colorComputed = computed(() => getColor(props.color))\n    const computedBackground = computed(() => {\n      if (props.outline || props.flat) { return '' }\n\n      return props.gradient ? getGradientBackground(colorComputed.value) : colorComputed.value\n    })\n    const computedStyle = computed(() => {\n      const backgroundProperty = props.gradient ? 'background-image' : 'background'\n\n      return { [backgroundProperty]: computedBackground.value }\n    })\n\n    const computedClass = computed(() => ({ 'va-button-group_square': !props.rounded }))\n\n    return {\n      buttonConfig,\n      computedStyle,\n      computedClass,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"variables\";\n\n.va-button-group {\n  display: flex;\n  justify-content: stretch;\n  width: max-content;\n  overflow: hidden;\n  border-radius: 9999999px;\n  font-family: var(--va-font-family);\n\n  &_square {\n    border-radius: var(--va-button-square-border-radius);\n  }\n\n  .va-button {\n    margin: var(--va-button-group-button-margin);\n    box-shadow: none !important;\n  }\n\n  & > .va-button:last-child {\n    width: auto;\n    padding-right: 1rem !important;\n\n    &.va-button--small {\n      padding-right: 0.75rem !important;\n    }\n\n    &.va-button--large {\n      padding-right: 1.5rem !important;\n    }\n  }\n\n  & > .va-button:first-child {\n    width: auto;\n    padding-left: 1rem;\n\n    &.va-button--small {\n      padding-left: 0.75rem;\n    }\n\n    &.va-button--large {\n      padding-left: 1.5rem;\n    }\n  }\n\n  & > .va-button:not(:last-child) {\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n    padding-right: 0.5rem;\n    border-right: 0;\n\n    .va-button__content {\n      /**\n        We need to prevent minus margin because we had:\n          border-right: 2px;\n          maring-right: -2px;\n      */\n      margin-right: 0;\n    }\n  }\n\n  & > .va-button + .va-button {\n    border-top-left-radius: 0;\n    border-bottom-left-radius: 0;\n    padding-left: 0.5rem;\n    border-left: 0;\n\n    .va-button__content {\n      /**\n        We need to prevent minus margin because we had:\n          border-left: 2px;\n          maring-left: -2px;\n      */\n      margin-left: 0;\n    }\n  }\n}\n</style>\n","<template>\n  <div class=\"va-button-group\" :style=\"computedStyle\" :class=\"computedClass\">\n    <va-config :components=\"buttonConfig\">\n      <slot />\n    </va-config>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, PropType, reactive } from 'vue'\n\nimport VaConfig from '../va-config'\nimport { getGradientBackground } from '../../services/color-config/color-functions'\nimport { useColors } from '../../composables/useColor'\n\nexport default defineComponent({\n  name: 'VaButtonGroup',\n  components: { VaConfig },\n  props: {\n    color: { type: String as PropType<string>, default: 'primary' },\n    gradient: { type: Boolean as PropType<boolean>, default: undefined },\n    textColor: { type: String as PropType<string>, default: undefined },\n    rounded: { type: Boolean as PropType<boolean>, default: true },\n    outline: { type: Boolean as PropType<boolean>, default: false },\n    flat: { type: Boolean as PropType<boolean>, default: false },\n    size: {\n      type: String as PropType<string>,\n      default: 'medium',\n      validator: (v: string) => ['medium', 'small', 'large'].includes(v),\n    },\n  },\n  setup (props) {\n    const buttonConfig = reactive({\n      VaButton: {\n        ...props,\n        color: props.gradient ? '#00000000' : props.color,\n      },\n    })\n\n    const { getColor } = useColors()\n    const colorComputed = computed(() => getColor(props.color))\n    const computedBackground = computed(() => {\n      if (props.outline || props.flat) { return '' }\n\n      return props.gradient ? getGradientBackground(colorComputed.value) : colorComputed.value\n    })\n    const computedStyle = computed(() => {\n      const backgroundProperty = props.gradient ? 'background-image' : 'background'\n\n      return { [backgroundProperty]: computedBackground.value }\n    })\n\n    const computedClass = computed(() => ({ 'va-button-group_square': !props.rounded }))\n\n    return {\n      buttonConfig,\n      computedStyle,\n      computedClass,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"variables\";\n\n.va-button-group {\n  display: flex;\n  justify-content: stretch;\n  width: max-content;\n  overflow: hidden;\n  border-radius: 9999999px;\n  font-family: var(--va-font-family);\n\n  &_square {\n    border-radius: var(--va-button-square-border-radius);\n  }\n\n  .va-button {\n    margin: var(--va-button-group-button-margin);\n    box-shadow: none !important;\n  }\n\n  & > .va-button:last-child {\n    width: auto;\n    padding-right: 1rem !important;\n\n    &.va-button--small {\n      padding-right: 0.75rem !important;\n    }\n\n    &.va-button--large {\n      padding-right: 1.5rem !important;\n    }\n  }\n\n  & > .va-button:first-child {\n    width: auto;\n    padding-left: 1rem;\n\n    &.va-button--small {\n      padding-left: 0.75rem;\n    }\n\n    &.va-button--large {\n      padding-left: 1.5rem;\n    }\n  }\n\n  & > .va-button:not(:last-child) {\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n    padding-right: 0.5rem;\n    border-right: 0;\n\n    .va-button__content {\n      /**\n        We need to prevent minus margin because we had:\n          border-right: 2px;\n          maring-right: -2px;\n      */\n      margin-right: 0;\n    }\n  }\n\n  & > .va-button + .va-button {\n    border-top-left-radius: 0;\n    border-bottom-left-radius: 0;\n    padding-left: 0.5rem;\n    border-left: 0;\n\n    .va-button__content {\n      /**\n        We need to prevent minus margin because we had:\n          border-left: 2px;\n          maring-left: -2px;\n      */\n      margin-left: 0;\n    }\n  }\n}\n</style>\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\nimport VaButtonGroup from './VaButtonGroup.vue'\n\nexport * from './VaButtonGroup.vue'\n\nexport default withConfigTransport(VaButtonGroup)\n"]},"metadata":{},"sourceType":"module"}