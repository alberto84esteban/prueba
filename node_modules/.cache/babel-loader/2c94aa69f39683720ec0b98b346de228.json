{"ast":null,"code":"import { E as a, B as t, i as n, F as r } from \"./withConfigTransport.js\";\nvar e = t,\n    l = n,\n    o = a ? a.isConcatSpreadable : void 0;\n\nvar s = r,\n    i = function isFlattenable$1(a) {\n  return l(a) || e(a) || !!(o && a && a[o]);\n};\n\nvar f = function baseFlatten$1(a, t, n, r, e) {\n  var l = -1,\n      o = a.length;\n\n  for (n || (n = i), e || (e = []); ++l < o;) {\n    var f = a[l];\n    t > 0 && n(f) ? t > 1 ? baseFlatten$1(f, t - 1, n, r, e) : s(e, f) : r || (e[e.length] = f);\n  }\n\n  return e;\n};\n\nvar u = function flatten(a) {\n  return (null == a ? 0 : a.length) ? f(a, 1) : [];\n};\n\nexport { u as f };","map":{"version":3,"mappings":";AAAA,IACIA,IAAcC,CADlB;AAAA,IAEIC,IAAUC,CAFd;AAAA,IAKIC,IALSC,MAK0BC,kBAL1BD,GAK0BC,KAAqBC,CAL5D;;AAK4DA,ICLxDC,IAAYH,CDK4CE;AAAAA,ICJxDE,IDaJ,SAASA,eAAT,CAAuBC,CAAvB,EAAuBA;AACrB,SAAOR,EAAQQ,CAARR,KAAkBF,EAAYU,CAAZV,CAAlBE,IAA8BQ,GAChCN,KAAoBM,CAApBN,IAA6BM,EAAMN,CAANM,CADGA,CAArC;AACwCN,CAXkBG;;AAWlBH,IEhBtCO,IDcJ,SAASA,aAAT,CAAqBC,CAArB,EAA4BC,CAA5B,EAAmCC,CAAnC,EAA8CC,CAA9C,EAAwDC,CAAxD,EAAwDA;AACtD,MAAIC,KAAS,CAAb;AAAA,MACIC,IAASN,EAAMM,MADnB;;AAMA,OAHAJ,MAAcA,IAAYL,CAA1BK,GACAE,MAAWA,IAAS,EAApBA,CAEA,EAFoB,EAEXC,CAFW,GAEHC,CAAjB,GAAyB;AACvB,QAAIR,IAAQE,EAAMK,CAANL,CAAZ;AACIC,QAAQ,CAARA,IAAaC,EAAUJ,CAAVI,CAAbD,GACEA,IAAQ,CAARA,GAEFF,cAAYD,CAAZC,EAAmBE,IAAQ,CAA3BF,EAA8BG,CAA9BH,EAAyCI,CAAzCJ,EAAmDK,CAAnDL,CAFEE,GAIFL,EAAUQ,CAAVR,EAAkBE,CAAlBF,CALAK,GAOQE,MACVC,EAAOA,EAAOE,MAAdF,IAAwBN,CADdK,CAPRF;AAWN;;AAAA,SAAOG,CAAP;AAAOA,CDlBiCZ;;ACkBjCY,ICbTG,IALA,SAASC,OAAT,CAAiBR,CAAjB,EAAiBA;AAEf,UADsB,QAATA,CAAS,GAAO,CAAP,GAAWA,EAAMM,MACvC,IAAgBP,EAAYC,CAAZD,EAAmB,CAAnBA,CAAhB,GAAwC,EAAxC;AAAwC,CDgBjCK;;AChBiC","names":["isArguments","require$$1","isArray","require$$2","spreadableSymbol","require$$0","isConcatSpreadable","undefined","arrayPush","isFlattenable","value","baseFlatten","array","depth","predicate","isStrict","result","index","length","flatten_1","flatten"],"sources":["../../../../node_modules/lodash/_isFlattenable.js","../../../../node_modules/lodash/_baseFlatten.js","../../../../node_modules/lodash/flatten.js"],"sourcesContent":["var Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n","var arrayPush = require('./_arrayPush'),\n    isFlattenable = require('./_isFlattenable');\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n","var baseFlatten = require('./_baseFlatten');\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nmodule.exports = flatten;\n"]},"metadata":{},"sourceType":"module"}