{"ast":null,"code":"import { __decorate as t } from \"tslib\";\nimport { V as e, m as s, O as i, p as r } from \"./vue-class-component.esm-bundler.js\";\nconst a = e.with(class RouterLinkProps {\n  constructor() {\n    this.tag = r({\n      type: String,\n      default: \"router-link\"\n    }), this.to = r({\n      type: [String, Object]\n    }), this.replace = r({\n      type: Boolean\n    }), this.append = r({\n      type: Boolean\n    }), this.exact = r({\n      type: Boolean\n    }), this.activeClass = r({\n      type: String\n    }), this.exactActiveClass = r({\n      type: String\n    }), this.href = r({\n      type: String\n    }), this.target = r({\n      type: String\n    });\n  }\n\n});\nlet o = class RouterLinkMixin extends s(a) {\n  get tagComputed() {\n    const t = !!Object.getOwnPropertyDescriptor(this, \"$nuxt\");\n    return \"a\" === this.tag || this.href && !this.to || this.target ? \"a\" : \"nuxt-link\" === this.tag || t && this.hasRouterLinkParams ? \"nuxt-link\" : \"router-link\" === this.tag || this.hasRouterLinkParams ? \"router-link\" : this.tag;\n  }\n\n  get hasRouterLinkParams() {\n    return Boolean(this.to || this.append || this.replace || this.exact || this.activeClass || this.href || this.exactActiveClass);\n  }\n\n  get isActiveRouterLink() {\n    if (!this.$router || !this.to) return !1;\n    const t = this.$router.resolve(this.to).href,\n          e = this.$router.currentRoute.value.path;\n    return t.replace(\"#\", \"\") === e.replace(\"#\", \"\");\n  }\n\n  get hrefComputed() {\n    var t;\n    return this.href || (this.to ? null === (t = this.$router) || void 0 === t ? void 0 : t.resolve(this.to, this.$route).href : null);\n  }\n\n  created() {\n    this.hasRouterLinkMixin = !0;\n  }\n\n};\no = t([i({})], o);\nexport { o as R };","map":{"version":3,"mappings":";;AAcA,MAAMA,IAAuBC,EAAIC,IAAJD,CAZ7B,MAAME,eAAN,CAAMA;AAANC;AACEC,eAAMC,EAAa;AAAEC,YAAMC,MAAR;AAAgBC,eAAS;AAAzB,KAAbH,CAAND,EACAA,UAAKC,EAAuC;AAAEC,YAAM,CAACC,MAAD,EAASE,MAAT;AAAR,KAAvCJ,CADLD,EAEAA,eAAUC,EAAc;AAAEC,YAAMI;AAAR,KAAdL,CAFVD,EAGAA,cAASC,EAAc;AAAEC,YAAMI;AAAR,KAAdL,CAHTD,EAIAA,aAAQC,EAAc;AAAEC,YAAMI;AAAR,KAAdL,CAJRD,EAKAA,mBAAcC,EAAa;AAAEC,YAAMC;AAAR,KAAbF,CALdD,EAMAA,wBAAmBC,EAAa;AAAEC,YAAMC;AAAR,KAAbF,CANnBD,EAOAA,YAAOC,EAAa;AAAEC,YAAMC;AAAR,KAAbF,CAPPD,EAQAA,cAASC,EAAa;AAAEC,YAAMC;AAAR,KAAbF,CARTD;AAQ8BG;;AAT1BL,CAYuBF,CAA7B;AAHgCO,IAMnBI,IAAb,MAAaA,eAAb,SAAqCC,EACnCb,CADmCa,CAArC,CACEb;AAIAc;AACE,UAAMC,MAAWL,OAAOM,wBAAPN,CAAgCL,IAAhCK,EAAsC,OAAtCA,CAAjB;AACA,WAAiB,QAAbL,KAAKY,GAAQ,IAAQZ,KAAKa,IAALb,IAAKa,CAASb,KAAKc,EAA3B,IAAkCd,KAAKe,MAAvC,GACR,GADQ,GAGA,gBAAbf,KAAKY,GAAQ,IAAgBF,KAAUV,KAAKgB,mBAA/B,GACR,WADQ,GAGA,kBAAbhB,KAAKY,GAAQ,IAAiBZ,KAAKgB,mBAAtB,GACR,aADQ,GAGVhB,KAAKY,GATZ;AAYFI;;AAAAA;AACE,WAAOV,QACLN,KAAKc,EAALd,IACAA,KAAKiB,MADLjB,IAEAA,KAAKkB,OAFLlB,IAGAA,KAAKmB,KAHLnB,IAIAA,KAAKoB,WAJLpB,IAKAA,KAAKa,IALLb,IAMAA,KAAKqB,gBAPAf,CAAP;AAWFgB;;AAAAA;AACE,SAAMtB,KAAauB,OAAnB,IAAmBA,CAAYvB,KAAKc,EAApC,EACE,QAAO,CAAP;AAGF,UAIMA,IAJWd,KAAauB,OAAbvB,CAAqBwB,OAArBxB,CACfA,KAAKc,EADUd,EAIEa,IAJnB;AAAA,UAKMY,IAAezB,KAAauB,OAAbvB,CAAqB0B,YAArB1B,CAAkC2B,KAAlC3B,CAAwC4B,IAL7D;AAOA,WAAOd,EAAGI,OAAHJ,CAAW,GAAXA,EAAgB,EAAhBA,MAAwBW,EAAYP,OAAZO,CAAoB,GAApBA,EAAyB,EAAzBA,CAA/B;AAGFI;;AAAAA;AAAAA;AAIE,WAAO7B,KAAKa,IAALb,KAAcA,KAAKc,EAALd,GAAKc,cAAMd,KAAauB,OAAnBT,KAAmBS,YAAnBT,GAAmBS,MAAnBT,GAAmBS,EAASC,OAATD,CAAiBvB,KAAKc,EAAtBS,EAA2BvB,KAAa8B,MAAxCP,EAAgDV,IAAxEb,GAA+E,IAA7FA,CAAP;AAGF+B;;AAAAA;AACE/B,SAAKgC,kBAALhC,GAAKgC,CAAqB,CAA1BhC;AAA0B;;AArD5BL,CAP8BQ;AAMnBI,OADZ0B,EAAQ,EAARA,CACY1B;AAAAA","names":["RouterLinkPropsMixin","Vue","with","RouterLinkProps","constructor","this","prop","type","String","default","Object","Boolean","RouterLinkMixin","mixins","tagComputed","isNuxt","getOwnPropertyDescriptor","tag","href","to","target","hasRouterLinkParams","append","replace","exact","activeClass","exactActiveClass","isActiveRouterLink","$router","resolve","currentHref","currentRoute","value","path","hrefComputed","$route","created","hasRouterLinkMixin","Options"],"sources":["../../src/mixins/RouterLinkMixin/RouterLinkMixin.ts"],"sourcesContent":["import { Options, Vue, prop, mixins } from 'vue-class-component'\n\nclass RouterLinkProps {\n  tag = prop<string>({ type: String, default: 'router-link' })\n  to = prop<string | Record<string, unknown>>({ type: [String, Object] })\n  replace = prop<boolean>({ type: Boolean })\n  append = prop<boolean>({ type: Boolean })\n  exact = prop<boolean>({ type: Boolean })\n  activeClass = prop<string>({ type: String })\n  exactActiveClass = prop<string>({ type: String })\n  href = prop<string>({ type: String })\n  target = prop<string>({ type: String })\n}\n\nconst RouterLinkPropsMixin = Vue.with(RouterLinkProps)\n\n@Options({})\nexport class RouterLinkMixin extends mixins(\n  RouterLinkPropsMixin,\n) {\n  hasRouterLinkMixin!: boolean\n\n  get tagComputed () {\n    const isNuxt = !!Object.getOwnPropertyDescriptor(this, '$nuxt')\n    if (this.tag === 'a' || (this.href && !this.to) || this.target) {\n      return 'a'\n    }\n    if (this.tag === 'nuxt-link' || (isNuxt && this.hasRouterLinkParams)) {\n      return 'nuxt-link'\n    }\n    if (this.tag === 'router-link' || this.hasRouterLinkParams) {\n      return 'router-link'\n    }\n    return this.tag\n  }\n\n  get hasRouterLinkParams () {\n    return Boolean(\n      this.to ||\n      this.append ||\n      this.replace ||\n      this.exact ||\n      this.activeClass ||\n      this.href ||\n      this.exactActiveClass,\n    )\n  }\n\n  get isActiveRouterLink () {\n    if (!(this as any).$router || !this.to) {\n      return false\n    }\n\n    const resolve = (this as any).$router.resolve(\n      this.to,\n    )\n\n    const to = resolve.href\n    const currentHref = (this as any).$router.currentRoute.value.path\n\n    return to.replace('#', '') === currentHref.replace('#', '')\n  }\n\n  get hrefComputed () {\n    // to resolve href on server for SEO optimization\n    // https://github.com/nuxt/nuxt.js/issues/8204\n    // @ts-ignore\n    return this.href || (this.to ? (this as any).$router?.resolve(this.to, (this as any).$route).href : null)\n  }\n\n  created () {\n    this.hasRouterLinkMixin = true\n  }\n}\n"]},"metadata":{},"sourceType":"module"}