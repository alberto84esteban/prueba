{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport { w as e } from \"./withConfigTransport.js\";\nimport { defineComponent as o, ref as t, computed as a, onMounted as r, resolveComponent as l, openBlock as s, createBlock as i, withCtx as p, createElementVNode as u, createElementBlock as n, Fragment as d, renderList as m, renderSlot as c } from \"vue\";\nimport { g as f } from \"./utils.js\";\nimport { u as b, a as g } from \"./useSelectableList.js\";\nimport { u as y, b as V } from \"./index60.js\";\nimport { s as j, u as v } from \"./cStatefulMixin.js\";\nimport x from \"./index14.js\";\nimport $ from \"./index40.js\";\nimport h from \"./index46.js\";\nimport \"./VaMessageListWrapper.js\";\nimport { s as L } from \"./VaMessageListWrapper.vue_vue&type=script&lang.js\";\nimport { s as S } from \"./style-inject.es.js\";\nimport \"./VaConfig.js\";\nimport \"./flatten.js\";\nimport \"./useSyncProp.js\";\nimport \"./consts.js\";\nimport \"./useFocus.js\";\nimport \"./useColor.js\";\nimport \"./color-config.js\";\nimport \"colortranslator\";\nimport \"./index28.js\";\nimport \"./VaIcon.js\";\nimport \"./useSize.js\";\nimport \"./useKeyboardOnlyFocus.js\";\nimport \"./useStateful.js\";\nimport \"./useLoading.js\";\nimport \"tslib\";\nimport \"./vue-class-component.esm-bundler.js\";\nimport \"./ColorMixin.js\";\nimport \"./StatefulMixin.js\";\nimport \"./LoadingMixin.js\";\nimport \"./index39.js\";\nimport \"./clamp.js\";\nimport \"./toNumber.js\";\nvar M = o({\n  name: \"VaOptionList\",\n  components: {\n    VaRadio: $,\n    VaCheckbox: x,\n    VaSwitch: h,\n    VaMessageListWrapper: L\n  },\n  emits: [...j.emits],\n  props: { ...b,\n    ...y,\n    ...j.props,\n    type: {\n      type: String,\n      default: \"checkbox\",\n      validator: e => [\"radio\", \"checkbox\", \"switch\"].includes(e)\n    },\n    disabled: {\n      type: Boolean,\n      default: !1\n    },\n    readonly: {\n      type: Boolean,\n      default: !1\n    },\n    defaultValue: {\n      type: [String, Number, Object, Array]\n    },\n    name: {\n      type: String,\n      default: f\n    },\n    color: {\n      type: String,\n      default: \"primary\"\n    },\n    leftLabel: {\n      type: Boolean,\n      default: !1\n    },\n    modelValue: {\n      type: [String, Number, Object, Array]\n    }\n  },\n\n  setup(e, {\n    emit: o\n  }) {\n    const {\n      valueComputed: l\n    } = v(e, o),\n          {\n      getValue: s,\n      getText: i,\n      getTrackBy: p,\n      getDisabled: u\n    } = g(e),\n          n = t(),\n          d = a(() => \"radio\" === e.type),\n          m = a({\n      get() {\n        const o = d.value ? null : [];\n        return l.value || e.defaultValue || o;\n      },\n\n      set(o) {\n        e.readonly || (d.value && !Array.isArray(o) ? l.value = o ? s(o) : o : l.value = Array.isArray(o) ? o.map(s) : [o ? s(o) : o]);\n      }\n\n    }),\n          reset = () => {\n      l.value = void 0;\n    },\n          focus = () => {\n      const e = Array.isArray(n.value) && n.value.find(e => !e.disabled);\n      e && \"function\" == typeof e.focus && e.focus();\n    },\n          {\n      computedError: c,\n      computedErrorMessages: f\n    } = V(e, o, reset, focus);\n\n    return r(() => {\n      !l.value && e.defaultValue && (m.value = e.defaultValue);\n    }), {\n      selectedValue: m,\n      computedError: c,\n      computedErrorMessages: f,\n      getValue: s,\n      getText: i,\n      getKey: e => p(e),\n      isDisabled: o => e.disabled || u(o),\n      reset: reset,\n      focus: focus\n    };\n  }\n\n});\nconst k = [\"id\"];\nS(\":root{--va-option-list-line-height:1.5}.va-option-list__list{line-height:var(--va-option-list-line-height)}\"), M.render = function render(e, o, t, a, r, f) {\n  const b = l(\"va-radio\"),\n        g = l(\"va-checkbox\"),\n        y = l(\"va-switch\"),\n        V = l(\"VaMessageListWrapper\");\n  return s(), i(V, {\n    error: e.computedError,\n    \"error-messages\": e.computedErrorMessages,\n    \"error-count\": e.$props.errorCount\n  }, {\n    default: p(() => [u(\"ul\", {\n      class: \"va-option-list__list\",\n      id: String(e.$props.id)\n    }, [(s(!0), n(d, null, m(e.$props.options, (t, a) => (s(), n(\"li\", {\n      key: e.getKey(t)\n    }, [c(e.$slots, \"default\", {\n      props: {\n        option: t,\n        isDisabled: e.isDisabled,\n        name: e.$props.name,\n        color: e.$props.color,\n        leftLabel: e.$props.leftLabel,\n        getText: e.getText,\n        selectedValue: e.selectedValue,\n        index: a\n      }\n    }, () => [\"radio\" === e.$props.type ? (s(), i(b, {\n      key: 0,\n      ref: \"input\",\n      option: e.getValue(t),\n      disabled: e.isDisabled(t),\n      name: e.$props.name,\n      color: e.$props.color,\n      \"left-label\": e.$props.leftLabel,\n      label: e.getText(t),\n      modelValue: e.selectedValue,\n      \"onUpdate:modelValue\": o[0] || (o[0] = o => e.selectedValue = o),\n      tabindex: a\n    }, null, 8, [\"option\", \"disabled\", \"name\", \"color\", \"left-label\", \"label\", \"modelValue\", \"tabindex\"])) : \"checkbox\" === e.$props.type ? (s(), i(g, {\n      key: 1,\n      ref: \"input\",\n      modelValue: e.selectedValue,\n      \"onUpdate:modelValue\": o[1] || (o[1] = o => e.selectedValue = o),\n      label: e.getText(t),\n      disabled: e.isDisabled(t),\n      \"left-label\": e.$props.leftLabel,\n      \"array-value\": e.getValue(t),\n      color: e.$props.color,\n      name: e.$props.name\n    }, null, 8, [\"modelValue\", \"label\", \"disabled\", \"left-label\", \"array-value\", \"color\", \"name\"])) : (s(), i(y, {\n      key: 2,\n      ref: \"input\",\n      modelValue: e.selectedValue,\n      \"onUpdate:modelValue\": o[2] || (o[2] = o => e.selectedValue = o),\n      label: e.getText(t),\n      disabled: e.isDisabled(t),\n      \"left-label\": e.$props.leftLabel,\n      \"array-value\": e.getValue(t),\n      color: e.$props.color,\n      name: e.$props.name\n    }, null, 8, [\"modelValue\", \"label\", \"disabled\", \"left-label\", \"array-value\", \"color\", \"name\"]))])]))), 128))], 8, k)]),\n    _: 3\n  }, 8, [\"error\", \"error-messages\", \"error-count\"]);\n}, M.__file = \"src/components/va-option-list/VaOptionList.vue\";\nvar T = e(M);\nexport { T as default };","map":{"version":3,"mappings":"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","names":["defineComponent","name","components","VaRadio","VaCheckbox","VaSwitch","VaMessageListWrapper","emits","statefulComponentOptions","props","useSelectableListProps","useValidationProps","type","String","default","validator","includes","disabled","Boolean","readonly","defaultValue","Number","Object","Array","generateUniqueId","color","leftLabel","modelValue","setup","emit","valueComputed","useStateful","getValue","getText","getTrackBy","getDisabled","useSelectableList","input","ref","isRadio","computed","selectedValue","get","value","set","isArray","map","reset","undefined","focus","firstActiveEl","find","el","computedError","computedErrorMessages","useValidation","onMounted","getKey","option","isDisabled","_createBlock","error","_ctx","errorCount","class","_createElementVNode","id","_createElementBlock","options","index","key","_renderSlot","label","tabindex","withConfigTransport","VaOptionList"],"sources":["../../src/components/va-option-list/VaOptionList.vue","../../src/components/va-option-list/VaOptionList.vue?vue&type=template&id=69ca68d9&lang.js","../../src/components/va-option-list/index.ts"],"sourcesContent":["<template>\n  <VaMessageListWrapper\n    :error=\"computedError\"\n    :error-messages=\"computedErrorMessages\"\n    :error-count=\"$props.errorCount\"\n  >\n    <ul\n      class=\"va-option-list__list\"\n      :id=\"String($props.id)\"\n    >\n      <li\n        v-for=\"(option, index) in $props.options\"\n        :key=\"getKey(option)\"\n      >\n        <slot\n          :props=\"{\n            option,\n            isDisabled,\n            name: $props.name,\n            color: $props.color,\n            leftLabel: $props.leftLabel,\n            getText,\n            selectedValue,\n            index\n          }\"\n        >\n          <va-radio\n            v-if=\"$props.type === 'radio'\"\n            ref=\"input\"\n            :option=\"getValue(option)\"\n            :disabled=\"isDisabled(option)\"\n            :name=\"$props.name\"\n            :color=\"$props.color\"\n            :left-label=\"$props.leftLabel\"\n            :label=\"getText(option)\"\n            v-model=\"selectedValue\"\n            :tabindex=\"index\"\n          />\n          <va-checkbox\n            v-else-if=\"$props.type === 'checkbox'\"\n            ref=\"input\"\n            v-model=\"selectedValue\"\n            :label=\"getText(option)\"\n            :disabled=\"isDisabled(option)\"\n            :left-label=\"$props.leftLabel\"\n            :array-value=\"getValue(option)\"\n            :color=\"$props.color\"\n            :name=\"$props.name\"\n          />\n          <va-switch\n            v-else\n            ref=\"input\"\n            v-model=\"selectedValue\"\n            :label=\"getText(option)\"\n            :disabled=\"isDisabled(option)\"\n            :left-label=\"$props.leftLabel\"\n            :array-value=\"getValue(option)\"\n            :color=\"$props.color\"\n            :name=\"$props.name\"\n          />\n        </slot>\n      </li>\n    </ul>\n  </VaMessageListWrapper>\n</template>\n\n<script lang=\"ts\">\nimport { ref, computed, defineComponent, PropType, onMounted } from 'vue'\n\nimport { generateUniqueId } from '../../services/utils'\nimport { useSelectableList, useSelectableListProps, SelectableOption } from '../../composables/useSelectableList'\nimport { useValidation, useValidationProps } from '../../composables/useValidation'\nimport { useStateful, statefulComponentOptions } from '../../mixins/StatefulMixin/cStatefulMixin'\nimport { VaMessageListWrapper } from '../va-input'\nimport VaCheckbox from '../va-checkbox'\nimport VaRadio from '../va-radio'\nimport VaSwitch from '../va-switch'\n\ntype OptionListValue = SelectableOption | SelectableOption[] | null\n\nexport default defineComponent({\n  name: 'VaOptionList',\n  components: {\n    VaRadio,\n    VaCheckbox,\n    VaSwitch,\n    VaMessageListWrapper,\n  },\n  emits: [...statefulComponentOptions.emits],\n  props: {\n    ...useSelectableListProps,\n    ...useValidationProps,\n    ...statefulComponentOptions.props,\n    type: {\n      type: String as PropType<'radio' | 'checkbox' | 'switch'>,\n      default: 'checkbox',\n      validator: (type: any) => ['radio', 'checkbox', 'switch'].includes(type),\n    },\n    disabled: ({ type: Boolean as PropType<boolean>, default: false }),\n    readonly: ({ type: Boolean as PropType<boolean>, default: false }),\n    defaultValue: ({ type: [String, Number, Object, Array] as PropType<OptionListValue | null> }),\n    name: ({ type: String as PropType<string>, default: generateUniqueId }),\n    color: ({ type: String as PropType<string>, default: 'primary' }),\n    leftLabel: ({ type: Boolean, default: false }),\n    modelValue: ({ type: [String, Number, Object, Array] as PropType<OptionListValue | null> }),\n  },\n\n  setup (props, { emit }) {\n    const { valueComputed } = useStateful(props, emit)\n    const { getValue, getText, getTrackBy, getDisabled } = useSelectableList(props)\n\n    const input = ref<HTMLElement>()\n\n    const isRadio = computed(() => {\n      return props.type === 'radio'\n    })\n\n    const selectedValue = computed({\n      get () {\n        const value = isRadio.value ? null : []\n\n        return valueComputed.value || props.defaultValue || value as OptionListValue\n      },\n      set (value: OptionListValue) {\n        if (props.readonly) { return }\n\n        if (isRadio.value && !Array.isArray(value)) {\n          valueComputed.value = value ? getValue(value) : value\n        } else {\n          valueComputed.value = Array.isArray(value)\n            ? value.map(getValue)\n            : [value ? getValue(value) : value]\n        }\n      },\n    })\n\n    const getKey = (option: any) => getTrackBy(option)\n\n    const isDisabled = (option: any) => props.disabled || getDisabled(option)\n\n    const reset = () => { valueComputed.value = undefined }\n\n    const focus = () => {\n      const firstActiveEl = Array.isArray(input.value) && input.value.find(el => !el.disabled)\n\n      if (firstActiveEl && typeof firstActiveEl.focus === 'function') {\n        firstActiveEl.focus()\n      }\n    }\n\n    const { computedError, computedErrorMessages } = useValidation(props, emit, reset, focus)\n\n    onMounted(() => {\n      if (!valueComputed.value && props.defaultValue) {\n        selectedValue.value = props.defaultValue\n      }\n    })\n\n    return {\n      selectedValue,\n      computedError,\n      computedErrorMessages,\n      getValue,\n      getText,\n      getKey,\n      isDisabled,\n      reset,\n      focus,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import 'variables';\n\n.va-option-list {\n  &__list {\n    line-height: var(--va-option-list-line-height);\n  }\n}\n</style>\n","<template>\n  <VaMessageListWrapper\n    :error=\"computedError\"\n    :error-messages=\"computedErrorMessages\"\n    :error-count=\"$props.errorCount\"\n  >\n    <ul\n      class=\"va-option-list__list\"\n      :id=\"String($props.id)\"\n    >\n      <li\n        v-for=\"(option, index) in $props.options\"\n        :key=\"getKey(option)\"\n      >\n        <slot\n          :props=\"{\n            option,\n            isDisabled,\n            name: $props.name,\n            color: $props.color,\n            leftLabel: $props.leftLabel,\n            getText,\n            selectedValue,\n            index\n          }\"\n        >\n          <va-radio\n            v-if=\"$props.type === 'radio'\"\n            ref=\"input\"\n            :option=\"getValue(option)\"\n            :disabled=\"isDisabled(option)\"\n            :name=\"$props.name\"\n            :color=\"$props.color\"\n            :left-label=\"$props.leftLabel\"\n            :label=\"getText(option)\"\n            v-model=\"selectedValue\"\n            :tabindex=\"index\"\n          />\n          <va-checkbox\n            v-else-if=\"$props.type === 'checkbox'\"\n            ref=\"input\"\n            v-model=\"selectedValue\"\n            :label=\"getText(option)\"\n            :disabled=\"isDisabled(option)\"\n            :left-label=\"$props.leftLabel\"\n            :array-value=\"getValue(option)\"\n            :color=\"$props.color\"\n            :name=\"$props.name\"\n          />\n          <va-switch\n            v-else\n            ref=\"input\"\n            v-model=\"selectedValue\"\n            :label=\"getText(option)\"\n            :disabled=\"isDisabled(option)\"\n            :left-label=\"$props.leftLabel\"\n            :array-value=\"getValue(option)\"\n            :color=\"$props.color\"\n            :name=\"$props.name\"\n          />\n        </slot>\n      </li>\n    </ul>\n  </VaMessageListWrapper>\n</template>\n\n<script lang=\"ts\">\nimport { ref, computed, defineComponent, PropType, onMounted } from 'vue'\n\nimport { generateUniqueId } from '../../services/utils'\nimport { useSelectableList, useSelectableListProps, SelectableOption } from '../../composables/useSelectableList'\nimport { useValidation, useValidationProps } from '../../composables/useValidation'\nimport { useStateful, statefulComponentOptions } from '../../mixins/StatefulMixin/cStatefulMixin'\nimport { VaMessageListWrapper } from '../va-input'\nimport VaCheckbox from '../va-checkbox'\nimport VaRadio from '../va-radio'\nimport VaSwitch from '../va-switch'\n\ntype OptionListValue = SelectableOption | SelectableOption[] | null\n\nexport default defineComponent({\n  name: 'VaOptionList',\n  components: {\n    VaRadio,\n    VaCheckbox,\n    VaSwitch,\n    VaMessageListWrapper,\n  },\n  emits: [...statefulComponentOptions.emits],\n  props: {\n    ...useSelectableListProps,\n    ...useValidationProps,\n    ...statefulComponentOptions.props,\n    type: {\n      type: String as PropType<'radio' | 'checkbox' | 'switch'>,\n      default: 'checkbox',\n      validator: (type: any) => ['radio', 'checkbox', 'switch'].includes(type),\n    },\n    disabled: ({ type: Boolean as PropType<boolean>, default: false }),\n    readonly: ({ type: Boolean as PropType<boolean>, default: false }),\n    defaultValue: ({ type: [String, Number, Object, Array] as PropType<OptionListValue | null> }),\n    name: ({ type: String as PropType<string>, default: generateUniqueId }),\n    color: ({ type: String as PropType<string>, default: 'primary' }),\n    leftLabel: ({ type: Boolean, default: false }),\n    modelValue: ({ type: [String, Number, Object, Array] as PropType<OptionListValue | null> }),\n  },\n\n  setup (props, { emit }) {\n    const { valueComputed } = useStateful(props, emit)\n    const { getValue, getText, getTrackBy, getDisabled } = useSelectableList(props)\n\n    const input = ref<HTMLElement>()\n\n    const isRadio = computed(() => {\n      return props.type === 'radio'\n    })\n\n    const selectedValue = computed({\n      get () {\n        const value = isRadio.value ? null : []\n\n        return valueComputed.value || props.defaultValue || value as OptionListValue\n      },\n      set (value: OptionListValue) {\n        if (props.readonly) { return }\n\n        if (isRadio.value && !Array.isArray(value)) {\n          valueComputed.value = value ? getValue(value) : value\n        } else {\n          valueComputed.value = Array.isArray(value)\n            ? value.map(getValue)\n            : [value ? getValue(value) : value]\n        }\n      },\n    })\n\n    const getKey = (option: any) => getTrackBy(option)\n\n    const isDisabled = (option: any) => props.disabled || getDisabled(option)\n\n    const reset = () => { valueComputed.value = undefined }\n\n    const focus = () => {\n      const firstActiveEl = Array.isArray(input.value) && input.value.find(el => !el.disabled)\n\n      if (firstActiveEl && typeof firstActiveEl.focus === 'function') {\n        firstActiveEl.focus()\n      }\n    }\n\n    const { computedError, computedErrorMessages } = useValidation(props, emit, reset, focus)\n\n    onMounted(() => {\n      if (!valueComputed.value && props.defaultValue) {\n        selectedValue.value = props.defaultValue\n      }\n    })\n\n    return {\n      selectedValue,\n      computedError,\n      computedErrorMessages,\n      getValue,\n      getText,\n      getKey,\n      isDisabled,\n      reset,\n      focus,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import 'variables';\n\n.va-option-list {\n  &__list {\n    line-height: var(--va-option-list-line-height);\n  }\n}\n</style>\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\nimport VaOptionList from './VaOptionList.vue'\n\nexport default withConfigTransport(VaOptionList)\n"]},"metadata":{},"sourceType":"module"}