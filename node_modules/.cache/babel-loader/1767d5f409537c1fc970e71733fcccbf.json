{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport { w as e } from \"./withConfigTransport.js\";\nimport { computed as a, defineComponent as o, ref as r, resolveComponent as c, openBlock as t, createBlock as l, normalizeClass as n, withCtx as s, createElementVNode as i, normalizeStyle as u, withModifiers as d, mergeProps as v, toHandlers as b, createVNode as p, renderSlot as m, createTextVNode as h, toDisplayString as k } from \"vue\";\nimport x from \"./index28.js\";\nimport { u as f } from \"./color-config.js\";\nimport { u as y } from \"./useKeyboardOnlyFocus.js\";\nimport { u as g, a as V } from \"./useStateful.js\";\nimport { u as _ } from \"./useLoading.js\";\nimport { u as S, a as j, b as w } from \"./index60.js\";\nimport \"./VaMessageListWrapper.js\";\nimport { s as q } from \"./VaMessageListWrapper.vue_vue&type=script&lang.js\";\nimport { s as B } from \"./style-inject.es.js\";\nimport \"./VaConfig.js\";\nimport \"./VaIcon.js\";\nimport \"./flatten.js\";\nimport \"./useSize.js\";\nimport \"colortranslator\";\nimport \"./useSyncProp.js\";\nimport \"./consts.js\";\nimport \"./useFocus.js\";\nimport \"./useColor.js\";\n\nconst C = { ...g,\n  ..._,\n  ...S,\n  arrayValue: {\n    type: null,\n    default: null\n  },\n  label: {\n    type: String,\n    default: \"\"\n  },\n  leftLabel: {\n    type: Boolean,\n    default: !1\n  },\n  trueValue: {\n    type: null,\n    default: !0\n  },\n  falseValue: {\n    type: null,\n    default: !1\n  },\n  indeterminate: {\n    type: Boolean,\n    default: !1\n  },\n  indeterminateValue: {\n    type: null,\n    default: null\n  },\n  disabled: {\n    type: Boolean,\n    default: !1\n  },\n  readonly: {\n    type: Boolean,\n    default: !1\n  }\n},\n      F = [...j, \"update:modelValue\", \"focus\", \"blur\"],\n      useSelectable = (e, o, {\n  input: r,\n  label: c,\n  container: t\n}) => {\n  (e => {\n    const a = [e.falseValue, e.trueValue];\n    if (e.indeterminate && a.push(e.indeterminateValue), new Set(a).size !== a.length) throw new Error(\"falseValue, trueValue, indeterminateValue props should have strictly different values, which is not the case.\");\n  })(e);\n\n  const reset = () => o(\"update:modelValue\", !1),\n        focus = () => {\n    var e;\n    return null === (e = r.value) || void 0 === e ? void 0 : e.focus();\n  },\n        {\n    isFocused: l,\n    computedError: n,\n    computedErrorMessages: s,\n    validate: i\n  } = w(e, o, reset, focus),\n        {\n    valueComputed: u\n  } = V(e, o),\n        d = a(() => !!e.indeterminate && u.value === e.indeterminateValue),\n        v = a(() => null !== e.arrayValue),\n        b = a(() => {\n    var a;\n    return v.value ? null === (a = e.modelValue) || void 0 === a ? void 0 : a.includes(e.arrayValue) : u.value === e.trueValue;\n  });\n\n  return {\n    isChecked: b,\n    isIndeterminate: d,\n    onBlur: e => {\n      var a;\n      r.value !== e.target || (a = e.relatedTarget) && [c.value, t.value].includes(a) || (l.value = !1, n.value = !1, i(), o(\"blur\", e));\n    },\n    onFocus: e => o(\"focus\", e),\n    toggleSelection: () => {\n      if (!(e.readonly || e.disabled || e.loading)) if (v.value) {\n        if (e.modelValue) {\n          if (!Array.isArray(e.modelValue)) return;\n          e.modelValue.includes(e.arrayValue) ? o(\"update:modelValue\", e.modelValue.filter(a => a !== e.arrayValue)) : o(\"update:modelValue\", e.modelValue.concat(e.arrayValue));\n        } else o(\"update:modelValue\", [e.arrayValue]);\n      } else e.indeterminate ? d.value ? u.value = e.trueValue : b.value ? u.value = e.falseValue : u.value = e.indeterminateValue : b.value ? u.value = e.falseValue : u.value = e.trueValue;\n    },\n    reset: reset,\n    focus: focus,\n    computedError: n,\n    computedErrorMessages: s\n  };\n};\n\nvar E = o({\n  name: \"VaCheckbox\",\n  components: {\n    VaMessageListWrapper: q,\n    VaIcon: x\n  },\n  emits: F,\n  props: { ...C,\n    modelValue: {\n      type: null,\n      default: !1\n    },\n    color: {\n      type: String,\n      default: \"primary\"\n    },\n    checkedIcon: {\n      type: String,\n      default: \"check\"\n    },\n    indeterminateIcon: {\n      type: String,\n      default: \"remove\"\n    },\n    id: {\n      type: String,\n      default: \"\"\n    },\n    name: {\n      type: String,\n      default: \"\"\n    }\n  },\n\n  setup(e, {\n    emit: o\n  }) {\n    const c = {\n      container: r(null),\n      input: r(null),\n      label: r(null)\n    },\n          {\n      isChecked: t,\n      computedError: l,\n      isIndeterminate: n,\n      computedErrorMessages: s,\n      toggleSelection: i,\n      onBlur: u,\n      onFocus: d\n    } = useSelectable(e, o, c),\n          {\n      getColor: v\n    } = f(),\n          {\n      hasKeyboardFocus: b,\n      keyboardFocusListeners: p\n    } = y();\n    return {\n      computedClass: a(() => ({\n        \"va-checkbox--selected\": t.value,\n        \"va-checkbox--readonly\": e.readonly,\n        \"va-checkbox--disabled\": e.disabled,\n        \"va-checkbox--indeterminate\": e.indeterminate,\n        \"va-checkbox--error\": l.value,\n        \"va-checkbox--left-label\": e.leftLabel,\n        \"va-checkbox--on-keyboard-focus\": b.value\n      })),\n      labelStyle: a(() => ({\n        color: l.value ? v(\"danger\") : \"\",\n        padding: e.label ? e.leftLabel ? \"0 0.5rem 0 0\" : \"0 0 0 0.5rem\" : \"\"\n      })),\n      inputStyle: a(() => {\n        const a = t.value || n.value,\n              o = {\n          background: a ? v(e.color) : \"\",\n          borderColor: a ? v(e.color) : \"\"\n        };\n        return l.value && (o.borderColor = v(\"danger\")), o;\n      }),\n      computedIconName: a(() => e.indeterminate && n.value ? e.indeterminateIcon : e.checkedIcon),\n      computedError: l,\n      computedErrorMessages: s,\n      keyboardFocusListeners: p,\n      toggleSelection: i,\n      onBlur: u,\n      onFocus: d\n    };\n  }\n\n});\nconst L = [\"id\", \"name\", \"disabled\", \"indeterminate\"];\nB(\":root{--va-checkbox-display:block;--va-checkbox-max-width:fit-content;--va-checkbox-input-align-items:center;--va-checkbox-input-display:flex;--va-checkbox-input-padding:0 0.3rem;--va-checkbox-input-cursor:pointer;--va-checkbox-disabled-cursor:default;--va-checkbox-readonly-cursor:initial;--va-checkbox-label-display:inline-block;--va-checkbox-label-position:relative;--va-checkbox-icon-pointer-events:none;--va-checkbox-icon-position:absolute;--va-checkbox-icon-color:transparent;--va-checkbox-selected-icon-color:#fff;--va-checkbox-indeterminate-icon-color:#fff;--va-checkbox-square-width:1.35rem;--va-checkbox-square-min-width:1.35rem;--va-checkbox-square-height:1.35rem;--va-checkbox-square-position:relative;--va-checkbox-square-background-color:#fff;--va-checkbox-square-border:solid 0.125rem #acb5be;--va-checkbox-square-border-radius:0.25rem}.va-checkbox{display:var(--va-checkbox-display);font-family:var(--va-font-family);max-width:var(--va-checkbox-max-width)}.va-checkbox__input-container{align-items:var(--va-checkbox-input-align-items);cursor:var(--va-checkbox-input-cursor);display:var(--va-checkbox-input-display);padding:var(--va-checkbox-input-padding)}.va-checkbox--disabled .va-checkbox__input-container{cursor:default;cursor:var(--va-checkbox-disabled-cursor);opacity:.4;pointer-events:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.va-checkbox--readonly .va-checkbox__input-container{cursor:var(--va-checkbox-readonly-cursor)}.va-checkbox--left-label .va-checkbox__input-container{flex-direction:row-reverse}.va-checkbox .va-checkbox__square{align-items:center;background-color:var(--va-checkbox-square-background-color,var(--va-background-color));border:var(--va-checkbox-square-border,var(--va-control-border));border-radius:var(--va-checkbox-square-border-radius,var(--va-square-border-radius));display:flex;height:var(--va-checkbox-square-height);justify-content:center;min-width:var(--va-checkbox-square-min-width);position:var(--va-checkbox-square-position);width:var(--va-checkbox-square-width)}.va-checkbox--on-keyboard-focus.va-checkbox .va-checkbox__square{box-shadow:0 0 .5rem 0 rgba(0,0,0,.3);transition:all,.6s,ease-in}.va-checkbox__input{height:0!important;opacity:0;width:0}.va-checkbox__label{display:var(--va-checkbox-label-display);position:var(--va-checkbox-label-position)}.va-checkbox__icon{color:var(--va-checkbox-icon-color);pointer-events:var(--va-checkbox-icon-pointer-events);position:var(--va-checkbox-icon-position)}.va-checkbox--selected .va-checkbox__icon{color:var(--va-checkbox-selected-icon-color)}.va-checkbox--indeterminate .va-checkbox__icon{color:var(--va-checkbox-indeterminate-icon-color)}\"), E.render = function render(e, a, o, r, x, f) {\n  const y = c(\"va-icon\"),\n        g = c(\"VaMessageListWrapper\");\n  return t(), l(g, {\n    class: n([\"va-checkbox\", e.computedClass]),\n    disabled: e.disabled,\n    success: e.success,\n    messages: e.messages,\n    error: e.computedError,\n    \"error-messages\": e.computedErrorMessages,\n    \"error-count\": e.errorCount\n  }, {\n    default: s(() => [i(\"div\", {\n      class: \"va-checkbox__input-container\",\n      onClick: a[6] || (a[6] = (...a) => e.toggleSelection && e.toggleSelection(...a)),\n      tabindex: \"-1\",\n      onBlur: a[7] || (a[7] = (...a) => e.onBlur && e.onBlur(...a)),\n      ref: \"container\"\n    }, [i(\"div\", {\n      class: \"va-checkbox__square\",\n      style: u(e.inputStyle),\n      onSelectstart: a[4] || (a[4] = d(() => {}, [\"prevent\"]))\n    }, [i(\"input\", v({\n      ref: \"input\",\n      type: \"checkbox\",\n      role: \"checkbox\",\n      readonly: \"\",\n      id: e.id,\n      name: e.name\n    }, b(e.keyboardFocusListeners), {\n      onFocus: a[0] || (a[0] = (...a) => e.onFocus && e.onFocus(...a)),\n      onBlur: a[1] || (a[1] = (...a) => e.onBlur && e.onBlur(...a)),\n      class: \"va-checkbox__input\",\n      onClick: a[2] || (a[2] = d(() => {}, [\"stop\", \"prevent\"])),\n      onKeypress: a[3] || (a[3] = d((...a) => e.toggleSelection && e.toggleSelection(...a), [\"prevent\"])),\n      disabled: e.disabled,\n      indeterminate: e.indeterminate\n    }), null, 16, L), p(y, {\n      class: \"va-checkbox__icon\",\n      name: e.computedIconName,\n      size: \"20px\"\n    }, null, 8, [\"name\"])], 36), i(\"div\", {\n      class: \"va-checkbox__label\",\n      style: u(e.labelStyle),\n      ref: \"label\",\n      tabindex: \"-1\",\n      onBlur: a[5] || (a[5] = (...a) => e.onBlur && e.onBlur(...a))\n    }, [m(e.$slots, \"label\", {}, () => [h(k(e.label), 1)])], 36)], 544)]),\n    _: 3\n  }, 8, [\"class\", \"disabled\", \"success\", \"messages\", \"error\", \"error-messages\", \"error-count\"]);\n}, E.__file = \"src/components/va-checkbox/VaCheckbox.vue\";\nvar I = e(E);\nexport { I as default };","map":{"version":3,"mappings":"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","names":["useSelectableProps","useStatefulProps","useLoadingProps","useValidationProps","arrayValue","type","default","label","String","leftLabel","Boolean","trueValue","falseValue","indeterminate","indeterminateValue","disabled","readonly","useSelectableEmits","useValidationEmits","useSelectable","props","emit","input","container","values","push","Set","size","length","Error","reset","focus","value","isFocused","computedError","computedErrorMessages","validate","useValidation","valueComputed","useStateful","isIndeterminate","computed","modelIsArray","isChecked","modelValue","includes","onBlur","event","element","target","relatedTarget","onFocus","toggleSelection","loading","Array","isArray","filter","option","concat","defineComponent","name","components","VaMessageListWrapper","VaIcon","emits","color","checkedIcon","indeterminateIcon","id","setup","elements","ref","getColor","useColors","hasKeyboardFocus","keyboardFocusListeners","useKeyboardOnlyFocus","computedClass","labelStyle","padding","inputStyle","isActive","style","background","borderColor","computedIconName","_createBlock","class","_ctx","success","messages","error","_createElementVNode","onClick","tabindex","onSelectstart","_mergeProps","role","_toHandlers","onKeypress","_createVNode","_renderSlot","withConfigTransport","VaCheckbox"],"sources":["../../src/components/va-checkbox/useSelectable.ts","../../src/components/va-checkbox/VaCheckbox.vue","../../src/components/va-checkbox/VaCheckbox.vue?vue&type=template&id=828af530&lang.js","../../src/components/va-checkbox/index.ts"],"sourcesContent":["import { PropType, computed, SetupContext, Ref } from 'vue'\n\nimport { useStateful, useStatefulProps, StatefulProps } from '../../composables/useStateful'\nimport { useLoadingProps, LoadingProps } from '../../composables/useLoading'\nimport { useValidation, useValidationProps, ValidationProps, useValidationEmits } from '../../composables/useValidation'\n\nexport interface SelectableProps extends StatefulProps<unknown>, LoadingProps, ValidationProps {\n  arrayValue: unknown | null,\n  label: string,\n  leftLabel: boolean,\n  trueValue: boolean,\n  falseValue: boolean,\n  indeterminate: boolean,\n  indeterminateValue: unknown | null,\n  disabled: boolean,\n  readonly: boolean,\n}\n\ntype Elements = {\n  input: Ref<HTMLElement | null>,\n  label: Ref<HTMLElement | null>,\n  container: Ref<HTMLElement | null>,\n}\n\nexport const useSelectableProps = {\n  ...useStatefulProps,\n  ...useLoadingProps,\n  ...useValidationProps,\n  arrayValue: { type: null as any as PropType<unknown>, default: null },\n  label: { type: String as PropType<string>, default: '' },\n  leftLabel: { type: Boolean as PropType<boolean>, default: false },\n  trueValue: { type: null as any as PropType<unknown>, default: true },\n  falseValue: { type: null as any as PropType<unknown>, default: false },\n  indeterminate: { type: Boolean as PropType<boolean>, default: false },\n  indeterminateValue: { type: null as any as PropType<unknown>, default: null },\n  disabled: { type: Boolean, default: false },\n  readonly: { type: Boolean, default: false },\n}\n\nexport const useSelectableEmits = [...useValidationEmits, 'update:modelValue', 'focus', 'blur']\n\nconst checkDuplicates = (props: SelectableProps) => {\n  // Just validating state values.\n  const values: unknown[] = [props.falseValue, props.trueValue]\n\n  if (props.indeterminate) {\n    values.push(props.indeterminateValue)\n  }\n\n  const hasDuplicates = new Set(values).size !== values.length\n\n  if (hasDuplicates) {\n    throw new Error('falseValue, trueValue, indeterminateValue props should have strictly different values, which is not the case.')\n  }\n}\n\nexport const useSelectable = (\n  props: SelectableProps,\n  emit: SetupContext['emit'],\n  { input, label, container }: Elements,\n) => {\n  checkDuplicates(props)\n\n  /** @public */\n  const reset = () => emit('update:modelValue', false)\n  const focus = () => input.value?.focus()\n\n  const { isFocused, computedError, computedErrorMessages, validate } = useValidation(props, emit, reset, focus)\n  const { valueComputed } = useStateful(props, emit)\n\n  const isElementRelated = (element: HTMLElement | null) => {\n    return !!element && [label.value, container.value].includes(element)\n  }\n  const onBlur = (event: FocusEvent) => {\n    if ((input.value === event.target) && !isElementRelated(event.relatedTarget as HTMLElement)) {\n      isFocused.value = false\n      computedError.value = false\n      validate()\n      emit('blur', event)\n    }\n  }\n  const onFocus = (event: FocusEvent) => emit('focus', event)\n\n  const isIndeterminate = computed(() => !!props.indeterminate && valueComputed.value === props.indeterminateValue)\n  const modelIsArray = computed(() => props.arrayValue !== null)\n  const isChecked = computed(() => {\n    if (modelIsArray.value) {\n      return (props.modelValue as unknown[])?.includes(props.arrayValue)\n    }\n\n    return valueComputed.value === props.trueValue\n  })\n  const toggleSelection = () => {\n    if (props.readonly || props.disabled || props.loading) {\n      return\n    }\n\n    // For array access we pretend computedValue does not exist and use modelValue + emit input directly.\n    if (modelIsArray.value) {\n      if (!props.modelValue) {\n        emit('update:modelValue', [props.arrayValue])\n      } else if (!Array.isArray(props.modelValue)) {\n        return\n      } else if (props.modelValue.includes(props.arrayValue)) {\n        emit('update:modelValue', props.modelValue.filter((option) => option !== props.arrayValue))\n      } else {\n        emit('update:modelValue', props.modelValue.concat(props.arrayValue))\n      }\n      return\n    }\n\n    if (props.indeterminate) {\n      if (isIndeterminate.value) {\n        valueComputed.value = props.trueValue\n      } else if (isChecked.value) {\n        valueComputed.value = props.falseValue\n      } else {\n        // unchecked\n        valueComputed.value = props.indeterminateValue\n      }\n      return\n    }\n\n    if (isChecked.value) {\n      valueComputed.value = props.falseValue\n    } else {\n      valueComputed.value = props.trueValue\n    }\n  }\n\n  return {\n    isChecked,\n    isIndeterminate,\n    onBlur,\n    onFocus,\n    toggleSelection,\n    reset,\n    focus,\n    computedError,\n    computedErrorMessages,\n  }\n}\n","<template>\n  <VaMessageListWrapper\n    class=\"va-checkbox\"\n    :class=\"computedClass\"\n    :disabled=\"disabled\"\n    :success=\"success\"\n    :messages=\"messages\"\n    :error=\"computedError\"\n    :error-messages=\"computedErrorMessages\"\n    :error-count=\"errorCount\"\n  >\n    <div\n      class=\"va-checkbox__input-container\"\n      @click=\"toggleSelection\"\n      tabindex=\"-1\"\n      @blur=\"onBlur\"\n      ref=\"container\"\n    >\n      <div\n        class=\"va-checkbox__square\"\n        :style=\"inputStyle\"\n        @selectstart.prevent\n      >\n        <input\n          ref=\"input\"\n          type=\"checkbox\"\n          role=\"checkbox\"\n          readonly\n          :id=\"id\"\n          :name=\"name\"\n          v-on=\"keyboardFocusListeners\"\n          @focus=\"onFocus\"\n          @blur=\"onBlur\"\n          class=\"va-checkbox__input\"\n          @click.stop.prevent\n          @keypress.prevent=\"toggleSelection\"\n          :disabled=\"disabled\"\n          :indeterminate=\"indeterminate\"\n        >\n        <va-icon\n          class=\"va-checkbox__icon\"\n          :name=\"computedIconName\"\n          size=\"20px\"\n        />\n      </div>\n      <div\n        class=\"va-checkbox__label\"\n        :style=\"labelStyle\"\n        ref=\"label\"\n        tabindex=\"-1\"\n        @blur=\"onBlur\"\n      >\n        <slot name=\"label\">{{ label }}</slot>\n      </div>\n    </div>\n  </VaMessageListWrapper>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, PropType, ref } from 'vue'\n\nimport { VaMessageListWrapper } from '../va-input'\nimport VaIcon from '../va-icon/'\n\nimport { useColors } from '../../composables/useColor'\nimport useKeyboardOnlyFocus from '../../composables/useKeyboardOnlyFocus'\nimport { useSelectable, useSelectableProps, useSelectableEmits } from './useSelectable'\n\nexport default defineComponent({\n  name: 'VaCheckbox',\n  components: { VaMessageListWrapper, VaIcon },\n  emits: useSelectableEmits,\n  props: {\n    ...useSelectableProps,\n    modelValue: { type: null as any as PropType<unknown>, default: false },\n    color: { type: String as PropType<string>, default: 'primary' },\n    checkedIcon: { type: String as PropType<string>, default: 'check' },\n    indeterminateIcon: { type: String as PropType<string>, default: 'remove' },\n    id: { type: String as PropType<string>, default: '' },\n    name: { type: String as PropType<string>, default: '' },\n  },\n  setup (props, { emit }) {\n    const elements = {\n      container: ref(null),\n      input: ref(null),\n      label: ref(null),\n    }\n\n    const {\n      isChecked,\n      computedError,\n      isIndeterminate,\n      computedErrorMessages,\n      toggleSelection,\n      onBlur,\n      onFocus,\n    } = useSelectable(props, emit, elements)\n    const { getColor } = useColors()\n    const { hasKeyboardFocus, keyboardFocusListeners } = useKeyboardOnlyFocus()\n\n    const computedClass = computed(() => ({\n      'va-checkbox--selected': isChecked.value,\n      'va-checkbox--readonly': props.readonly,\n      'va-checkbox--disabled': props.disabled,\n      'va-checkbox--indeterminate': props.indeterminate,\n      'va-checkbox--error': computedError.value,\n      'va-checkbox--left-label': props.leftLabel,\n      'va-checkbox--on-keyboard-focus': hasKeyboardFocus.value,\n    }))\n\n    const labelStyle = computed(() => {\n      return {\n        color: computedError.value ? getColor('danger') : '',\n        padding: !props.label\n          ? ''\n          : props.leftLabel\n            ? '0 0.5rem 0 0'\n            : '0 0 0 0.5rem',\n      }\n    })\n\n    const inputStyle = computed(() => {\n      const isActive = isChecked.value || isIndeterminate.value\n      const style = {\n        background: isActive ? getColor(props.color) : '',\n        borderColor: isActive ? getColor(props.color) : '',\n      }\n\n      if (computedError.value) {\n        style.borderColor = getColor('danger')\n      }\n\n      return style\n    })\n\n    const computedIconName = computed(() => props.indeterminate && isIndeterminate.value\n      ? props.indeterminateIcon\n      : props.checkedIcon,\n    )\n\n    return {\n      computedClass,\n      labelStyle,\n      inputStyle,\n      computedIconName,\n      computedError,\n      computedErrorMessages,\n      keyboardFocusListeners,\n      toggleSelection,\n      onBlur,\n      onFocus,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-checkbox {\n  display: var(--va-checkbox-display);\n  max-width: var(--va-checkbox-max-width);\n  font-family: var(--va-font-family);\n\n  &__input-container {\n    align-items: var(--va-checkbox-input-align-items);\n    display: var(--va-checkbox-input-display);\n    padding: var(--va-checkbox-input-padding);\n    cursor: var(--va-checkbox-input-cursor);\n\n    @at-root {\n      .va-checkbox--disabled & {\n        @include va-disabled();\n\n        cursor: var(--va-checkbox-disabled-cursor);\n      }\n\n      .va-checkbox--readonly & {\n        cursor: var(--va-checkbox-readonly-cursor);\n      }\n\n      .va-checkbox--left-label & {\n        flex-direction: row-reverse;\n      }\n    }\n  }\n\n  #{&}__square {\n    @include flex-center();\n\n    width: var(--va-checkbox-square-width);\n    min-width: var(--va-checkbox-square-min-width);\n    height: var(--va-checkbox-square-height);\n    position: var(--va-checkbox-square-position);\n    background-color: var(--va-checkbox-square-background-color, var(--va-background-color));\n    border: var(--va-checkbox-square-border, var(--va-control-border));\n    border-radius: var(--va-checkbox-square-border-radius, var(--va-square-border-radius));\n\n    @at-root {\n      .va-checkbox--on-keyboard-focus#{&} {\n        transition: all, 0.6s, ease-in;\n        box-shadow: 0 0 0.5rem 0 rgba(0, 0, 0, 0.3);\n      }\n    }\n  }\n\n  &__input {\n    opacity: 0;\n    width: 0;\n    height: 0 !important;\n  }\n\n  &__label {\n    display: var(--va-checkbox-label-display);\n    position: var(--va-checkbox-label-position);\n  }\n\n  &__icon {\n    pointer-events: var(--va-checkbox-icon-pointer-events);\n    position: var(--va-checkbox-icon-position);\n    color: var(--va-checkbox-icon-color);\n  }\n\n  &--selected {\n    .va-checkbox {\n      &__icon {\n        color: var(--va-checkbox-selected-icon-color);\n      }\n    }\n  }\n\n  &--indeterminate {\n    .va-checkbox {\n      &__icon {\n        color: var(--va-checkbox-indeterminate-icon-color);\n      }\n    }\n  }\n}\n</style>\n","<template>\n  <VaMessageListWrapper\n    class=\"va-checkbox\"\n    :class=\"computedClass\"\n    :disabled=\"disabled\"\n    :success=\"success\"\n    :messages=\"messages\"\n    :error=\"computedError\"\n    :error-messages=\"computedErrorMessages\"\n    :error-count=\"errorCount\"\n  >\n    <div\n      class=\"va-checkbox__input-container\"\n      @click=\"toggleSelection\"\n      tabindex=\"-1\"\n      @blur=\"onBlur\"\n      ref=\"container\"\n    >\n      <div\n        class=\"va-checkbox__square\"\n        :style=\"inputStyle\"\n        @selectstart.prevent\n      >\n        <input\n          ref=\"input\"\n          type=\"checkbox\"\n          role=\"checkbox\"\n          readonly\n          :id=\"id\"\n          :name=\"name\"\n          v-on=\"keyboardFocusListeners\"\n          @focus=\"onFocus\"\n          @blur=\"onBlur\"\n          class=\"va-checkbox__input\"\n          @click.stop.prevent\n          @keypress.prevent=\"toggleSelection\"\n          :disabled=\"disabled\"\n          :indeterminate=\"indeterminate\"\n        >\n        <va-icon\n          class=\"va-checkbox__icon\"\n          :name=\"computedIconName\"\n          size=\"20px\"\n        />\n      </div>\n      <div\n        class=\"va-checkbox__label\"\n        :style=\"labelStyle\"\n        ref=\"label\"\n        tabindex=\"-1\"\n        @blur=\"onBlur\"\n      >\n        <slot name=\"label\">{{ label }}</slot>\n      </div>\n    </div>\n  </VaMessageListWrapper>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, PropType, ref } from 'vue'\n\nimport { VaMessageListWrapper } from '../va-input'\nimport VaIcon from '../va-icon/'\n\nimport { useColors } from '../../composables/useColor'\nimport useKeyboardOnlyFocus from '../../composables/useKeyboardOnlyFocus'\nimport { useSelectable, useSelectableProps, useSelectableEmits } from './useSelectable'\n\nexport default defineComponent({\n  name: 'VaCheckbox',\n  components: { VaMessageListWrapper, VaIcon },\n  emits: useSelectableEmits,\n  props: {\n    ...useSelectableProps,\n    modelValue: { type: null as any as PropType<unknown>, default: false },\n    color: { type: String as PropType<string>, default: 'primary' },\n    checkedIcon: { type: String as PropType<string>, default: 'check' },\n    indeterminateIcon: { type: String as PropType<string>, default: 'remove' },\n    id: { type: String as PropType<string>, default: '' },\n    name: { type: String as PropType<string>, default: '' },\n  },\n  setup (props, { emit }) {\n    const elements = {\n      container: ref(null),\n      input: ref(null),\n      label: ref(null),\n    }\n\n    const {\n      isChecked,\n      computedError,\n      isIndeterminate,\n      computedErrorMessages,\n      toggleSelection,\n      onBlur,\n      onFocus,\n    } = useSelectable(props, emit, elements)\n    const { getColor } = useColors()\n    const { hasKeyboardFocus, keyboardFocusListeners } = useKeyboardOnlyFocus()\n\n    const computedClass = computed(() => ({\n      'va-checkbox--selected': isChecked.value,\n      'va-checkbox--readonly': props.readonly,\n      'va-checkbox--disabled': props.disabled,\n      'va-checkbox--indeterminate': props.indeterminate,\n      'va-checkbox--error': computedError.value,\n      'va-checkbox--left-label': props.leftLabel,\n      'va-checkbox--on-keyboard-focus': hasKeyboardFocus.value,\n    }))\n\n    const labelStyle = computed(() => {\n      return {\n        color: computedError.value ? getColor('danger') : '',\n        padding: !props.label\n          ? ''\n          : props.leftLabel\n            ? '0 0.5rem 0 0'\n            : '0 0 0 0.5rem',\n      }\n    })\n\n    const inputStyle = computed(() => {\n      const isActive = isChecked.value || isIndeterminate.value\n      const style = {\n        background: isActive ? getColor(props.color) : '',\n        borderColor: isActive ? getColor(props.color) : '',\n      }\n\n      if (computedError.value) {\n        style.borderColor = getColor('danger')\n      }\n\n      return style\n    })\n\n    const computedIconName = computed(() => props.indeterminate && isIndeterminate.value\n      ? props.indeterminateIcon\n      : props.checkedIcon,\n    )\n\n    return {\n      computedClass,\n      labelStyle,\n      inputStyle,\n      computedIconName,\n      computedError,\n      computedErrorMessages,\n      keyboardFocusListeners,\n      toggleSelection,\n      onBlur,\n      onFocus,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-checkbox {\n  display: var(--va-checkbox-display);\n  max-width: var(--va-checkbox-max-width);\n  font-family: var(--va-font-family);\n\n  &__input-container {\n    align-items: var(--va-checkbox-input-align-items);\n    display: var(--va-checkbox-input-display);\n    padding: var(--va-checkbox-input-padding);\n    cursor: var(--va-checkbox-input-cursor);\n\n    @at-root {\n      .va-checkbox--disabled & {\n        @include va-disabled();\n\n        cursor: var(--va-checkbox-disabled-cursor);\n      }\n\n      .va-checkbox--readonly & {\n        cursor: var(--va-checkbox-readonly-cursor);\n      }\n\n      .va-checkbox--left-label & {\n        flex-direction: row-reverse;\n      }\n    }\n  }\n\n  #{&}__square {\n    @include flex-center();\n\n    width: var(--va-checkbox-square-width);\n    min-width: var(--va-checkbox-square-min-width);\n    height: var(--va-checkbox-square-height);\n    position: var(--va-checkbox-square-position);\n    background-color: var(--va-checkbox-square-background-color, var(--va-background-color));\n    border: var(--va-checkbox-square-border, var(--va-control-border));\n    border-radius: var(--va-checkbox-square-border-radius, var(--va-square-border-radius));\n\n    @at-root {\n      .va-checkbox--on-keyboard-focus#{&} {\n        transition: all, 0.6s, ease-in;\n        box-shadow: 0 0 0.5rem 0 rgba(0, 0, 0, 0.3);\n      }\n    }\n  }\n\n  &__input {\n    opacity: 0;\n    width: 0;\n    height: 0 !important;\n  }\n\n  &__label {\n    display: var(--va-checkbox-label-display);\n    position: var(--va-checkbox-label-position);\n  }\n\n  &__icon {\n    pointer-events: var(--va-checkbox-icon-pointer-events);\n    position: var(--va-checkbox-icon-position);\n    color: var(--va-checkbox-icon-color);\n  }\n\n  &--selected {\n    .va-checkbox {\n      &__icon {\n        color: var(--va-checkbox-selected-icon-color);\n      }\n    }\n  }\n\n  &--indeterminate {\n    .va-checkbox {\n      &__icon {\n        color: var(--va-checkbox-indeterminate-icon-color);\n      }\n    }\n  }\n}\n</style>\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\nimport VaCheckbox from './VaCheckbox.vue'\n\nexport default withConfigTransport(VaCheckbox)\n"]},"metadata":{},"sourceType":"module"}