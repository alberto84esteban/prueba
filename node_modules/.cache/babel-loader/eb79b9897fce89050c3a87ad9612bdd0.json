{"ast":null,"code":"import { p as t } from \"./withConfigTransport.js\";\n\nconst sleep = (t = 0) => new Promise(r => setTimeout(r, t)),\n      warn = (...t) => (console.warn(...t), !1),\n      hasOwnProperty = (t, r) => Object.prototype.hasOwnProperty.call(t, r),\n      getNestedValue = (r, n) => {\n  if (0 === n.length) return r;\n  const o = r[n[0]];\n  return t(o) ? getNestedValue(o, n.slice(1)) : 1 === n.length ? o : void 0;\n},\n      getProp = (t, r) => {\n  if (\"string\" != typeof t) return r && t ? \"string\" == typeof r ? ((t, r) => r in t ? t[r] : (r = r.replace(/^\\./, \"\"), getNestedValue(t, r.split(\".\"))))(t, r) : \"function\" == typeof r ? r(t) : t : t;\n},\n      getRandomString = (t = 4) => Math.random().toString(36).substring(2, t + 2),\n      generateUniqueId = () => `${getRandomString(8)}-${getRandomString(4)}-${getRandomString(4)}`;\n\nexport { getProp as a, generateUniqueId as g, hasOwnProperty as h, sleep as s, warn as w };","map":{"version":3,"mappings":";;MAIaA,QAAQ,CAACC,IAAK,CAAN,KACZ,IAAIC,OAAJ,CAAYC,KAAWC,WAAWD,CAAXC,EAAoBH,CAApBG,CAAvB;MA4BIC,OAAO,IAAIC,CAAJ,MAElBC,QAAQF,IAARE,CAAQF,GAAQC,CAAhBC,GAAgBD,CACT,CAHW;MAMPE,iBAAiB,CAACC,CAAD,EAASC,CAAT,KAGrBC,OAAOC,SAAPD,CAAiBH,cAAjBG,CAAgCE,IAAhCF,CAAqCF,CAArCE,EAA6CD,CAA7CC;MAIIG,iBAAiB,CAACC,CAAD,EAASC,CAAT,KAASA;AACrC,MAA0B,MAAtBA,EAAWC,MAAf,EAA+B,OAAOF,CAAP;AAE/B,QAAMG,IAAaH,EAAOC,EAAW,CAAXA,CAAPD,CAAnB;AACA,SAAKI,EAASD,CAATC,IAMEL,eAAeI,CAAfJ,EAA2BE,EAAWI,KAAXJ,CAAiB,CAAjBA,CAA3BF,CANFK,GACuB,MAAtBH,EAAWC,MAAW,GACjBC,CADiB,GACjBA,KAET,CAJF;AAIE;MAyBSG,UAAU,CAAgDN,CAAhD,EAA2DO,CAA3D,KAA2DA;AAChF,MAAsB,mBAAXP,CAAX,EACA,OAAKO,KAASP,CAATO,GACe,mBAATA,CAAS,GAjBQ,EAAoCP,CAApC,EAA+CO,CAA/C,KACxBA,KAAQP,CAARO,GACKP,EAAOO,CAAPP,CADLO,IAGJA,IAAOA,EAAKC,OAALD,CAAa,KAAbA,EAAoB,EAApBA,CAAPA,EACOR,eAAeC,CAAfD,EAAuBQ,EAAKE,KAALF,CAAW,GAAXA,CAAvBR,CAJHQ,CADwB,EAiB0BP,CAjB1B,EAiBkCO,CAjBlC,CAiBR,GACA,qBAATA,CAAS,GAAqBA,EAAKP,CAALO,CAArB,GACbP,CAHFO,GAA0BP,CAA/B;AAA+BA;MAM3BU,kBAAkB,CAACC,IAAe,CAAhB,KACfC,KAAKC,MAALD,GAAcE,QAAdF,CAAuB,EAAvBA,EAA2BG,SAA3BH,CAAqC,CAArCA,EAAwCD,IAAe,CAAvDC;MAGII,mBAAmB,MACvB,GAAGN,gBAAgB,CAAhBA,CAAgB,IAAMA,gBAAgB,CAAhBA,CAAgB,IAAMA,gBAAgB,CAAhBA,CAAgB;;AAAA","names":["sleep","ms","Promise","resolve","setTimeout","warn","attrs","console","hasOwnProperty","object","key","Object","prototype","call","getNestedValue","option","propsArray","length","nestedItem","isObject","slice","getProp","prop","replace","split","getRandomString","stringLength","Math","random","toString","substring","generateUniqueId"],"sources":["../../src/services/utils.ts"],"sourcesContent":["//  @ts-nocheck\n\nimport isObject from 'lodash/isObject'\n\nexport const sleep = (ms = 0) => {\n  return new Promise(resolve => setTimeout(resolve, ms))\n}\n\n// Taken from vuetify pretty much.\nexport const deepEqual = (a, b) => {\n  if (a === b) { return true }\n\n  // If the values aren't objects, they were already checked for equality\n  if (a !== Object(a) || b !== Object(b)) {\n    return false\n  }\n\n  // Handle dates as a special case\n  if (a instanceof Date && b instanceof Date) {\n    if (a.getTime() !== b.getTime()) { return false }\n  }\n\n  const props = Object.keys(a)\n\n  // Different number of props, don't bother to check\n  if (props.length !== Object.keys(b).length) {\n    return false\n  }\n\n  return props.every(p => deepEqual(a[p], b[p]))\n}\n\n// vuestic-ui warn, currently is mostly a placeholder, but later might provide ability to disable warns etc.\nexport const warn = (...attrs) => {\n  // eslint-disable-next-line  no-console\n  console.warn(...attrs)\n  return false\n}\n\nexport const hasOwnProperty = (object, key) => {\n  // See https://eslint.org/docs/rules/no-prototype-builtins for explanation\n  // on why we don't use object.hasOwnProperty directly.\n  return Object.prototype.hasOwnProperty.call(object, key)\n}\n\n// Find value in the object with an array of keys\nexport const getNestedValue = (option, propsArray) => {\n  if (propsArray.length === 0) { return option }\n\n  const nestedItem = option[propsArray[0]]\n  if (!isObject(nestedItem)) {\n    if (propsArray.length === 1) {\n      return nestedItem\n    }\n    return undefined\n  }\n  return getNestedValue(nestedItem, propsArray.slice(1))\n}\n\n/**\n * Finds value in the object using string with dots 'key.key.key'\n *\n * @param option\n * @param prop\n */\nexport const getValueByPath = <T extends Record<string, unknown>>(option: T, prop: string | keyof T) => {\n  if (prop in option) {\n    return option[prop]\n  }\n  prop = prop.replace(/^\\./, '') // remove first point symbol\n  return getNestedValue(option, prop.split('.'))\n}\n\n/**\n * Finds value of nested property inside of an object.\n *\n * @param option - Object to look properties inside\n * @param prop - string or function used to find nested property\n */\nexport const getProp = <T extends (Record<string, unknown> | string)> (option: T, prop: string | ((t: T) => any) | Function): any => {\n  if (typeof option === 'string') { return }\n  if (!prop || !option) { return option }\n  if (typeof prop === 'string') { return getValueByPath(option, prop) }\n  if (typeof prop === 'function') { return prop(option) }\n  return option\n}\n\nconst getRandomString = (stringLength = 4): string => {\n  return Math.random().toString(36).substring(2, stringLength + 2)\n}\n\nexport const generateUniqueId = () => {\n  return `${getRandomString(8)}-${getRandomString(4)}-${getRandomString(4)}`\n}\n"]},"metadata":{},"sourceType":"module"}