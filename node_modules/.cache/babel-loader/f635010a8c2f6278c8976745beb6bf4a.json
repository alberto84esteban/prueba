{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport { y as e, w as t } from \"./withConfigTransport.js\";\nimport { __decorate as r } from \"tslib\";\nimport { V as s, m as a, s as i, O as c, p as o } from \"./vue-class-component.esm-bundler.js\";\nimport { C as h } from \"./ColorMixin.js\";\nimport { f as n } from \"./flatten.js\";\nimport { i as l } from \"./index60.js\";\nimport { inject as d, resolveComponent as u, openBlock as p, createBlock as v, normalizeClass as w, withCtx as m, createElementVNode as g, mergeProps as k, toHandlers as b, withModifiers as f, normalizeStyle as y, renderSlot as _, createTextVNode as V, toDisplayString as C, createCommentVNode as S } from \"vue\";\nimport { F as $ } from \"./consts.js\";\nimport { S as x } from \"./StatefulMixin.js\";\nimport { L as E } from \"./LoadingMixin.js\";\nimport { VaProgressCircle as j } from \"./index39.js\";\nimport { u as L } from \"./useKeyboardOnlyFocus.js\";\nimport \"./VaMessageListWrapper.js\";\nimport { s as M } from \"./VaMessageListWrapper.vue_vue&type=script&lang.js\";\nimport { s as B } from \"./style-inject.es.js\";\nimport \"./VaConfig.js\";\nimport \"./color-config.js\";\nimport \"colortranslator\";\nimport \"./useSyncProp.js\";\nimport \"./useFocus.js\";\nimport \"./useColor.js\";\nimport \"./clamp.js\";\nimport \"./toNumber.js\";\nimport \"./useSize.js\";\n\nconst prepareValidations = (t = [], r = null) => (l(t) && (t = [t]), t.map(t => e(t) ? t(r) : t));\n\nconst F = s.with(class Props$1 {\n  constructor() {\n    this.rules = o({\n      type: Array,\n      default: () => []\n    }), this.disabled = o({\n      type: Boolean,\n      default: !1\n    }), this.readonly = o({\n      type: Boolean,\n      default: !1\n    }), this.success = o({\n      type: Boolean,\n      default: !1\n    }), this.messages = o({\n      type: Array,\n      default: () => []\n    }), this.error = o({\n      type: Boolean,\n      default: !1\n    }), this.errorMessages = o({\n      type: [Array, String]\n    }), this.errorCount = o({\n      type: Number,\n      default: 1\n    }), this.id = o({\n      type: [String, Number],\n      default: void 0\n    }), this.name = o({\n      type: [String, Number],\n      default: void 0\n    }), this.modelValue = o({\n      validator: () => {\n        throw new Error(\"ValidateMixin: `modelValue` prop should be defined in component.\");\n      }\n    });\n  }\n\n});\nlet I = class FormComponentMixin extends a(F) {\n  constructor() {\n    super(...arguments), this.hadFocus = !1, this.isFocused = !1, this.internalErrorMessages = [], this.internalError = !1, this.isFormComponent = !0, this.formProvider = i(() => ({ ...d($, void 0)\n    }));\n  }\n\n  mounted() {\n    Object.keys(this.formProvider).length && this.formProvider.onChildMounted(this);\n  }\n\n  unmounted() {\n    Object.keys(this.formProvider).length && this.formProvider.onChildUnmounted(this);\n  }\n\n  validate() {\n    return this.computedError = !1, this.computedErrorMessages = [], this.rules && this.rules.length > 0 && prepareValidations(n(this.rules), this.modelValue).forEach(e => {\n      l(e) ? (this.computedErrorMessages.push(e), this.computedError = !0) : !1 === e && (this.computedError = !0);\n    }), !this.computedError;\n  }\n\n  focus() {\n    throw new Error(\"focus method should be implemented in component\");\n  }\n\n  reset() {\n    throw new Error(\"reset method should be implemented in component\");\n  }\n\n  resetValidation() {\n    this.computedErrorMessages = [], this.computedError = !1;\n  }\n\n  hasError() {\n    return this.computedError;\n  }\n\n  ValidateMixin_onBlur() {\n    this.isFocused = !1, this.computedError = !1, this.validate();\n  }\n\n  get shouldValidateOnBlur() {\n    return this.hadFocus;\n  }\n\n  get computedError() {\n    return this.error || this.internalError;\n  }\n\n  set computedError(e) {\n    this.internalError = e;\n  }\n\n  get computedErrorMessages() {\n    return this.errorMessages ? prepareValidations(this.errorMessages) : this.internalErrorMessages;\n  }\n\n  set computedErrorMessages(e) {\n    this.internalErrorMessages = e;\n  }\n\n};\nI = r([c({})], I);\nconst z = s.with(class Props {\n  constructor() {\n    this.arrayValue = o({\n      type: [String, Object],\n      default: \"\"\n    }), this.label = o({\n      type: String,\n      default: \"\"\n    }), this.leftLabel = o({\n      type: Boolean,\n      default: !1\n    }), this.trueValue = o({\n      default: !0\n    }), this.falseValue = o({\n      default: !1\n    }), this.indeterminate = o({\n      type: Boolean,\n      default: !1\n    }), this.indeterminateValue = o({\n      type: [Boolean, Array, String, Object],\n      default: null\n    });\n  }\n\n});\nlet P = class SelectableMixin extends a(h, x, I, E, z) {\n  created() {\n    this.isSelectableComponent = !0, this.checkDuplicates();\n  }\n\n  get isChecked() {\n    return this.modelIsArray ? this.modelValue && this.modelValue.includes(this.arrayValue) : this.valueComputed === this.trueValue;\n  }\n\n  get isIndeterminate() {\n    return this.indeterminate && this.valueComputed === this.indeterminateValue;\n  }\n\n  get modelIsArray() {\n    return !!this.arrayValue;\n  }\n\n  reset() {\n    this.$emit(\"update:modelValue\", !1);\n  }\n\n  checkDuplicates() {\n    const e = [this.falseValue, this.trueValue];\n    this.indeterminate && e.push(this.indeterminateValue);\n    if (new Set(e).size !== e.length) throw new Error(\"falseValue, trueValue, indeterminateValue props should have strictly different values, which is not the case.\");\n  }\n\n  onFocus(e) {\n    this.$emit(\"focus\", e);\n  }\n\n  onBlur(e) {\n    this.$refs.input !== e.target || this.isElementRelated(e.relatedTarget) || (this.ValidateMixin_onBlur(), this.$emit(\"blur\", e));\n  }\n\n  isElementRelated(e) {\n    return [this.$refs.label, this.$refs.container].includes(e);\n  }\n\n  onWrapperClick() {\n    this.toggleSelection();\n  }\n\n  toggleSelection() {\n    this.readonly || this.disabled || this.loading || (this.modelIsArray ? this.modelValue ? this.modelValue.includes(this.arrayValue) ? this.$emit(\"update:modelValue\", this.modelValue.filter(e => e !== this.arrayValue)) : this.$emit(\"update:modelValue\", this.modelValue.concat(this.arrayValue)) : this.$emit(\"update:modelValue\", [this.arrayValue]) : this.indeterminate ? this.isIndeterminate ? this.valueComputed = this.trueValue : this.isChecked ? this.valueComputed = this.falseValue : this.valueComputed = this.indeterminateValue : this.isChecked ? this.valueComputed = this.falseValue : this.valueComputed = this.trueValue);\n  }\n\n};\nP = r([c({\n  emits: [\"update:modelValue\", \"focus\", \"blur\"]\n})], P);\nconst A = s.with(class SwitchProps {\n  constructor() {\n    this.modelValue = o({\n      type: [Boolean, Array, String, Object],\n      default: !1\n    }), this.size = o({\n      type: String,\n      default: \"medium\",\n      validator: e => [\"medium\", \"small\", \"large\"].includes(e)\n    }), this.trueLabel = o({\n      type: String,\n      default: null\n    }), this.falseLabel = o({\n      type: String,\n      default: null\n    }), this.trueInnerLabel = o({\n      type: String,\n      default: null\n    }), this.falseInnerLabel = o({\n      type: String,\n      default: null\n    }), this.color = o({\n      type: String,\n      default: \"primary\"\n    });\n  }\n\n});\nlet O = class VaSwitch extends a(P, E, h, A) {\n  constructor() {\n    super(...arguments), this.SetupContext = i(() => {\n      const {\n        hasKeyboardFocus: e,\n        keyboardFocusListeners: t\n      } = L();\n      return {\n        hasKeyboardFocus: e,\n        keyboardFocusListeners: t\n      };\n    });\n  }\n\n  get computedInnerLabel() {\n    return this.$props.trueInnerLabel && this.isChecked ? this.$props.trueInnerLabel : this.$props.falseInnerLabel && !this.isChecked ? this.$props.falseInnerLabel : \"\";\n  }\n\n  get computedLabel() {\n    return this.$props.trueLabel && this.isChecked ? this.$props.trueLabel : this.$props.falseLabel && !this.isChecked ? this.$props.falseLabel : this.$props.label;\n  }\n\n  get computedClass() {\n    return {\n      \"va-switch--checked\": this.isChecked,\n      \"va-switch--indeterminate\": this.isIndeterminate,\n      \"va-switch--small\": \"small\" === this.$props.size,\n      \"va-switch--large\": \"large\" === this.$props.size,\n      \"va-switch--disabled\": this.$props.disabled,\n      \"va-switch--left-label\": this.$props.leftLabel,\n      \"va-switch--error\": this.computedError,\n      \"va-switch--on-keyboard-focus\": this.SetupContext.hasKeyboardFocus\n    };\n  }\n\n  get progressCircleSize() {\n    return {\n      small: \"15px\",\n      medium: \"20px\",\n      large: \"25px\"\n    }[this.$props.size];\n  }\n\n  get trackStyle() {\n    return {\n      borderColor: this.$props.error ? this.theme.getColor(\"danger\") : \"\",\n      backgroundColor: this.isChecked ? this.colorComputed : this.theme.getColor(\"gray\")\n    };\n  }\n\n  get labelStyle() {\n    return {\n      color: this.$props.error ? this.theme.getColor(\"danger\") : \"\"\n    };\n  }\n\n};\nO = r([c({\n  name: \"VaSwitch\",\n  components: {\n    VaProgressCircle: j,\n    VaMessageListWrapper: M\n  },\n  emits: [\"focus\", \"blur\", \"update:modelValue\"]\n})], O);\nvar W = O;\nconst X = [\"aria-checked\", \"id\", \"name\", \"disabled\"],\n      K = {\n  class: \"va-switch__track-label\"\n},\n      N = {\n  class: \"va-switch__checker-wrapper\"\n},\n      D = {\n  class: \"va-switch__checker\"\n};\nB(\":root{--va-switch-display:inline-block;--va-switch-checker-position:absolute;--va-switch-checker-top:0;--va-switch-checker-bottom:0;--va-switch-checker-margin:auto 0.3rem;--va-switch-checker-transform:translateX(0);--va-switch-checker-height:1.5rem;--va-switch-checker-width:1.5rem;--va-switch-checker-background-color:#fff;--va-switch-checker-border-radius:50%;--va-switch-checker-box-shadow:0 0.1rem 0.2rem rgba(0,0,0,0.3);--va-switch-checker-transition:all 0.2s ease;--va-switch-checker-display:flex;--va-switch-checker-justify-content:center;--va-switch-checker-align-items:center;--va-switch-checker-wrapper-position:absolute;--va-switch-checker-wrapper-margin:auto;--va-switch-checker-wrapper-transform:translateX(0);--va-switch-checker-wrapper-top:0;--va-switch-checker-wrapper-left:0;--va-switch-checker-wrapper-bottom:0;--va-switch-checker-wrapper-right:0;--va-switch-checker-wrapper-width:100%;--va-switch-checker-wrapper-height:100%;--va-switch-checker-wrapper-transition:all 0.2s ease;--va-switch-checker-wrapper-pointer-events:none;--va-switch-label-left-padding:0.3rem;--va-switch-label-right-padding:0.3rem;--va-switch-track-display:flex;--va-switch-track-overflow:hidden;--va-switch-track-border-radius:1rem;--va-switch-track-height:100%;--va-switch-track-width:100%;--va-switch-track-background:#fff;--va-switch-track-box-shadow:inset 0 0.1rem 0.2rem rgba(0,0,0,0.1);--va-switch-track-transition:background-color 0.2s ease;--va-switch-container-display:inline-flex;--va-switch-container-align-items:center;--va-switch-inner-cursor:pointer;--va-switch-inner-display:inline-block;--va-switch-inner-position:relative;--va-switch-inner-height:2rem;--va-switch-inner-width:auto;--va-switch-inner-min-width:4rem;--va-switch-inner-border-radius:1rem;--va-switch-sm-inner-height:1.5rem;--va-switch-sm-inner-width:auto;--va-switch-sm-inner-min-width:3rem;--va-switch-lg-inner-height:2.5rem;--va-switch-lg-inner-width:auto;--va-switch-lg-inner-min-width:5rem}.va-switch{display:var(--va-switch-display)}.va-switch__container{align-items:var(--va-switch-container-align-items);display:var(--va-switch-container-display)}.va-switch:focus{outline:none}.va-switch__inner{border-radius:var(--va-switch-inner-border-radius);cursor:var(--va-switch-inner-cursor);display:var(--va-switch-inner-display);height:var(--va-switch-inner-height);min-width:var(--va-switch-inner-min-width);position:var(--va-switch-inner-position);width:var(--va-switch-inner-width)}.va-switch__inner:focus{box-shadow:0 0 0 .3rem rgba(52,144,220,.5);outline:0}.va-switch--small .va-switch__inner{height:var(--va-switch-sm-inner-height);min-width:var(--va-switch-sm-inner-min-width);width:var(--va-switch-sm-inner-width)}.va-switch--small .va-switch__checker{height:1.1rem;width:1.1rem}.va-switch--large .va-switch__inner{height:var(--va-switch-lg-inner-height);min-width:var(--va-switch-lg-inner-min-width);width:var(--va-switch-lg-inner-width)}.va-switch--large .va-switch__checker{height:1.8rem;width:1.8rem}.va-switch--disabled{cursor:default;opacity:.4;pointer-events:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.va-switch--left-label .va-switch__container{flex-direction:row-reverse}.va-switch--left-label .va-switch__label{padding:0 var(--va-switch-label-left-padding) 0 0}.va-switch--indeterminate .va-switch__checker{margin:auto 0;transform:translateX(-50%)}.va-switch--indeterminate .va-switch__checker-wrapper{transform:translateX(50%)}.va-switch--checked .va-switch__checker{margin:auto -.3rem;transform:translateX(-100%)}.va-switch--checked .va-switch__checker-wrapper{transform:translateX(100%)}.va-switch--error .va-switch__track{border:.1rem solid}.va-switch__label{cursor:pointer;padding:0 0 0 var(--va-switch-label-right-padding);text-align:left}.va-switch .va-switch__track{background:var(--va-switch-track-background);border-radius:var(--va-switch-track-border-radius);box-shadow:var(--va-switch-track-box-shadow);display:var(--va-switch-track-display);height:var(--va-switch-track-height);overflow:var(--va-switch-track-overflow);transition:var(--va-switch-track-transition);width:var(--va-switch-track-width)}.va-switch--on-keyboard-focus.va-switch .va-switch__track{box-shadow:0 0 .5rem 0 rgba(0,0,0,.3);transition:all,.6s,ease-in}.va-switch--small.va-switch .va-switch__track{border-radius:.75rem}.va-switch--large.va-switch .va-switch__track{border-radius:1.25rem}.va-switch .va-switch__track-label{color:#fff;margin:auto .5rem auto 2rem;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.va-switch--checked.va-switch .va-switch__track-label{margin:auto 2rem auto .5rem}.va-switch--small.va-switch .va-switch__track-label{margin:auto .5rem auto 1.55rem}.va-switch--checked.va-switch--small.va-switch .va-switch__track-label{margin:auto 1.55rem auto .5rem}.va-switch--large.va-switch .va-switch__track-label{margin:auto .5rem auto 2.3rem}.va-switch--checked.va-switch--large.va-switch .va-switch__track-label{margin:auto 2.3rem auto .5rem}.va-switch__checker{align-items:var(--va-switch-checker-align-items);background-color:var(--va-switch-checker-background-color);border-radius:var(--va-switch-checker-border-radius);bottom:var(--va-switch-checker-bottom);box-shadow:var(--va-switch-checker-box-shadow);display:var(--va-switch-checker-display);height:var(--va-switch-checker-height);justify-content:var(--va-switch-checker-justify-content);margin:var(--va-switch-checker-margin);position:var(--va-switch-checker-position);top:var(--va-switch-checker-top);transform:var(--va-switch-checker-transform);transition:var(--va-switch-checker-transition);width:var(--va-switch-checker-width)}.va-switch__checker-wrapper{bottom:var(--va-switch-checker-wrapper-bottom);height:var(--va-switch-checker-wrapper-height);left:var(--va-switch-checker-wrapper-left);margin:var(--va-switch-checker-wrapper-margin);pointer-events:var(--va-switch-checker-wrapper-pointer-events);position:var(--va-switch-checker-wrapper-position);right:var(--va-switch-checker-wrapper-right);top:var(--va-switch-checker-wrapper-top);transform:var(--va-switch-checker-wrapper-transform);transition:var(--va-switch-checker-wrapper-transition);width:var(--va-switch-checker-wrapper-width)}.va-switch__input{height:0;opacity:0;position:absolute;width:0}\"), W.render = function render(e, t, r, s, a, i) {\n  const c = u(\"va-progress-circle\"),\n        o = u(\"VaMessageListWrapper\");\n  return p(), v(o, {\n    class: w([\"va-switch\", e.computedClass]),\n    disabled: e.$props.disabled,\n    success: e.$props.success,\n    messages: e.$props.messages,\n    error: e.computedError,\n    \"error-messages\": e.computedErrorMessages,\n    \"error-count\": e.$props.errorCount\n  }, {\n    default: m(() => [g(\"div\", {\n      class: \"va-switch__container\",\n      tabindex: \"-1\",\n      onBlur: t[6] || (t[6] = (...t) => e.onBlur && e.onBlur(...t)),\n      ref: \"container\"\n    }, [g(\"div\", {\n      class: \"va-switch__inner\",\n      onClick: t[3] || (t[3] = t => e.onWrapperClick())\n    }, [g(\"input\", k({\n      class: \"va-switch__input\",\n      ref: \"input\",\n      type: \"checkbox\",\n      role: \"switch\",\n      \"aria-checked\": e.isChecked,\n      id: String(e.$props.id),\n      name: String(e.$props.name),\n      readonly: \"\",\n      disabled: e.$props.disabled\n    }, b(e.SetupContext.keyboardFocusListeners), {\n      onFocus: t[0] || (t[0] = (...t) => e.onFocus && e.onFocus(...t)),\n      onBlur: t[1] || (t[1] = (...t) => e.onBlur && e.onBlur(...t)),\n      onKeypress: t[2] || (t[2] = f(t => e.toggleSelection(), [\"prevent\"]))\n    }), null, 16, X), g(\"div\", {\n      class: \"va-switch__track\",\n      style: y(e.trackStyle)\n    }, [g(\"div\", K, [_(e.$slots, \"innerLabel\", {}, () => [V(C(e.computedInnerLabel), 1)])]), g(\"div\", N, [g(\"span\", D, [e.$props.loading ? (p(), v(c, {\n      key: 0,\n      indeterminate: \"\",\n      size: e.progressCircleSize,\n      color: e.trackStyle.backgroundColor\n    }, null, 8, [\"size\", \"color\"])) : S(\"v-if\", !0)])])], 4)]), g(\"div\", {\n      class: \"va-switch__label\",\n      ref: \"label\",\n      onBlur: t[4] || (t[4] = (...t) => e.onBlur && e.onBlur(...t)),\n      style: y(e.labelStyle),\n      onClick: t[5] || (t[5] = t => e.onWrapperClick())\n    }, [_(e.$slots, \"default\", {}, () => [V(C(e.computedLabel), 1)])], 36)], 544)]),\n    _: 3\n  }, 8, [\"class\", \"disabled\", \"success\", \"messages\", \"error\", \"error-messages\", \"error-count\"]);\n}, W.__file = \"src/components/va-switch/VaSwitch.vue\";\nvar R = t(W);\nexport { R as default };","map":{"version":3,"mappings":"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","names":["prepareValidations","messages","callArguments","isString","map","message","isFunction","PropsMixin","Vue","with","Props","constructor","this","prop","type","Array","default","Boolean","String","Number","undefined","validator","Error","FormComponentMixin","mixins","setup","inject","FormServiceKey","mounted","Object","keys","formProvider","length","onChildMounted","unmounted","onChildUnmounted","validate","computedError","computedErrorMessages","rules","flatten","modelValue","forEach","validateResult","push","focus","reset","resetValidation","hasError","ValidateMixin_onBlur","isFocused","shouldValidateOnBlur","hadFocus","error","internalError","errorMessage","errorMessages","internalErrorMessages","Options","SelectableMixin","ColorMixin","StatefulMixin","LoadingMixin","created","isSelectableComponent","checkDuplicates","isChecked","modelIsArray","includes","arrayValue","valueComputed","trueValue","isIndeterminate","indeterminate","indeterminateValue","$emit","values","falseValue","Set","size","onFocus","event","onBlur","$refs","input","target","isElementRelated","relatedTarget","element","label","container","onWrapperClick","toggleSelection","readonly","disabled","loading","filter","option","concat","emits","SwitchPropsMixin","SwitchProps","VaSwitch","hasKeyboardFocus","keyboardFocusListeners","useKeyboardOnlyFocus","computedInnerLabel","$props","trueInnerLabel","falseInnerLabel","computedLabel","trueLabel","falseLabel","computedClass","leftLabel","SetupContext","progressCircleSize","small","medium","large","trackStyle","borderColor","theme","getColor","backgroundColor","colorComputed","labelStyle","color","name","components","VaProgressCircle","VaMessageListWrapper","class","N","D","B","_createBlock","_ctx","success","errorCount","_createElementVNode","tabindex","ref","onClick","_mergeProps","role","id","_toHandlers","onKeypress","style","_renderSlot","_hoisted_2","p","_hoisted_4","_hoisted_3","withConfigTransport"],"sources":["../../src/mixins/FormComponent/FormComponentMixin.ts","../../src/mixins/SelectableMixin/SelectableMixin.ts","../../src/components/va-switch/VaSwitch.vue","../../src/components/va-switch/VaSwitch.vue?vue&type=template&id=57ce0148&lang.js","../../src/components/va-switch/index.ts"],"sourcesContent":["import flatten from 'lodash/flatten'\nimport isFunction from 'lodash/isFunction'\nimport isString from 'lodash/isString'\nimport { inject } from 'vue'\nimport { mixins, Options, prop, Vue, setup } from 'vue-class-component'\n\nimport { FormProvider, FormServiceKey } from '../../components/va-form/consts'\n\nconst prepareValidations = (messages: string | any[] = [], callArguments = null) => {\n  if (isString(messages)) {\n    messages = [messages]\n  }\n  return messages\n    .map((message: any) => isFunction(message) ? message(callArguments) : message)\n}\n\nclass Props {\n  rules = prop<any[]>({ type: Array, default: () => [] })\n  disabled = prop<boolean>({ type: Boolean, default: false })\n  readonly = prop<boolean>({ type: Boolean, default: false })\n  success = prop<boolean>({ type: Boolean, default: false })\n  messages = prop<any[]>({ type: Array, default: () => [] })\n  error = prop<boolean>({ type: Boolean, default: false })\n  errorMessages = prop<any[] | string>({ type: [Array, String] })\n  errorCount = prop<string | number>({ type: Number, default: 1 })\n  id = prop<string | number>({\n    type: [String, Number],\n    default: undefined,\n  })\n\n  name = prop<string | number>({\n    type: [String, Number],\n    default: undefined,\n  })\n\n  modelValue = prop({\n    validator: () => {\n      throw new Error('ValidateMixin: `modelValue` prop should be defined in component.')\n    },\n  })\n}\n\nconst PropsMixin = Vue.with(Props)\n\n/** @deprecated */\n@Options({})\nexport class FormComponentMixin extends mixins(\n  PropsMixin,\n) {\n  hadFocus = false\n  isFocused = false\n  internalErrorMessages: any[] = []\n  internalError = false\n  isFormComponent = true\n\n  // beforeMount () {\n  //   console.log('im here', )\n  //   // That's just a flag for form to figure out whether component is form component.\n  //   this.isFormComponent = true\n  // }\n\n  // @Watch('rules', { deep: true })\n  // onRulesChanged (newVal: any, oldVal: any) {\n  //   // We want this check, because rules are passed as function,\n  //   // and, therefore, are recalculated on pretty much every change.\n  //   if (deepEqual(newVal, oldVal)) {\n  //     return\n  //   }\n  //   this.validate()\n  // }\n\n  // @Watch('isFocused')\n  // onIsFocusedChanged (isFocused: boolean) {\n  //   if (isFocused) {\n  //     this.hadFocus = true\n  //   }\n  // }\n\n  formProvider = setup(() => {\n    const formProvider: FormProvider | undefined = inject(FormServiceKey, undefined)\n\n    return {\n      ...formProvider,\n    }\n  })\n\n  mounted () {\n    if (Object.keys(this.formProvider).length) {\n      (this.formProvider as FormProvider).onChildMounted(this)\n    }\n  }\n\n  unmounted () {\n    if (Object.keys(this.formProvider).length) {\n      (this.formProvider as FormProvider).onChildUnmounted(this)\n    }\n  }\n\n  /** @public */\n  validate (): any {\n    this.computedError = false\n    this.computedErrorMessages = []\n\n    if (this.rules && this.rules.length > 0) {\n      prepareValidations(flatten(this.rules), this.modelValue as any)\n        .forEach((validateResult: any) => {\n          if (isString(validateResult)) {\n            this.computedErrorMessages.push(validateResult)\n            this.computedError = true\n          } else if (validateResult === false) {\n            this.computedError = true\n          }\n        })\n    }\n\n    return !this.computedError\n  }\n\n  /** @public */\n  focus (): void {\n    throw new Error('focus method should be implemented in component')\n  }\n\n  /** @public */\n  reset (): void {\n    throw new Error('reset method should be implemented in component')\n  }\n\n  resetValidation (): void {\n    this.computedErrorMessages = []\n    this.computedError = false\n  }\n\n  hasError (): any {\n    return this.computedError\n  }\n\n  // eslint-disable-next-line camelcase\n  ValidateMixin_onBlur (): void {\n    this.isFocused = false\n    this.computedError = false\n    this.validate()\n  }\n\n  get shouldValidateOnBlur () {\n    // We want for inputs to validate on blur only after they've been interacted with.\n    return this.hadFocus\n  }\n\n  get computedError () {\n    return this.error || this.internalError\n  }\n\n  set computedError (errorMessage) {\n    this.internalError = errorMessage\n  }\n\n  get computedErrorMessages () {\n    return this.errorMessages ? prepareValidations(this.errorMessages) : this.internalErrorMessages\n  }\n\n  set computedErrorMessages (errorMessages) {\n    this.internalErrorMessages = errorMessages\n  }\n}\n","import { mixins, Options, prop, setup, Vue } from 'vue-class-component'\n\nimport ColorMixin from '../../services/color-config/ColorMixin'\nimport { FormComponentMixin } from '../FormComponent/FormComponentMixin'\nimport { StatefulMixin } from '../StatefulMixin/StatefulMixin'\nimport { LoadingMixin } from '../LoadingMixin/LoadingMixin'\n\nclass Props {\n  arrayValue = prop<string | Record<string, unknown>>({ type: [String, Object], default: '' })\n  label = prop<string>({ type: String, default: '' })\n  leftLabel = prop<boolean>({ type: Boolean, default: false })\n  trueValue = prop({ default: true })\n  falseValue = prop({ default: false })\n  indeterminate = prop<boolean>({ type: Boolean, default: false })\n  indeterminateValue = prop<boolean | any[] | string | Record<string, unknown>>({\n    type: [Boolean, Array, String, Object],\n    default: null,\n  })\n}\n\nconst PropsMixin = Vue.with(Props)\n\n@Options({\n  emits: ['update:modelValue', 'focus', 'blur'],\n})\nexport class SelectableMixin extends mixins(\n  ColorMixin,\n  StatefulMixin,\n  FormComponentMixin,\n  LoadingMixin,\n  PropsMixin,\n) {\n  isSelectableComponent!: boolean\n\n  created () {\n    this.isSelectableComponent = true\n    this.checkDuplicates()\n  }\n\n  get isChecked (): boolean {\n    if (this.modelIsArray) {\n      return this.modelValue && this.modelValue.includes(this.arrayValue)\n    }\n    return this.valueComputed === this.trueValue\n  }\n\n  get isIndeterminate (): boolean {\n    return this.indeterminate && this.valueComputed === this.indeterminateValue\n  }\n\n  get modelIsArray (): boolean {\n    return !!this.arrayValue\n  }\n\n  /** @public */\n  reset (): void {\n    this.$emit('update:modelValue', false)\n  }\n\n  checkDuplicates (): void {\n    // Just validating state values.\n    const values: any[] = [this.falseValue, this.trueValue]\n    if (this.indeterminate) {\n      values.push(this.indeterminateValue)\n    }\n    const hasDuplicates = new Set(values).size !== values.length\n    if (hasDuplicates) {\n      throw new Error('falseValue, trueValue, indeterminateValue props should have strictly different values, which is not the case.')\n    }\n  }\n\n  onFocus (event: FocusEvent): void {\n    this.$emit('focus', event)\n  }\n\n  onBlur (event: FocusEvent): void {\n    if (this.$refs.input === event.target && !this.isElementRelated(event.relatedTarget)) {\n      this.ValidateMixin_onBlur()\n      this.$emit('blur', event)\n    }\n  }\n\n  isElementRelated (element: any): boolean {\n    return [this.$refs.label, this.$refs.container].includes(element)\n  }\n\n  onWrapperClick (): void {\n    this.toggleSelection()\n  }\n\n  toggleSelection (): void {\n    if (this.readonly || this.disabled || this.loading) {\n      return\n    }\n    // For array access we pretend computedValue does not exist and use modelValue + emit input directly.\n    if (this.modelIsArray) {\n      if (!this.modelValue) {\n        this.$emit('update:modelValue', [this.arrayValue])\n      } else if (this.modelValue.includes(this.arrayValue)) {\n        this.$emit('update:modelValue', this.modelValue.filter((option: any) => option !== this.arrayValue))\n      } else {\n        this.$emit('update:modelValue', this.modelValue.concat(this.arrayValue))\n      }\n      return\n    }\n\n    if (this.indeterminate) {\n      if (this.isIndeterminate) {\n        this.valueComputed = this.trueValue\n      } else if (this.isChecked) {\n        this.valueComputed = this.falseValue\n      } else {\n        // unchecked\n        this.valueComputed = this.indeterminateValue\n      }\n      return\n    }\n\n    if (this.isChecked) {\n      this.valueComputed = this.falseValue\n    } else {\n      this.valueComputed = this.trueValue\n    }\n  }\n}\n","<template>\n  <VaMessageListWrapper\n    class=\"va-switch\"\n    :class=\"computedClass\"\n    :disabled=\"$props.disabled\"\n    :success=\"$props.success\"\n    :messages=\"$props.messages\"\n    :error=\"computedError\"\n    :error-messages=\"computedErrorMessages\"\n    :error-count=\"$props.errorCount\"\n  >\n    <div\n      class=\"va-switch__container\"\n      tabindex=\"-1\"\n      @blur=\"onBlur\"\n      ref=\"container\"\n    >\n      <div\n        class=\"va-switch__inner\"\n        @click=\"onWrapperClick()\"\n      >\n        <input\n          class=\"va-switch__input\"\n          ref=\"input\"\n          type=\"checkbox\"\n          role=\"switch\"\n          :aria-checked=\"isChecked\"\n          :id=\"String($props.id)\"\n          :name=\"String($props.name)\"\n          readonly\n          :disabled=\"$props.disabled\"\n          v-on=\"SetupContext.keyboardFocusListeners\"\n          @focus=\"onFocus\"\n          @blur=\"onBlur\"\n          @keypress.prevent=\"toggleSelection()\"\n        >\n        <div\n          class=\"va-switch__track\"\n          :style=\"trackStyle\"\n        >\n          <div class=\"va-switch__track-label\">\n            <slot name=\"innerLabel\">\n              {{ computedInnerLabel }}\n            </slot>\n          </div>\n          <div class=\"va-switch__checker-wrapper\">\n            <span\n              class=\"va-switch__checker\"\n            >\n              <va-progress-circle\n                v-if=\"$props.loading\"\n                indeterminate\n                :size=\"progressCircleSize\"\n                :color=\"trackStyle.backgroundColor\"\n              />\n            </span>\n          </div>\n        </div>\n      </div>\n      <div\n        class=\"va-switch__label\"\n        ref=\"label\"\n        @blur=\"onBlur\"\n        :style=\"labelStyle\"\n        @click=\"onWrapperClick()\"\n      >\n        <slot>\n          {{ computedLabel }}\n        </slot>\n      </div>\n    </div>\n  </VaMessageListWrapper>\n</template>\n\n<script lang=\"ts\">\nimport { Options, prop, mixins, setup, Vue } from 'vue-class-component'\n\nimport ColorMixin from '../../services/color-config/ColorMixin'\nimport { SelectableMixin } from '../../mixins/SelectableMixin/SelectableMixin'\nimport { LoadingMixin } from '../../mixins/LoadingMixin/LoadingMixin'\nimport { VaProgressCircle } from '../va-progress-circle'\nimport { VaMessageListWrapper } from '../va-input'\nimport useKeyboardOnlyFocus from '../../composables/useKeyboardOnlyFocus'\n\nclass SwitchProps {\n  modelValue = prop<boolean | any[] | string | Record<string, unknown>>({\n    type: [Boolean, Array, String, Object],\n    default: false,\n  })\n\n  size = prop<string>({\n    type: String,\n    default: 'medium',\n    validator: (modelValue: string) => {\n      return ['medium', 'small', 'large'].includes(modelValue)\n    },\n  })\n\n  trueLabel = prop<string>({ type: String, default: null })\n  falseLabel = prop<string>({ type: String, default: null })\n  trueInnerLabel = prop<string>({ type: String, default: null })\n  falseInnerLabel = prop<string>({ type: String, default: null })\n  color = prop<string>({ type: String, default: 'primary' })\n}\n\nconst SwitchPropsMixin = Vue.with(SwitchProps)\n\n@Options({\n  name: 'VaSwitch',\n  components: { VaProgressCircle, VaMessageListWrapper },\n  emits: ['focus', 'blur', 'update:modelValue'],\n})\nexport default class VaSwitch extends mixins(\n  SelectableMixin,\n  LoadingMixin,\n  ColorMixin,\n  SwitchPropsMixin,\n) {\n  SetupContext = setup(() => {\n    const { hasKeyboardFocus, keyboardFocusListeners } = useKeyboardOnlyFocus()\n\n    return {\n      hasKeyboardFocus,\n      keyboardFocusListeners,\n    }\n  })\n\n  get computedInnerLabel () {\n    if (this.$props.trueInnerLabel && this.isChecked) {\n      return this.$props.trueInnerLabel\n    }\n    if (this.$props.falseInnerLabel && !this.isChecked) {\n      return this.$props.falseInnerLabel\n    }\n    return ''\n  }\n\n  get computedLabel () {\n    if (this.$props.trueLabel && this.isChecked) {\n      return this.$props.trueLabel\n    }\n    if (this.$props.falseLabel && !this.isChecked) {\n      return this.$props.falseLabel\n    }\n    return this.$props.label\n  }\n\n  get computedClass () {\n    return {\n      'va-switch--checked': this.isChecked,\n      'va-switch--indeterminate': this.isIndeterminate,\n      'va-switch--small': this.$props.size === 'small',\n      'va-switch--large': this.$props.size === 'large',\n      'va-switch--disabled': this.$props.disabled,\n      'va-switch--left-label': this.$props.leftLabel,\n      'va-switch--error': this.computedError,\n      'va-switch--on-keyboard-focus': this.SetupContext.hasKeyboardFocus,\n    }\n  }\n\n  get progressCircleSize () {\n    const size: any = {\n      small: '15px',\n      medium: '20px',\n      large: '25px',\n    }\n    return size[this.$props.size as string]\n  }\n\n  get trackStyle () {\n    return {\n      borderColor: this.$props.error\n        ? this.theme.getColor('danger')\n        : '',\n      backgroundColor: this.isChecked\n        ? this.colorComputed\n        : this.theme.getColor('gray'),\n    }\n  }\n\n  get labelStyle () {\n    return {\n      color: this.$props.error ? this.theme.getColor('danger') : '',\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import 'variables';\n\n.va-switch {\n  @at-root {\n    .va-switch__container {\n      display: var(--va-switch-container-display);\n      align-items: var(--va-switch-container-align-items);\n    }\n  }\n\n  display: var(--va-switch-display);\n\n  &:focus {\n    outline: none;\n  }\n\n  &__inner {\n    cursor: var(--va-switch-inner-cursor);\n    display: var(--va-switch-inner-display);\n    position: var(--va-switch-inner-position);\n    height: var(--va-switch-inner-height);\n    width: var(--va-switch-inner-width);\n    min-width: var(--va-switch-inner-min-width);\n    border-radius: var(--va-switch-inner-border-radius);\n\n    &:focus {\n      outline: 0;\n      box-shadow: 0 0 0 0.3rem rgba(52, 144, 220, 0.5);\n    }\n  }\n\n  &--small {\n    .va-switch {\n      &__inner {\n        height: var(--va-switch-sm-inner-height);\n        width: var(--va-switch-sm-inner-width);\n        min-width: var(--va-switch-sm-inner-min-width);\n      }\n\n      &__checker {\n        height: 1.1rem;\n        width: 1.1rem;\n      }\n    }\n  }\n\n  &--large {\n    .va-switch {\n      &__inner {\n        height: var(--va-switch-lg-inner-height);\n        width: var(--va-switch-lg-inner-width);\n        min-width: var(--va-switch-lg-inner-min-width);\n      }\n\n      &__checker {\n        height: 1.8rem;\n        width: 1.8rem;\n      }\n    }\n  }\n\n  &--disabled {\n    @include va-disabled;\n  }\n\n  &--left-label {\n    .va-switch__container {\n      flex-direction: row-reverse;\n    }\n\n    .va-switch__label {\n      padding: 0 var(--va-switch-label-left-padding) 0 0;\n    }\n  }\n\n  &--indeterminate {\n    .va-switch {\n      &__checker {\n        margin: auto 0;\n        transform: translateX(-50%);\n      }\n\n      &__checker-wrapper {\n        transform: translateX(50%);\n      }\n    }\n  }\n\n  &--checked {\n    .va-switch {\n      &__checker {\n        margin: auto -0.3rem;\n        transform: translateX(-100%);\n      }\n\n      &__checker-wrapper {\n        transform: translateX(100%);\n      }\n    }\n  }\n\n  &--error {\n    .va-switch {\n      &__track {\n        border: 0.1rem solid;\n      }\n    }\n  }\n\n  &__label {\n    cursor: pointer;\n    text-align: left;\n    padding: 0 0 0 var(--va-switch-label-right-padding);\n  }\n\n  #{&}__track {\n    display: var(--va-switch-track-display);\n    overflow: var(--va-switch-track-overflow);\n    border-radius: var(--va-switch-track-border-radius);\n    height: var(--va-switch-track-height);\n    width: var(--va-switch-track-width);\n    background: var(--va-switch-track-background);\n    box-shadow: var(--va-switch-track-box-shadow);\n    transition: var(--va-switch-track-transition);\n\n    @at-root {\n      .va-switch--on-keyboard-focus#{&} {\n        transition: all, 0.6s, ease-in;\n        box-shadow: 0 0 0.5rem 0 rgba(0, 0, 0, 0.3);\n      }\n\n      .va-switch--small#{&} {\n        border-radius: 0.75rem;\n      }\n\n      .va-switch--large#{&} {\n        border-radius: 1.25rem;\n      }\n    }\n  }\n\n  #{&}__track-label {\n    color: $white;\n    margin: auto 0.5rem auto 2rem;\n    user-select: none;\n\n    @at-root {\n      .va-switch--checked#{&} {\n        margin: auto 2rem auto 0.5rem;\n      }\n\n      .va-switch--small#{&} {\n        margin: auto 0.5rem auto 1.55rem;\n\n        @at-root {\n          .va-switch--checked#{&} {\n            margin: auto 1.55rem auto 0.5rem;\n          }\n        }\n      }\n\n      .va-switch--large#{&} {\n        margin: auto 0.5rem auto 2.3rem;\n\n        @at-root {\n          .va-switch--checked#{&} {\n            margin: auto 2.3rem auto 0.5rem;\n          }\n        }\n      }\n    }\n  }\n\n  &__checker {\n    position: var(--va-switch-checker-position);\n    top: var(--va-switch-checker-top);\n    bottom: var(--va-switch-checker-bottom);\n    margin: var(--va-switch-checker-margin);\n    transform: var(--va-switch-checker-transform);\n    height: var(--va-switch-checker-height);\n    width: var(--va-switch-checker-width);\n    background-color: var(--va-switch-checker-background-color);\n    border-radius: var(--va-switch-checker-border-radius);\n    box-shadow: var(--va-switch-checker-box-shadow);\n    transition: var(--va-switch-checker-transition);\n    display: var(--va-switch-checker-display);\n    justify-content: var(--va-switch-checker-justify-content);\n    align-items: var(--va-switch-checker-align-items);\n  }\n\n  &__checker-wrapper {\n    position: var(--va-switch-checker-wrapper-position);\n    margin: var(--va-switch-checker-wrapper-margin);\n    transform: var(--va-switch-checker-wrapper-transform);\n    top: var(--va-switch-checker-wrapper-top);\n    left: var(--va-switch-checker-wrapper-left);\n    bottom: var(--va-switch-checker-wrapper-bottom);\n    right: var(--va-switch-checker-wrapper-right);\n    width: var(--va-switch-checker-wrapper-width);\n    height: var(--va-switch-checker-wrapper-height);\n    transition: var(--va-switch-checker-wrapper-transition);\n    pointer-events: var(--va-switch-checker-wrapper-pointer-events);\n  }\n\n  &__input {\n    position: absolute;\n    opacity: 0;\n    height: 0;\n    width: 0;\n  }\n}\n</style>\n","<template>\n  <VaMessageListWrapper\n    class=\"va-switch\"\n    :class=\"computedClass\"\n    :disabled=\"$props.disabled\"\n    :success=\"$props.success\"\n    :messages=\"$props.messages\"\n    :error=\"computedError\"\n    :error-messages=\"computedErrorMessages\"\n    :error-count=\"$props.errorCount\"\n  >\n    <div\n      class=\"va-switch__container\"\n      tabindex=\"-1\"\n      @blur=\"onBlur\"\n      ref=\"container\"\n    >\n      <div\n        class=\"va-switch__inner\"\n        @click=\"onWrapperClick()\"\n      >\n        <input\n          class=\"va-switch__input\"\n          ref=\"input\"\n          type=\"checkbox\"\n          role=\"switch\"\n          :aria-checked=\"isChecked\"\n          :id=\"String($props.id)\"\n          :name=\"String($props.name)\"\n          readonly\n          :disabled=\"$props.disabled\"\n          v-on=\"SetupContext.keyboardFocusListeners\"\n          @focus=\"onFocus\"\n          @blur=\"onBlur\"\n          @keypress.prevent=\"toggleSelection()\"\n        >\n        <div\n          class=\"va-switch__track\"\n          :style=\"trackStyle\"\n        >\n          <div class=\"va-switch__track-label\">\n            <slot name=\"innerLabel\">\n              {{ computedInnerLabel }}\n            </slot>\n          </div>\n          <div class=\"va-switch__checker-wrapper\">\n            <span\n              class=\"va-switch__checker\"\n            >\n              <va-progress-circle\n                v-if=\"$props.loading\"\n                indeterminate\n                :size=\"progressCircleSize\"\n                :color=\"trackStyle.backgroundColor\"\n              />\n            </span>\n          </div>\n        </div>\n      </div>\n      <div\n        class=\"va-switch__label\"\n        ref=\"label\"\n        @blur=\"onBlur\"\n        :style=\"labelStyle\"\n        @click=\"onWrapperClick()\"\n      >\n        <slot>\n          {{ computedLabel }}\n        </slot>\n      </div>\n    </div>\n  </VaMessageListWrapper>\n</template>\n\n<script lang=\"ts\">\nimport { Options, prop, mixins, setup, Vue } from 'vue-class-component'\n\nimport ColorMixin from '../../services/color-config/ColorMixin'\nimport { SelectableMixin } from '../../mixins/SelectableMixin/SelectableMixin'\nimport { LoadingMixin } from '../../mixins/LoadingMixin/LoadingMixin'\nimport { VaProgressCircle } from '../va-progress-circle'\nimport { VaMessageListWrapper } from '../va-input'\nimport useKeyboardOnlyFocus from '../../composables/useKeyboardOnlyFocus'\n\nclass SwitchProps {\n  modelValue = prop<boolean | any[] | string | Record<string, unknown>>({\n    type: [Boolean, Array, String, Object],\n    default: false,\n  })\n\n  size = prop<string>({\n    type: String,\n    default: 'medium',\n    validator: (modelValue: string) => {\n      return ['medium', 'small', 'large'].includes(modelValue)\n    },\n  })\n\n  trueLabel = prop<string>({ type: String, default: null })\n  falseLabel = prop<string>({ type: String, default: null })\n  trueInnerLabel = prop<string>({ type: String, default: null })\n  falseInnerLabel = prop<string>({ type: String, default: null })\n  color = prop<string>({ type: String, default: 'primary' })\n}\n\nconst SwitchPropsMixin = Vue.with(SwitchProps)\n\n@Options({\n  name: 'VaSwitch',\n  components: { VaProgressCircle, VaMessageListWrapper },\n  emits: ['focus', 'blur', 'update:modelValue'],\n})\nexport default class VaSwitch extends mixins(\n  SelectableMixin,\n  LoadingMixin,\n  ColorMixin,\n  SwitchPropsMixin,\n) {\n  SetupContext = setup(() => {\n    const { hasKeyboardFocus, keyboardFocusListeners } = useKeyboardOnlyFocus()\n\n    return {\n      hasKeyboardFocus,\n      keyboardFocusListeners,\n    }\n  })\n\n  get computedInnerLabel () {\n    if (this.$props.trueInnerLabel && this.isChecked) {\n      return this.$props.trueInnerLabel\n    }\n    if (this.$props.falseInnerLabel && !this.isChecked) {\n      return this.$props.falseInnerLabel\n    }\n    return ''\n  }\n\n  get computedLabel () {\n    if (this.$props.trueLabel && this.isChecked) {\n      return this.$props.trueLabel\n    }\n    if (this.$props.falseLabel && !this.isChecked) {\n      return this.$props.falseLabel\n    }\n    return this.$props.label\n  }\n\n  get computedClass () {\n    return {\n      'va-switch--checked': this.isChecked,\n      'va-switch--indeterminate': this.isIndeterminate,\n      'va-switch--small': this.$props.size === 'small',\n      'va-switch--large': this.$props.size === 'large',\n      'va-switch--disabled': this.$props.disabled,\n      'va-switch--left-label': this.$props.leftLabel,\n      'va-switch--error': this.computedError,\n      'va-switch--on-keyboard-focus': this.SetupContext.hasKeyboardFocus,\n    }\n  }\n\n  get progressCircleSize () {\n    const size: any = {\n      small: '15px',\n      medium: '20px',\n      large: '25px',\n    }\n    return size[this.$props.size as string]\n  }\n\n  get trackStyle () {\n    return {\n      borderColor: this.$props.error\n        ? this.theme.getColor('danger')\n        : '',\n      backgroundColor: this.isChecked\n        ? this.colorComputed\n        : this.theme.getColor('gray'),\n    }\n  }\n\n  get labelStyle () {\n    return {\n      color: this.$props.error ? this.theme.getColor('danger') : '',\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import 'variables';\n\n.va-switch {\n  @at-root {\n    .va-switch__container {\n      display: var(--va-switch-container-display);\n      align-items: var(--va-switch-container-align-items);\n    }\n  }\n\n  display: var(--va-switch-display);\n\n  &:focus {\n    outline: none;\n  }\n\n  &__inner {\n    cursor: var(--va-switch-inner-cursor);\n    display: var(--va-switch-inner-display);\n    position: var(--va-switch-inner-position);\n    height: var(--va-switch-inner-height);\n    width: var(--va-switch-inner-width);\n    min-width: var(--va-switch-inner-min-width);\n    border-radius: var(--va-switch-inner-border-radius);\n\n    &:focus {\n      outline: 0;\n      box-shadow: 0 0 0 0.3rem rgba(52, 144, 220, 0.5);\n    }\n  }\n\n  &--small {\n    .va-switch {\n      &__inner {\n        height: var(--va-switch-sm-inner-height);\n        width: var(--va-switch-sm-inner-width);\n        min-width: var(--va-switch-sm-inner-min-width);\n      }\n\n      &__checker {\n        height: 1.1rem;\n        width: 1.1rem;\n      }\n    }\n  }\n\n  &--large {\n    .va-switch {\n      &__inner {\n        height: var(--va-switch-lg-inner-height);\n        width: var(--va-switch-lg-inner-width);\n        min-width: var(--va-switch-lg-inner-min-width);\n      }\n\n      &__checker {\n        height: 1.8rem;\n        width: 1.8rem;\n      }\n    }\n  }\n\n  &--disabled {\n    @include va-disabled;\n  }\n\n  &--left-label {\n    .va-switch__container {\n      flex-direction: row-reverse;\n    }\n\n    .va-switch__label {\n      padding: 0 var(--va-switch-label-left-padding) 0 0;\n    }\n  }\n\n  &--indeterminate {\n    .va-switch {\n      &__checker {\n        margin: auto 0;\n        transform: translateX(-50%);\n      }\n\n      &__checker-wrapper {\n        transform: translateX(50%);\n      }\n    }\n  }\n\n  &--checked {\n    .va-switch {\n      &__checker {\n        margin: auto -0.3rem;\n        transform: translateX(-100%);\n      }\n\n      &__checker-wrapper {\n        transform: translateX(100%);\n      }\n    }\n  }\n\n  &--error {\n    .va-switch {\n      &__track {\n        border: 0.1rem solid;\n      }\n    }\n  }\n\n  &__label {\n    cursor: pointer;\n    text-align: left;\n    padding: 0 0 0 var(--va-switch-label-right-padding);\n  }\n\n  #{&}__track {\n    display: var(--va-switch-track-display);\n    overflow: var(--va-switch-track-overflow);\n    border-radius: var(--va-switch-track-border-radius);\n    height: var(--va-switch-track-height);\n    width: var(--va-switch-track-width);\n    background: var(--va-switch-track-background);\n    box-shadow: var(--va-switch-track-box-shadow);\n    transition: var(--va-switch-track-transition);\n\n    @at-root {\n      .va-switch--on-keyboard-focus#{&} {\n        transition: all, 0.6s, ease-in;\n        box-shadow: 0 0 0.5rem 0 rgba(0, 0, 0, 0.3);\n      }\n\n      .va-switch--small#{&} {\n        border-radius: 0.75rem;\n      }\n\n      .va-switch--large#{&} {\n        border-radius: 1.25rem;\n      }\n    }\n  }\n\n  #{&}__track-label {\n    color: $white;\n    margin: auto 0.5rem auto 2rem;\n    user-select: none;\n\n    @at-root {\n      .va-switch--checked#{&} {\n        margin: auto 2rem auto 0.5rem;\n      }\n\n      .va-switch--small#{&} {\n        margin: auto 0.5rem auto 1.55rem;\n\n        @at-root {\n          .va-switch--checked#{&} {\n            margin: auto 1.55rem auto 0.5rem;\n          }\n        }\n      }\n\n      .va-switch--large#{&} {\n        margin: auto 0.5rem auto 2.3rem;\n\n        @at-root {\n          .va-switch--checked#{&} {\n            margin: auto 2.3rem auto 0.5rem;\n          }\n        }\n      }\n    }\n  }\n\n  &__checker {\n    position: var(--va-switch-checker-position);\n    top: var(--va-switch-checker-top);\n    bottom: var(--va-switch-checker-bottom);\n    margin: var(--va-switch-checker-margin);\n    transform: var(--va-switch-checker-transform);\n    height: var(--va-switch-checker-height);\n    width: var(--va-switch-checker-width);\n    background-color: var(--va-switch-checker-background-color);\n    border-radius: var(--va-switch-checker-border-radius);\n    box-shadow: var(--va-switch-checker-box-shadow);\n    transition: var(--va-switch-checker-transition);\n    display: var(--va-switch-checker-display);\n    justify-content: var(--va-switch-checker-justify-content);\n    align-items: var(--va-switch-checker-align-items);\n  }\n\n  &__checker-wrapper {\n    position: var(--va-switch-checker-wrapper-position);\n    margin: var(--va-switch-checker-wrapper-margin);\n    transform: var(--va-switch-checker-wrapper-transform);\n    top: var(--va-switch-checker-wrapper-top);\n    left: var(--va-switch-checker-wrapper-left);\n    bottom: var(--va-switch-checker-wrapper-bottom);\n    right: var(--va-switch-checker-wrapper-right);\n    width: var(--va-switch-checker-wrapper-width);\n    height: var(--va-switch-checker-wrapper-height);\n    transition: var(--va-switch-checker-wrapper-transition);\n    pointer-events: var(--va-switch-checker-wrapper-pointer-events);\n  }\n\n  &__input {\n    position: absolute;\n    opacity: 0;\n    height: 0;\n    width: 0;\n  }\n}\n</style>\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\nimport VaSwitch from './VaSwitch.vue'\n\nexport default withConfigTransport(VaSwitch)\n"]},"metadata":{},"sourceType":"module"}