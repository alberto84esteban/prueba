{"ast":null,"code":"import { w as e } from \"./withConfigTransport.js\";\nimport { __decorate as o } from \"tslib\";\nimport { inject as a, resolveComponent as t, openBlock as s, createElementBlock as r, normalizeClass as l, createElementVNode as i, mergeProps as n, toHandlers as c, withKeys as d, renderSlot as h, normalizeProps as p, guardReactiveProps as v, normalizeStyle as u, createBlock as m, createCommentVNode as b, toDisplayString as g, createVNode as y } from \"vue\";\nimport { V as f, m as x, s as C, O as _, p as w } from \"./vue-class-component.esm-bundler.js\";\nimport j from \"./index28.js\";\nimport { C as k } from \"./ColorMixin.js\";\nimport { h as P } from \"./color-config.js\";\nimport { S } from \"./StatefulMixin.js\";\nimport { u as V } from \"./useKeyboardOnlyFocus.js\";\nimport { A } from \"./VaAccordion.vue_vue&type=script&lang.js\";\nimport { s as F } from \"./style-inject.es.js\";\nimport \"./VaConfig.js\";\nimport \"./VaIcon.js\";\nimport \"./flatten.js\";\nimport \"./useSize.js\";\nimport \"colortranslator\";\nimport \"./cStatefulMixin.js\";\nconst D = f.with(class Props {\n  constructor() {\n    this.modelValue = w({\n      type: Boolean,\n      default: !1\n    }), this.disabled = w({\n      type: Boolean,\n      default: !1\n    }), this.header = w({\n      type: String,\n      default: \"\"\n    }), this.icon = w({\n      type: String,\n      default: \"\"\n    }), this.solid = w({\n      type: Boolean,\n      default: !1\n    }), this.color = w({\n      type: String,\n      default: \"\"\n    }), this.textColor = w({\n      type: String,\n      default: \"\"\n    }), this.colorAll = w({\n      type: Boolean,\n      default: !1\n    });\n  }\n\n});\nlet I = class VaCollapse extends x(S, k, D) {\n  constructor() {\n    super(...arguments), this.height = 0, this.transitionDuration = this.getTransitionDuration(), this.mutationObserver = null, this.valueCollapse = {\n      value: void 0\n    }, this.accordion = C(() => a(A, {\n      isInsideAccordion: !1,\n      getProps: () => {},\n      getState: () => {},\n      onChildChange: e => {},\n      onChildMounted: e => {},\n      onChildUnmounted: e => {}\n    })), this.SetupContext = C(() => {\n      const {\n        hasKeyboardFocus: e,\n        keyboardFocusListeners: o\n      } = V();\n      return {\n        hasKeyboardFocus: e,\n        keyboardFocusListeners: o\n      };\n    });\n  }\n\n  get body() {\n    var e;\n    return null === (e = this.$refs) || void 0 === e ? void 0 : e.body;\n  }\n\n  get valueProxy() {\n    return this.accordion.isInsideAccordion ? this.valueCollapse.value : this.valueComputed;\n  }\n\n  set valueProxy(e) {\n    this.accordion.isInsideAccordion && (this.valueCollapse.value = e), this.valueComputed = e, this.setCollapseParams();\n  }\n\n  get computedClasses() {\n    const e = this.accordion.getProps();\n    return {\n      \"va-collapse--disabled\": this.disabled,\n      \"va-collapse--solid\": this.solid,\n      \"va-collapse--active\": this.solid && this.valueProxy,\n      \"va-collapse--popout\": (null == e ? void 0 : e.popout) && this.valueProxy,\n      \"va-collapse--inset\": (null == e ? void 0 : e.inset) && this.valueProxy\n    };\n  }\n\n  get contentStyle() {\n    return {\n      paddingLeft: this.icon && 0,\n      color: this.textColor ? this.theme.getColor(this.textColor) : \"\",\n      backgroundColor: this.color ? this.colorComputed : \"\",\n      boxShadow: this.SetupContext.hasKeyboardFocus ? \"0 0 0.5rem 0 rgba(0, 0, 0, 0.3)\" : \"\"\n    };\n  }\n\n  get stylesComputed() {\n    var e;\n    return this.valueProxy && (null === (e = this.$slots.default()) || void 0 === e ? void 0 : e[0]) ? {\n      visibility: \"visible\",\n      height: this.height + \"px\",\n      transitionDuration: this.transitionDuration + \"s\",\n      background: this.color && this.colorAll ? P(this.colorComputed) : \"\"\n    } : {\n      visibility: \"hidden\",\n      height: this.height + \"px\",\n      transitionDuration: this.transitionDuration + \"s\"\n    };\n  }\n\n  get collapseIndexComputed() {\n    return this.disabled ? -1 : 0;\n  }\n\n  changeValue() {\n    this.disabled || (this.valueProxy = !this.valueProxy, this.accordion.onChildChange(this));\n  }\n\n  getHeight() {\n    var e;\n    if (!this.valueProxy) return 0;\n    return Array.from(null === (e = this.body) || void 0 === e ? void 0 : e.childNodes).reduce((e, o) => e += 3 === o.nodeType ? this.getTextNodeHeight(o) : o.clientHeight, 0);\n  }\n\n  getTransitionDuration() {\n    const e = this.height / 1e3 * .2;\n    return e > .2 ? e : .2;\n  }\n\n  getTextNodeHeight(e) {\n    const o = document.createRange();\n    o.selectNodeContents(e);\n    const a = o.getBoundingClientRect();\n    return a.bottom - a.top;\n  }\n\n  setCollapseParams() {\n    this.height = this.getHeight(), this.transitionDuration = this.getTransitionDuration();\n  }\n\n  mounted() {\n    this.getHeight(), this.setCollapseParams(), this.mutationObserver = new MutationObserver(() => {\n      setTimeout(() => this.setCollapseParams(), 16);\n    }), this.mutationObserver.observe(this.body, {\n      attributes: !0,\n      childList: !0,\n      subtree: !0\n    }), this.accordion.isInsideAccordion && this.accordion.onChildMounted(this);\n  }\n\n  beforeUnmount() {\n    this.mutationObserver && this.mutationObserver.disconnect(), this.accordion.isInsideAccordion && this.accordion.onChildUnmounted(this);\n  }\n\n};\nI = o([_({\n  name: \"VaCollapse\",\n  components: {\n    VaIcon: j\n  },\n  emits: [\"focus\"]\n})], I);\nvar O = I;\nconst T = [\"tabindex\"],\n      K = {\n  class: \"va-collapse__header__text\"\n};\nF(\":root{--va-collapse-transition:all 0.3s linear;--va-collapse-popout-margin:0.5rem -0.5rem;--va-collapse-inset-margin:0.5rem 0.5rem;--va-collapse-body-transition:all 0.3s linear;--va-collapse-body-overflow:hidden;--va-collapse-body-margin-top:0.1rem;--va-collapse-header-content-display:flex;--va-collapse-header-content-justify-content:space-between;--va-collapse-header-content-cursor:pointer;--va-collapse-header-content-background-color:#f5f8f9;--va-collapse-header-content-box-shadow:var(--va-box-shadow);--va-collapse-header-content-border-radius:0.375rem;--va-collapse-header-content-align-items:center;--va-collapse-header-content-padding-top:0.75rem;--va-collapse-header-content-padding-bottom:0.75rem;--va-collapse-header-content-padding-left:1rem;--va-collapse-header-content-text-width:100%;--va-collapse-header-content-icon-min-width:1.5rem;--va-collapse-header-content-icon-margin-left:0.5rem;--va-collapse-header-content-icon-margin-right:0.5rem;--va-collapse-header-content-icon-color:#adb3b9;--va-collapse-solid-box-shadow:var(--va-box-shadow);--va-collapse-solid-border-radius:0.375rem;--va-collapse-solid-header-content-background-color:#f5f8f9;--va-collapse-solid-header-content-box-shadow:none;--va-collapse-solid-header-content-border-radius:0.375rem;--va-collapse-solid-header-content-transition:ease-in 0.3s;--va-collapse-solid-body-border-radius:0 0 0.375rem 0.375rem;--va-collapse-solid-body-margin-top:0}.va-collapse{font-family:var(--va-font-family);transition:var(--va-collapse-transition,var(--va-swing-transition))}.va-collapse__body{margin-top:var(--va-collapse-body-margin-top);overflow:var(--va-collapse-body-overflow);transition:var(--va-collapse-body-transition)}.va-collapse__header__content{align-items:var(--va-collapse-header-content-align-items);background-color:var(--va-collapse-header-content-background-color);border-radius:var(--va-collapse-header-content-border-radius,var(--va-block-border-radius));box-shadow:var(--va-collapse-header-content-box-shadow,var(--va-block-box-shadow));cursor:var(--va-collapse-header-content-cursor);display:var(--va-collapse-header-content-display);justify-content:var(--va-collapse-header-content-justify-content);padding-bottom:var(--va-collapse-header-content-padding-bottom);padding-left:var(--va-collapse-header-content-padding-left);padding-top:var(--va-collapse-header-content-padding-top)}.va-collapse__header__text{width:var(--va-collapse-header-content-text-width)}.va-collapse__header__icon{align-items:center;color:var(--va-collapse-header-content-icon-color);display:flex;justify-content:center;margin-left:var(--va-collapse-header-content-icon-margin-left);margin-right:var(--va-collapse-header-content-icon-margin-right);min-width:var(--va-collapse-header-content-icon-min-width)}.va-collapse--solid{border-radius:var(--va-collapse-solid-border-radius);box-shadow:var(--va-collapse-solid-box-shadow)}.va-collapse--solid .va-collapse__header__content{background-color:var(--va-collapse-solid-header-content-background-color);border-radius:var(--va-collapse-solid-header-content-border-radius,var(--va-block-border-radius));box-shadow:var(--va-collapse-solid-header-content-box-shadow,var(--va-block-box-shadow));transition:var(--va-collapse-solid-header-content-transition)}.va-collapse--solid .va-collapse__body{border-radius:var(--va-collapse-solid-body-border-radius);margin-top:var(--va-collapse-solid-body-margin-top)}.va-collapse--popout{margin:var(--va-collapse-popout-margin)}.va-collapse--inset{margin:var(--va-collapse-inset-margin)}.va-collapse--disabled{cursor:default;opacity:.4;pointer-events:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}\"), O.render = function render(e, o, a, f, x, C) {\n  const _ = t(\"va-icon\");\n\n  return s(), r(\"div\", {\n    class: l([\"va-collapse\", e.computedClasses])\n  }, [i(\"div\", n({\n    class: \"va-collapse__header\"\n  }, c(e.SetupContext.keyboardFocusListeners), {\n    onClick: o[0] || (o[0] = o => e.changeValue()),\n    onFocus: o[1] || (o[1] = o => e.$emit(\"focus\")),\n    onKeydown: [o[2] || (o[2] = d(o => e.changeValue(), [\"enter\"])), o[3] || (o[3] = d(o => e.changeValue(), [\"space\"]))],\n    tabindex: e.collapseIndexComputed\n  }), [h(e.$slots, \"header\", p(v({\n    value: e.valueProxy,\n    hasKeyboardFocus: e.SetupContext.hasKeyboardFocus\n  })), () => [i(\"div\", {\n    class: \"va-collapse__header__content\",\n    style: u(e.contentStyle)\n  }, [e.icon ? (s(), m(_, {\n    key: 0,\n    class: \"va-collapse__header__icon\",\n    name: e.icon,\n    color: e.textColor\n  }, null, 8, [\"name\", \"color\"])) : b(\"v-if\", !0), i(\"div\", K, g(e.header), 1), y(_, {\n    class: \"va-collapse__header__icon\",\n    name: e.valueProxy ? \"expand_less\" : \"expand_more\",\n    color: e.textColor\n  }, null, 8, [\"name\", \"color\"])], 4)])], 16, T), i(\"div\", {\n    class: \"va-collapse__body\",\n    ref: \"body\",\n    style: u(e.stylesComputed)\n  }, [h(e.$slots, \"default\")], 4)], 2);\n}, O.__file = \"src/components/va-collapse/VaCollapse.vue\";\nvar H = e(O);\nexport { H as default };","map":{"version":3,"mappings":"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","names":["PropsMixin","Vue","with","Props","constructor","this","prop","type","Boolean","default","String","VaCollapse","mixins","StatefulMixin","ColorMixin","getTransitionDuration","value","undefined","setup","inject","AccordionServiceKey","isInsideAccordion","getProps","getState","onChildChange","ctx","onChildMounted","onChildUnmounted","hasKeyboardFocus","keyboardFocusListeners","useKeyboardOnlyFocus","body","$refs","valueProxy","accordion","valueCollapse","valueComputed","setCollapseParams","computedClasses","accordionProps","disabled","solid","popout","inset","contentStyle","paddingLeft","icon","color","textColor","theme","getColor","backgroundColor","colorComputed","boxShadow","SetupContext","stylesComputed","$slots","visibility","height","transitionDuration","background","colorAll","getHoverColor","collapseIndexComputed","changeValue","getHeight","Array","from","childNodes","reduce","result","node","nodeType","getTextNodeHeight","clientHeight","duration","textNode","range","document","createRange","selectNodeContents","rect","getBoundingClientRect","bottom","top","mounted","mutationObserver","MutationObserver","setTimeout","observe","attributes","childList","subtree","beforeUnmount","disconnect","Options","name","components","VaIcon","emits","class","F","_createElementBlock","_ctx","_createElementVNode","_mergeProps","_toHandlers","onClick","onFocus","onKeydown","tabindex","_renderSlot","style","s","_createBlock","_hoisted_2","_createVNode","ref","withConfigTransport"],"sources":["../../src/components/va-collapse/VaCollapse.vue","../../src/components/va-collapse/VaCollapse.vue?vue&type=template&id=10b321b0&lang.js","../../src/components/va-collapse/index.ts"],"sourcesContent":["<template>\n  <div class=\"va-collapse\" :class=\"computedClasses\">\n    <div\n      class=\"va-collapse__header\"\n      v-on=\"SetupContext.keyboardFocusListeners\"\n      @click=\"changeValue()\"\n      @focus=\"$emit('focus')\"\n      @keydown.enter=\"changeValue()\"\n      @keydown.space=\"changeValue()\"\n      :tabindex=\"collapseIndexComputed\"\n    >\n      <slot name=\"header\" v-bind=\"{ value: valueProxy, hasKeyboardFocus: SetupContext.hasKeyboardFocus }\">\n        <div\n          class=\"va-collapse__header__content\"\n          :style=\"contentStyle\"\n        >\n          <va-icon\n            v-if=\"icon\"\n            class=\"va-collapse__header__icon\"\n            :name=\"icon\"\n            :color=\"textColor\"\n          />\n          <div class=\"va-collapse__header__text\">\n            {{ header }}\n          </div>\n          <va-icon\n            class=\"va-collapse__header__icon\"\n            :name=\"valueProxy ? 'expand_less' : 'expand_more'\"\n            :color=\"textColor\"\n          />\n        </div>\n      </slot>\n    </div>\n    <div class=\"va-collapse__body\" ref=\"body\" :style=\"stylesComputed\">\n      <slot />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { inject } from 'vue'\nimport { mixins, Options, prop, setup, Vue } from 'vue-class-component'\nimport VaIcon from '../va-icon'\nimport ColorMixin from '../../services/color-config/ColorMixin'\nimport { getHoverColor } from '../../services/color-config/color-functions'\nimport { StatefulMixin } from '../../mixins/StatefulMixin/StatefulMixin'\nimport useKeyboardOnlyFocus from '../../composables/useKeyboardOnlyFocus'\nimport { Accordion, AccordionServiceKey } from '../va-accordion/VaAccordion.vue'\n\nclass Props {\n  modelValue = prop<boolean>({ type: Boolean, default: false })\n  disabled = prop<boolean>({ type: Boolean, default: false })\n  header = prop<string>({ type: String, default: '' })\n  icon = prop<string>({ type: String, default: '' })\n  solid = prop<boolean>({ type: Boolean, default: false })\n  color = prop<string>({ type: String, default: '' })\n  textColor = prop<string>({ type: String, default: '' })\n  colorAll = prop<boolean>({ type: Boolean, default: false })\n}\n\nconst PropsMixin = Vue.with(Props)\n\nconst TEXT_NODE_TYPE = 3\n\n@Options({\n  name: 'VaCollapse',\n  components: { VaIcon },\n  emits: ['focus'],\n})\nexport default class VaCollapse extends mixins(\n  StatefulMixin,\n  ColorMixin,\n  PropsMixin,\n) {\n  height = 0\n  transitionDuration = this.getTransitionDuration()\n  mutationObserver: any = null\n  valueCollapse = {\n    value: undefined,\n  }\n\n  accordion: Accordion = setup(() => {\n    return inject(\n      AccordionServiceKey,\n      {\n        isInsideAccordion: false,\n        getProps: () => undefined,\n        getState: () => undefined,\n        onChildChange: (ctx: any) => undefined,\n        onChildMounted: (ctx: any) => undefined,\n        onChildUnmounted: (ctx: any) => undefined,\n      })\n  })\n\n  SetupContext = setup(() => {\n    const { hasKeyboardFocus, keyboardFocusListeners } = useKeyboardOnlyFocus()\n\n    return {\n      hasKeyboardFocus,\n      keyboardFocusListeners,\n    }\n  })\n\n  get body (): HTMLElement {\n    return this.$refs?.body as HTMLElement\n  }\n\n  get valueProxy () {\n    if (this.accordion.isInsideAccordion) {\n      return this.valueCollapse.value\n    }\n\n    return this.valueComputed\n  }\n\n  set valueProxy (value) {\n    if (this.accordion.isInsideAccordion) {\n      this.valueCollapse.value = value\n    }\n\n    this.valueComputed = value\n    this.setCollapseParams()\n  }\n\n  get computedClasses () {\n    const accordionProps = this.accordion.getProps()\n\n    return {\n      'va-collapse--disabled': this.disabled,\n      'va-collapse--solid': this.solid,\n      'va-collapse--active': this.solid && this.valueProxy,\n      'va-collapse--popout': accordionProps?.popout && this.valueProxy,\n      'va-collapse--inset': accordionProps?.inset && this.valueProxy,\n    }\n  }\n\n  get contentStyle () {\n    return {\n      paddingLeft: this.icon && 0,\n      color: this.textColor ? this.theme.getColor(this.textColor) : '',\n      backgroundColor: this.color ? this.colorComputed : '',\n      boxShadow: this.SetupContext.hasKeyboardFocus ? '0 0 0.5rem 0 rgba(0, 0, 0, 0.3)' : '',\n    }\n  }\n\n  get stylesComputed () {\n    if (this.valueProxy && (this as any).$slots.default()?.[0]) {\n      return {\n        visibility: 'visible', // allows for better a11y and works well with height-transitions (compared to v-show (display: none in general)\n        height: this.height + 'px',\n        transitionDuration: this.transitionDuration + 's',\n        background:\n          this.color && this.colorAll\n            ? getHoverColor(this.colorComputed)\n            : '',\n      }\n    }\n    return {\n      visibility: 'hidden',\n      height: this.height + 'px',\n      transitionDuration: this.transitionDuration + 's',\n    }\n  }\n\n  get collapseIndexComputed () {\n    return this.disabled ? -1 : 0\n  }\n\n  changeValue () {\n    if (!this.disabled) {\n      this.valueProxy = !this.valueProxy\n      this.accordion.onChildChange(this)\n    }\n  }\n\n  getHeight () {\n    if (!this.valueProxy) {\n      return 0\n    }\n\n    const nodes = Array.from(this.body?.childNodes) as HTMLElement[]\n    return nodes.reduce((result: number, node: HTMLElement) => {\n      result += node.nodeType === TEXT_NODE_TYPE ? this.getTextNodeHeight(node) : node.clientHeight\n      return result\n    }, 0)\n  }\n\n  getTransitionDuration () {\n    const duration = this.height / 1000 * 0.2\n    return duration > 0.2 ? duration : 0.2\n  }\n\n  getTextNodeHeight (textNode: Node) {\n    const range = document.createRange()\n    range.selectNodeContents(textNode)\n    const rect = range.getBoundingClientRect()\n\n    return rect.bottom - rect.top\n  }\n\n  setCollapseParams () {\n    this.height = this.getHeight()\n    this.transitionDuration = this.getTransitionDuration()\n  }\n\n  mounted () {\n    this.getHeight()\n\n    this.setCollapseParams()\n\n    this.mutationObserver = new MutationObserver(() => {\n      setTimeout(() => this.setCollapseParams(), 16)\n    })\n\n    this.mutationObserver.observe(this.body, {\n      attributes: true,\n      childList: true,\n      subtree: true,\n    })\n\n    if (this.accordion.isInsideAccordion) {\n      this.accordion.onChildMounted(this)\n    }\n  }\n\n  beforeUnmount () {\n    if (this.mutationObserver) {\n      this.mutationObserver.disconnect()\n    }\n    if (this.accordion.isInsideAccordion) {\n      this.accordion.onChildUnmounted(this)\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-collapse {\n  transition: var(--va-collapse-transition, var(--va-swing-transition));\n  font-family: var(--va-font-family);\n\n  &__body {\n    transition: var(--va-collapse-body-transition);\n    overflow: var(--va-collapse-body-overflow);\n    margin-top: var(--va-collapse-body-margin-top);\n  }\n\n  &__header {\n    &__content {\n      display: var(--va-collapse-header-content-display);\n      justify-content: var(--va-collapse-header-content-justify-content);\n      cursor: var(--va-collapse-header-content-cursor);\n      background-color: var(--va-collapse-header-content-background-color);\n      box-shadow: var(--va-collapse-header-content-box-shadow, var(--va-block-box-shadow));\n      border-radius: var(--va-collapse-header-content-border-radius, var(--va-block-border-radius));\n      align-items: var(--va-collapse-header-content-align-items);\n      padding-top: var(--va-collapse-header-content-padding-top);\n      padding-bottom: var(--va-collapse-header-content-padding-bottom);\n      padding-left: var(--va-collapse-header-content-padding-left);\n    }\n\n    &__text {\n      width: var(--va-collapse-header-content-text-width);\n    }\n\n    &__icon {\n      @include flex-center();\n\n      min-width: var(--va-collapse-header-content-icon-min-width);\n      margin-left: var(--va-collapse-header-content-icon-margin-left);\n      margin-right: var(--va-collapse-header-content-icon-margin-right);\n      color: var(--va-collapse-header-content-icon-color);\n    }\n  }\n\n  &--solid {\n    box-shadow: var(--va-collapse-solid-box-shadow);\n    border-radius: var(--va-collapse-solid-border-radius);\n\n    .va-collapse {\n      &__header {\n        &__content {\n          border-radius: var(--va-collapse-solid-header-content-border-radius, var(--va-block-border-radius));\n          transition: var(--va-collapse-solid-header-content-transition);\n          box-shadow: var(--va-collapse-solid-header-content-box-shadow, var(--va-block-box-shadow));\n          background-color: var(--va-collapse-solid-header-content-background-color);\n        }\n      }\n\n      &__body {\n        border-radius: var(--va-collapse-solid-body-border-radius);\n        margin-top: var(--va-collapse-solid-body-margin-top);\n      }\n    }\n  }\n\n  &--popout {\n    margin: var(--va-collapse-popout-margin);\n  }\n\n  &--inset {\n    margin: var(--va-collapse-inset-margin);\n  }\n\n  &--disabled {\n    @include va-disabled();\n\n    pointer-events: none;\n  }\n}\n</style>\n","<template>\n  <div class=\"va-collapse\" :class=\"computedClasses\">\n    <div\n      class=\"va-collapse__header\"\n      v-on=\"SetupContext.keyboardFocusListeners\"\n      @click=\"changeValue()\"\n      @focus=\"$emit('focus')\"\n      @keydown.enter=\"changeValue()\"\n      @keydown.space=\"changeValue()\"\n      :tabindex=\"collapseIndexComputed\"\n    >\n      <slot name=\"header\" v-bind=\"{ value: valueProxy, hasKeyboardFocus: SetupContext.hasKeyboardFocus }\">\n        <div\n          class=\"va-collapse__header__content\"\n          :style=\"contentStyle\"\n        >\n          <va-icon\n            v-if=\"icon\"\n            class=\"va-collapse__header__icon\"\n            :name=\"icon\"\n            :color=\"textColor\"\n          />\n          <div class=\"va-collapse__header__text\">\n            {{ header }}\n          </div>\n          <va-icon\n            class=\"va-collapse__header__icon\"\n            :name=\"valueProxy ? 'expand_less' : 'expand_more'\"\n            :color=\"textColor\"\n          />\n        </div>\n      </slot>\n    </div>\n    <div class=\"va-collapse__body\" ref=\"body\" :style=\"stylesComputed\">\n      <slot />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { inject } from 'vue'\nimport { mixins, Options, prop, setup, Vue } from 'vue-class-component'\nimport VaIcon from '../va-icon'\nimport ColorMixin from '../../services/color-config/ColorMixin'\nimport { getHoverColor } from '../../services/color-config/color-functions'\nimport { StatefulMixin } from '../../mixins/StatefulMixin/StatefulMixin'\nimport useKeyboardOnlyFocus from '../../composables/useKeyboardOnlyFocus'\nimport { Accordion, AccordionServiceKey } from '../va-accordion/VaAccordion.vue'\n\nclass Props {\n  modelValue = prop<boolean>({ type: Boolean, default: false })\n  disabled = prop<boolean>({ type: Boolean, default: false })\n  header = prop<string>({ type: String, default: '' })\n  icon = prop<string>({ type: String, default: '' })\n  solid = prop<boolean>({ type: Boolean, default: false })\n  color = prop<string>({ type: String, default: '' })\n  textColor = prop<string>({ type: String, default: '' })\n  colorAll = prop<boolean>({ type: Boolean, default: false })\n}\n\nconst PropsMixin = Vue.with(Props)\n\nconst TEXT_NODE_TYPE = 3\n\n@Options({\n  name: 'VaCollapse',\n  components: { VaIcon },\n  emits: ['focus'],\n})\nexport default class VaCollapse extends mixins(\n  StatefulMixin,\n  ColorMixin,\n  PropsMixin,\n) {\n  height = 0\n  transitionDuration = this.getTransitionDuration()\n  mutationObserver: any = null\n  valueCollapse = {\n    value: undefined,\n  }\n\n  accordion: Accordion = setup(() => {\n    return inject(\n      AccordionServiceKey,\n      {\n        isInsideAccordion: false,\n        getProps: () => undefined,\n        getState: () => undefined,\n        onChildChange: (ctx: any) => undefined,\n        onChildMounted: (ctx: any) => undefined,\n        onChildUnmounted: (ctx: any) => undefined,\n      })\n  })\n\n  SetupContext = setup(() => {\n    const { hasKeyboardFocus, keyboardFocusListeners } = useKeyboardOnlyFocus()\n\n    return {\n      hasKeyboardFocus,\n      keyboardFocusListeners,\n    }\n  })\n\n  get body (): HTMLElement {\n    return this.$refs?.body as HTMLElement\n  }\n\n  get valueProxy () {\n    if (this.accordion.isInsideAccordion) {\n      return this.valueCollapse.value\n    }\n\n    return this.valueComputed\n  }\n\n  set valueProxy (value) {\n    if (this.accordion.isInsideAccordion) {\n      this.valueCollapse.value = value\n    }\n\n    this.valueComputed = value\n    this.setCollapseParams()\n  }\n\n  get computedClasses () {\n    const accordionProps = this.accordion.getProps()\n\n    return {\n      'va-collapse--disabled': this.disabled,\n      'va-collapse--solid': this.solid,\n      'va-collapse--active': this.solid && this.valueProxy,\n      'va-collapse--popout': accordionProps?.popout && this.valueProxy,\n      'va-collapse--inset': accordionProps?.inset && this.valueProxy,\n    }\n  }\n\n  get contentStyle () {\n    return {\n      paddingLeft: this.icon && 0,\n      color: this.textColor ? this.theme.getColor(this.textColor) : '',\n      backgroundColor: this.color ? this.colorComputed : '',\n      boxShadow: this.SetupContext.hasKeyboardFocus ? '0 0 0.5rem 0 rgba(0, 0, 0, 0.3)' : '',\n    }\n  }\n\n  get stylesComputed () {\n    if (this.valueProxy && (this as any).$slots.default()?.[0]) {\n      return {\n        visibility: 'visible', // allows for better a11y and works well with height-transitions (compared to v-show (display: none in general)\n        height: this.height + 'px',\n        transitionDuration: this.transitionDuration + 's',\n        background:\n          this.color && this.colorAll\n            ? getHoverColor(this.colorComputed)\n            : '',\n      }\n    }\n    return {\n      visibility: 'hidden',\n      height: this.height + 'px',\n      transitionDuration: this.transitionDuration + 's',\n    }\n  }\n\n  get collapseIndexComputed () {\n    return this.disabled ? -1 : 0\n  }\n\n  changeValue () {\n    if (!this.disabled) {\n      this.valueProxy = !this.valueProxy\n      this.accordion.onChildChange(this)\n    }\n  }\n\n  getHeight () {\n    if (!this.valueProxy) {\n      return 0\n    }\n\n    const nodes = Array.from(this.body?.childNodes) as HTMLElement[]\n    return nodes.reduce((result: number, node: HTMLElement) => {\n      result += node.nodeType === TEXT_NODE_TYPE ? this.getTextNodeHeight(node) : node.clientHeight\n      return result\n    }, 0)\n  }\n\n  getTransitionDuration () {\n    const duration = this.height / 1000 * 0.2\n    return duration > 0.2 ? duration : 0.2\n  }\n\n  getTextNodeHeight (textNode: Node) {\n    const range = document.createRange()\n    range.selectNodeContents(textNode)\n    const rect = range.getBoundingClientRect()\n\n    return rect.bottom - rect.top\n  }\n\n  setCollapseParams () {\n    this.height = this.getHeight()\n    this.transitionDuration = this.getTransitionDuration()\n  }\n\n  mounted () {\n    this.getHeight()\n\n    this.setCollapseParams()\n\n    this.mutationObserver = new MutationObserver(() => {\n      setTimeout(() => this.setCollapseParams(), 16)\n    })\n\n    this.mutationObserver.observe(this.body, {\n      attributes: true,\n      childList: true,\n      subtree: true,\n    })\n\n    if (this.accordion.isInsideAccordion) {\n      this.accordion.onChildMounted(this)\n    }\n  }\n\n  beforeUnmount () {\n    if (this.mutationObserver) {\n      this.mutationObserver.disconnect()\n    }\n    if (this.accordion.isInsideAccordion) {\n      this.accordion.onChildUnmounted(this)\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-collapse {\n  transition: var(--va-collapse-transition, var(--va-swing-transition));\n  font-family: var(--va-font-family);\n\n  &__body {\n    transition: var(--va-collapse-body-transition);\n    overflow: var(--va-collapse-body-overflow);\n    margin-top: var(--va-collapse-body-margin-top);\n  }\n\n  &__header {\n    &__content {\n      display: var(--va-collapse-header-content-display);\n      justify-content: var(--va-collapse-header-content-justify-content);\n      cursor: var(--va-collapse-header-content-cursor);\n      background-color: var(--va-collapse-header-content-background-color);\n      box-shadow: var(--va-collapse-header-content-box-shadow, var(--va-block-box-shadow));\n      border-radius: var(--va-collapse-header-content-border-radius, var(--va-block-border-radius));\n      align-items: var(--va-collapse-header-content-align-items);\n      padding-top: var(--va-collapse-header-content-padding-top);\n      padding-bottom: var(--va-collapse-header-content-padding-bottom);\n      padding-left: var(--va-collapse-header-content-padding-left);\n    }\n\n    &__text {\n      width: var(--va-collapse-header-content-text-width);\n    }\n\n    &__icon {\n      @include flex-center();\n\n      min-width: var(--va-collapse-header-content-icon-min-width);\n      margin-left: var(--va-collapse-header-content-icon-margin-left);\n      margin-right: var(--va-collapse-header-content-icon-margin-right);\n      color: var(--va-collapse-header-content-icon-color);\n    }\n  }\n\n  &--solid {\n    box-shadow: var(--va-collapse-solid-box-shadow);\n    border-radius: var(--va-collapse-solid-border-radius);\n\n    .va-collapse {\n      &__header {\n        &__content {\n          border-radius: var(--va-collapse-solid-header-content-border-radius, var(--va-block-border-radius));\n          transition: var(--va-collapse-solid-header-content-transition);\n          box-shadow: var(--va-collapse-solid-header-content-box-shadow, var(--va-block-box-shadow));\n          background-color: var(--va-collapse-solid-header-content-background-color);\n        }\n      }\n\n      &__body {\n        border-radius: var(--va-collapse-solid-body-border-radius);\n        margin-top: var(--va-collapse-solid-body-margin-top);\n      }\n    }\n  }\n\n  &--popout {\n    margin: var(--va-collapse-popout-margin);\n  }\n\n  &--inset {\n    margin: var(--va-collapse-inset-margin);\n  }\n\n  &--disabled {\n    @include va-disabled();\n\n    pointer-events: none;\n  }\n}\n</style>\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\nimport VaCollapse from './VaCollapse.vue'\n\nexport default withConfigTransport(VaCollapse)\n"]},"metadata":{},"sourceType":"module"}