{"ast":null,"code":"import { __decorate as o } from \"tslib\";\nimport { V as t, s as r, O as s, p as e } from \"./vue-class-component.esm-bundler.js\";\nimport { g as i } from \"./color-config.js\";\n\nclass Props {\n  constructor() {\n    this.color = e({\n      type: String,\n      default: \"\"\n    });\n  }\n\n}\n\nlet l = class ColorMixin extends t.with(Props) {\n  constructor() {\n    super(...arguments), this.theme = r(() => ({\n      getColor: i\n    }));\n  }\n\n  created() {\n    this.hasColorThemeMixin = !0;\n  }\n\n  get colorComputed() {\n    return this.theme.getColor(this.color);\n  }\n\n  computeColor(o, t) {\n    return this.theme.getColor(o, t);\n  }\n\n};\nl = o([s({})], l);\nvar c = l;\nexport { c as C };","map":{"version":3,"mappings":";;;;AAIA,MAAMA,KAAN,CAAMA;AAANC;AACEC,iBAAQC,EAAa;AACnBC,YAAMC,MADa;AAEnBC,eAAS;AAFU,KAAbH,CAARD;AAEW;;AAHPF;;AAQN,IAAMO,IAAN,MAAMA,UAAN,SAAyBC,EAAIC,IAAJD,CAASR,KAATQ,CAAzB,CAAkCR;AAAlCC;AAAAA,yBAOEC,aAAQQ,EAAM,OACL;AACLC;AADK,KADK,CAAND,CAPVT;AAGEW;;AAAAA;AACEV,SAAKW,kBAALX,GAAKW,CAAqB,CAA1BX;AASFY;;AAAAA;AACE,WAAOZ,KAAKa,KAALb,CAAWS,QAAXT,CAAoBA,KAAKc,KAAzBd,CAAP;AAGFe;;AAAAA,eAAcd,CAAdc,EAA4BC,CAA5BD,EAA4BC;AAC1B,WAAOhB,KAAKa,KAALb,CAAWS,QAAXT,CAAoBC,CAApBD,EAA0BgB,CAA1BhB,CAAP;AAAiCgB;;AAlBHlB,CAAlC;AAAMO,OADLY,EAAQ,EAARA,CACKZ;AAsBN,QAAeA,CAAf;AAAeA","names":["Props","constructor","this","prop","type","String","default","ColorMixin","Vue","with","setup","getColor","created","hasColorThemeMixin","colorComputed","theme","color","computeColor","defaultColor","Options"],"sources":["../../src/services/color-config/ColorMixin.ts"],"sourcesContent":["import { prop, Vue, Options, setup } from 'vue-class-component'\n\nimport { getColor } from './color-config'\n\nclass Props {\n  color = prop<string>({\n    type: String,\n    default: '',\n  })\n}\n\n@Options({})\nclass ColorMixin extends Vue.with(Props) {\n  hasColorThemeMixin!: boolean\n\n  created () {\n    this.hasColorThemeMixin = true\n  }\n\n  theme = setup(() => {\n    return {\n      getColor,\n    }\n  })\n\n  get colorComputed () {\n    return this.theme.getColor(this.color)\n  }\n\n  computeColor (prop: string, defaultColor?: string) {\n    return this.theme.getColor(prop, defaultColor)\n  }\n}\n\nexport default ColorMixin\n"]},"metadata":{},"sourceType":"module"}