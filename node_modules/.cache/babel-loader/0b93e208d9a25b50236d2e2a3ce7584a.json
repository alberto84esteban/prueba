{"ast":null,"code":"import { w as e } from \"./withConfigTransport.js\";\nimport { __decorate as a } from \"tslib\";\nimport { V as i, O as t, p as r } from \"./vue-class-component.esm-bundler.js\";\nimport { d as o, u as s } from \"./color-config.js\";\nimport { openBlock as n, createElementBlock as d, normalizeClass as v, normalizeStyle as l, createElementVNode as m, renderSlot as b, defineComponent as u, computed as c, ref as p, resolveComponent as h, createBlock as g, withCtx as f, mergeProps as y, toHandlers as _ } from \"vue\";\nimport { s as x } from \"./style-inject.es.js\";\nimport { u as w } from \"./useKeyboardOnlyFocus.js\";\nimport \"./VaConfig.js\";\nimport \"colortranslator\";\nconst C = i.with(class SidebarProps {\n  constructor() {\n    this.color = r({\n      type: String,\n      default: \"background\"\n    }), this.textColor = r({\n      type: String,\n      default: void 0\n    }), this.gradient = r({\n      type: Boolean,\n      default: !1\n    }), this.minimized = r({\n      type: Boolean,\n      default: !1\n    }), this.hoverable = r({\n      type: Boolean,\n      default: !1\n    }), this.position = r({\n      type: String,\n      default: \"left\"\n    }), this.width = r({\n      type: String,\n      default: \"16rem\"\n    }), this.minimizedWidth = r({\n      type: String,\n      default: \"2.5rem\"\n    }), this.modelValue = r({\n      type: Boolean,\n      default: !0\n    });\n  }\n\n});\nlet S = class VaSidebar extends C {\n  constructor() {\n    super(...arguments), this.isHovered = !1;\n  }\n\n  get isMinimized() {\n    return this.$props.minimized || this.$props.hoverable && !this.isHovered;\n  }\n\n  get computedStyle() {\n    const {\n      getColor: e,\n      getTextColor: a\n    } = s(),\n          i = e(this.color),\n          t = this.gradient ? o(i) : i;\n    return {\n      color: this.$props.textColor ? e(this.textColor) : a(i),\n      background: t,\n      width: this.computedWidth\n    };\n  }\n\n  get computedWidth() {\n    return this.$props.modelValue ? this.isMinimized ? this.$props.minimizedWidth : this.$props.width : 0;\n  }\n\n  get computedClass() {\n    return {\n      \"va-sidebar\": !0,\n      \"va-sidebar--minimized\": this.isMinimized,\n      \"va-sidebar--hidden\": !this.modelValue,\n      \"va-sidebar--right\": \"right\" === this.$props.position\n    };\n  }\n\n  updateHoverState(e) {\n    this.isHovered = !!this.$props.hoverable && e;\n  }\n\n};\nS = a([t({\n  name: \"VaSidebar\"\n})], S);\nvar z = S;\nconst M = {\n  class: \"va-sidebar__menu\"\n};\nx(\":root{--va-sidebar-min-height:100%;--va-sidebar-height:100%;--va-sidebar-position:relative;--va-sidebar-top:0;--va-sidebar-left:0;--va-sidebar-transition:all 0.3s ease;--va-sidebar-z-index:1;--va-sidebar-menu-max-height:100%;--va-sidebar-menu-margin-bottom:0;--va-sidebar-menu-list-style:none;--va-sidebar-menu-padding-left:0;--va-sidebar-menu-overflow-y:auto;--va-sidebar-menu-overflow-x:hidden;--va-sidebar-item-active-border-size:4px;--va-sidebar-item-content-padding:1rem;--va-sidebar-item-content-gap:0.5rem;--va-sidebar-item-title-white-space:nowrap}.va-sidebar{font-family:var(--va-font-family);height:var(--va-sidebar-height);left:var(--va-sidebar-left);min-height:var(--va-sidebar-min-height);position:var(--va-sidebar-position);top:var(--va-sidebar-top);transition:var(--va-sidebar-transition);z-index:var(--va-sidebar-z-index)}.va-sidebar__menu{list-style:var(--va-sidebar-menu-list-style);margin-bottom:var(--va-sidebar-menu-margin-bottom);max-height:var(--va-sidebar-menu-max-height);overflow-x:var(--va-sidebar-menu-overflow-x);overflow-y:var(--va-sidebar-menu-overflow-y);padding-left:var(--va-sidebar-menu-padding-left)}.va-sidebar--minimized{left:0}.va-sidebar--minimized .va-sidebar-link-group .va-sidebar-link__content{padding-right:0}.va-sidebar--minimized+.content-wrap{margin-left:3.5rem!important}.va-sidebar--right{left:auto;right:0}\"), z.render = function render$3(e, a, i, t, r, o) {\n  return n(), d(\"aside\", {\n    class: v(e.computedClass),\n    style: l(e.computedStyle),\n    onMouseenter: a[0] || (a[0] = a => e.updateHoverState(!0)),\n    onMouseleave: a[1] || (a[1] = a => e.updateHoverState(!1))\n  }, [m(\"div\", M, [b(e.$slots, \"default\")])], 38);\n}, z.__file = \"src/components/va-sidebar/VaSidebar.vue\";\nvar $ = u({\n  name: \"VaSidebarItem\",\n  props: {\n    to: {\n      type: [String, Object],\n      default: () => ({})\n    },\n    active: {\n      type: Boolean,\n      default: !1\n    },\n    textColor: {\n      type: String,\n      default: void 0\n    },\n    activeColor: {\n      type: String,\n      default: \"primary\"\n    },\n    hoverColor: {\n      type: String,\n      default: void 0\n    },\n    borderColor: {\n      type: String,\n      default: void 0\n    }\n  },\n\n  setup(e) {\n    const {\n      isHovered: a,\n      onMouseEnter: i,\n      onMouseLeave: t\n    } = (() => {\n      const e = p(!1);\n      return {\n        isHovered: e,\n        onMouseEnter: () => {\n          e.value = !0;\n        },\n        onMouseLeave: () => {\n          e.value = !1;\n        }\n      };\n    })(),\n          {\n      getColor: r,\n      getHoverColor: o,\n      getTextColor: n,\n      getFocusColor: d\n    } = s(),\n          {\n      hasKeyboardFocus: v,\n      keyboardFocusListeners: l\n    } = w(),\n          m = c(() => {\n      const i = {};\n\n      if (i.color = r(e.textColor, \"inherit\"), a.value && (i[\"background-color\"] = o(r(e.hoverColor || e.activeColor))), e.active) {\n        const a = void 0 === e.borderColor ? e.activeColor : e.borderColor;\n        i[\"border-color\"] = r(a), i[\"background-color\"] = r(e.activeColor), i.color = n(i[\"background-color\"], r(\"dark\"), \"#ffffff\");\n      }\n\n      return v.value && (i[\"background-color\"] = d(r(e.hoverColor || e.activeColor))), i.color = `${i.color} !important`, i;\n    });\n\n    return {\n      isHovered: a,\n      onMouseEnter: i,\n      onMouseLeave: t,\n      computedStyle: m,\n      keyboardFocusListeners: l\n    };\n  }\n\n});\nconst k = [\"href\", \"onClick\"];\nx(\":root{--va-sidebar-min-height:100%;--va-sidebar-height:100%;--va-sidebar-position:relative;--va-sidebar-top:0;--va-sidebar-left:0;--va-sidebar-transition:all 0.3s ease;--va-sidebar-z-index:1;--va-sidebar-menu-max-height:100%;--va-sidebar-menu-margin-bottom:0;--va-sidebar-menu-list-style:none;--va-sidebar-menu-padding-left:0;--va-sidebar-menu-overflow-y:auto;--va-sidebar-menu-overflow-x:hidden;--va-sidebar-item-active-border-size:4px;--va-sidebar-item-content-padding:1rem;--va-sidebar-item-content-gap:0.5rem;--va-sidebar-item-title-white-space:nowrap}.va-sidebar__item{border-left:var(--va-sidebar-item-active-border-size) solid transparent;color:inherit!important;display:inline-block;font-family:var(--va-font-family);padding-right:var(--va-sidebar-item-active-border-size);width:100%}\"), $.render = function render$2(e, a, i, t, r, o) {\n  const s = h(\"router-link\");\n  return n(), g(s, {\n    custom: \"\",\n    to: e.to\n  }, {\n    default: f(({\n      href: i,\n      navigate: t\n    }) => [m(\"a\", y(e.$attrs, {\n      class: [\"va-sidebar__item va-sidebar-item\", {\n        \"va-sidebar-item--active\": e.active\n      }],\n      style: e.computedStyle,\n      href: i,\n      onClick: t,\n      onMouseenter: a[0] || (a[0] = (...a) => e.onMouseEnter && e.onMouseEnter(...a)),\n      onMouseleave: a[1] || (a[1] = (...a) => e.onMouseLeave && e.onMouseLeave(...a))\n    }, _(e.keyboardFocusListeners)), [b(e.$slots, \"default\")], 16, k)]),\n    _: 3\n  }, 8, [\"to\"]);\n}, $.__file = \"src/components/va-sidebar/VaSidebarItem/VaSidebarItem.vue\";\nconst V = {\n  class: \"va-sidebar__item__content va-sidebar-item-content\"\n};\nx(\":root{--va-sidebar-min-height:100%;--va-sidebar-height:100%;--va-sidebar-position:relative;--va-sidebar-top:0;--va-sidebar-left:0;--va-sidebar-transition:all 0.3s ease;--va-sidebar-z-index:1;--va-sidebar-menu-max-height:100%;--va-sidebar-menu-margin-bottom:0;--va-sidebar-menu-list-style:none;--va-sidebar-menu-padding-left:0;--va-sidebar-menu-overflow-y:auto;--va-sidebar-menu-overflow-x:hidden;--va-sidebar-item-active-border-size:4px;--va-sidebar-item-content-padding:1rem;--va-sidebar-item-content-gap:0.5rem;--va-sidebar-item-title-white-space:nowrap}.va-sidebar__item__content{align-items:center;display:flex;padding:var(--va-sidebar-item-content-padding)}.va-sidebar__item__content>*{margin-right:var(--va-sidebar-item-content-gap)}.va-sidebar__item__content>:last-child{margin-right:0}\");\nconst H = {\n  render: function render$1(e, a) {\n    return n(), d(\"div\", V, [b(e.$slots, \"default\")]);\n  },\n  __file: \"src/components/va-sidebar/VaSidebarItem/VaSidebarItemContent.vue\"\n};\nvar j = H;\nconst I = {\n  class: \"va-sidebar__title va-sidebar-item-title\"\n};\nx(\":root{--va-sidebar-min-height:100%;--va-sidebar-height:100%;--va-sidebar-position:relative;--va-sidebar-top:0;--va-sidebar-left:0;--va-sidebar-transition:all 0.3s ease;--va-sidebar-z-index:1;--va-sidebar-menu-max-height:100%;--va-sidebar-menu-margin-bottom:0;--va-sidebar-menu-list-style:none;--va-sidebar-menu-padding-left:0;--va-sidebar-menu-overflow-y:auto;--va-sidebar-menu-overflow-x:hidden;--va-sidebar-item-active-border-size:4px;--va-sidebar-item-content-padding:1rem;--va-sidebar-item-content-gap:0.5rem;--va-sidebar-item-title-white-space:nowrap}.va-sidebar__title{flex-grow:1;white-space:var(--va-sidebar-item-title-white-space)}\");\nconst L = {\n  render: function render(e, a) {\n    return n(), d(\"div\", I, [b(e.$slots, \"default\")]);\n  },\n  __file: \"src/components/va-sidebar/VaSidebarItem/VaSidebarItemTitle.vue\"\n};\nvar F = L;\nconst B = e(j),\n      E = e(F);\nvar T = e($),\n    W = e(z);\nexport { T as VaSidebarItem, B as VaSidebarItemContent, E as VaSidebarItemTitle, W as default };","map":{"version":3,"mappings":"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","names":["SidebarPropsMixin","Vue","with","SidebarProps","constructor","this","prop","type","String","default","undefined","Boolean","VaSidebar","isMinimized","$props","minimized","hoverable","isHovered","computedStyle","getColor","getTextColor","useColors","backgroundColor","color","background","gradient","getGradientBackground","textColor","width","computedWidth","modelValue","minimizedWidth","computedClass","position","updateHoverState","Options","name","class","x","_createElementBlock","_ctx","style","onMouseenter","onMouseleave","_createElementVNode","_renderSlot","_hoisted_1","defineComponent","props","to","Object","active","activeColor","hoverColor","borderColor","setup","onMouseEnter","onMouseLeave","ref","value","useHover","getHoverColor","getFocusColor","hasKeyboardFocus","keyboardFocusListeners","useKeyboardOnlyFocus","computed","border","_createBlock","custom","href","navigate","_mergeProps","onClick","_toHandlers","render","VaSidebarItemContent","withConfigTransport","VaSidebarItemContentComponent","VaSidebarItemTitle","VaSidebarItemTitleComponent","VaSidebarItem"],"sources":["../../src/components/va-sidebar/VaSidebar.vue","../../src/components/va-sidebar/VaSidebar.vue?vue&type=template&id=2d72e2e8&lang.js","../../src/components/va-sidebar/VaSidebarItem/VaSidebarItem.vue","../../src/components/va-sidebar/VaSidebarItem/VaSidebarItem.vue?vue&type=template&id=28c8df18&lang.js","../../src/components/va-sidebar/VaSidebarItem/VaSidebarItemContent.vue?vue&type=template&id=653c85d6&lang.js","../../src/components/va-sidebar/VaSidebarItem/VaSidebarItemTitle.vue?vue&type=template&id=357b7474&lang.js","../../src/components/va-sidebar/VaSidebarItem/index.ts","../../src/components/va-sidebar/index.ts"],"sourcesContent":["<template>\n  <aside\n    :class=\"computedClass\"\n    :style=\"computedStyle\"\n    @mouseenter=\"updateHoverState(true)\"\n    @mouseleave=\"updateHoverState(false)\"\n  >\n    <div class=\"va-sidebar__menu\">\n      <slot />\n    </div>\n  </aside>\n</template>\n\n<script lang=\"ts\">\nimport { Options, prop, Vue, mixins } from 'vue-class-component'\n\nimport { getGradientBackground } from '../../services/color-config/color-functions'\nimport { useColors } from '../../services/color-config/color-config'\n\nclass SidebarProps {\n  color = prop<string>({ type: String, default: 'background' })\n  textColor = prop<string>({ type: String, default: undefined })\n  gradient = prop<boolean>({ type: Boolean, default: false })\n  minimized = prop<boolean>({ type: Boolean, default: false })\n  hoverable = prop<boolean>({ type: Boolean, default: false })\n  position = prop<string>({ type: String, default: 'left' })\n  width = prop<string>({ type: String, default: '16rem' })\n  minimizedWidth = prop<string>({ type: String, default: '2.5rem' })\n  modelValue = prop<boolean>({ type: Boolean, default: true })\n}\n\nconst SidebarPropsMixin = Vue.with(SidebarProps)\n\n@Options({ name: 'VaSidebar' })\nexport default class VaSidebar extends SidebarPropsMixin {\n  isHovered = false\n\n  get isMinimized () {\n    return this.$props.minimized || (this.$props.hoverable && !this.isHovered)\n  }\n\n  get computedStyle () {\n    const { getColor, getTextColor } = useColors()\n\n    const backgroundColor = getColor(this.color)\n    const background = this.gradient ? getGradientBackground(backgroundColor) : backgroundColor\n\n    const color = this.$props.textColor ? getColor(this.textColor) : getTextColor(backgroundColor)\n\n    return {\n      color,\n      background,\n      width: this.computedWidth,\n    }\n  }\n\n  get computedWidth () {\n    if (!this.$props.modelValue) {\n      return 0\n    }\n    return this.isMinimized ? this.$props.minimizedWidth : this.$props.width\n  }\n\n  get computedClass () {\n    return {\n      'va-sidebar': true,\n      'va-sidebar--minimized': this.isMinimized,\n      'va-sidebar--hidden': !this.modelValue,\n      'va-sidebar--right': this.$props.position === 'right',\n    }\n  }\n\n  updateHoverState (isHovered: boolean) {\n    this.isHovered = this.$props.hoverable ? isHovered : false\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import 'variables';\n\n.va-sidebar {\n  min-height: var(--va-sidebar-min-height);\n  height: var(--va-sidebar-height);\n  position: var(--va-sidebar-position);\n  top: var(--va-sidebar-top);\n  left: var(--va-sidebar-left);\n  transition: var(--va-sidebar-transition);\n  z-index: var(--va-sidebar-z-index);\n  font-family: var(--va-font-family);\n\n  &__menu {\n    max-height: var(--va-sidebar-menu-max-height);\n    margin-bottom: var(--va-sidebar-menu-margin-bottom);\n    list-style: var(--va-sidebar-menu-list-style);\n    padding-left: var(--va-sidebar-menu-padding-left);\n    overflow-y: var(--va-sidebar-menu-overflow-y);\n    overflow-x: var(--va-sidebar-menu-overflow-x);\n  }\n\n  &--minimized {\n    left: 0;\n\n    .va-sidebar-link-group {\n      .va-sidebar-link__content {\n        padding-right: 0;\n      }\n    }\n\n    & + .content-wrap {\n      margin-left: $sidebar-width--hidden !important;\n    }\n  }\n\n  &--right {\n    left: auto;\n    right: 0;\n  }\n}\n</style>\n","<template>\n  <aside\n    :class=\"computedClass\"\n    :style=\"computedStyle\"\n    @mouseenter=\"updateHoverState(true)\"\n    @mouseleave=\"updateHoverState(false)\"\n  >\n    <div class=\"va-sidebar__menu\">\n      <slot />\n    </div>\n  </aside>\n</template>\n\n<script lang=\"ts\">\nimport { Options, prop, Vue, mixins } from 'vue-class-component'\n\nimport { getGradientBackground } from '../../services/color-config/color-functions'\nimport { useColors } from '../../services/color-config/color-config'\n\nclass SidebarProps {\n  color = prop<string>({ type: String, default: 'background' })\n  textColor = prop<string>({ type: String, default: undefined })\n  gradient = prop<boolean>({ type: Boolean, default: false })\n  minimized = prop<boolean>({ type: Boolean, default: false })\n  hoverable = prop<boolean>({ type: Boolean, default: false })\n  position = prop<string>({ type: String, default: 'left' })\n  width = prop<string>({ type: String, default: '16rem' })\n  minimizedWidth = prop<string>({ type: String, default: '2.5rem' })\n  modelValue = prop<boolean>({ type: Boolean, default: true })\n}\n\nconst SidebarPropsMixin = Vue.with(SidebarProps)\n\n@Options({ name: 'VaSidebar' })\nexport default class VaSidebar extends SidebarPropsMixin {\n  isHovered = false\n\n  get isMinimized () {\n    return this.$props.minimized || (this.$props.hoverable && !this.isHovered)\n  }\n\n  get computedStyle () {\n    const { getColor, getTextColor } = useColors()\n\n    const backgroundColor = getColor(this.color)\n    const background = this.gradient ? getGradientBackground(backgroundColor) : backgroundColor\n\n    const color = this.$props.textColor ? getColor(this.textColor) : getTextColor(backgroundColor)\n\n    return {\n      color,\n      background,\n      width: this.computedWidth,\n    }\n  }\n\n  get computedWidth () {\n    if (!this.$props.modelValue) {\n      return 0\n    }\n    return this.isMinimized ? this.$props.minimizedWidth : this.$props.width\n  }\n\n  get computedClass () {\n    return {\n      'va-sidebar': true,\n      'va-sidebar--minimized': this.isMinimized,\n      'va-sidebar--hidden': !this.modelValue,\n      'va-sidebar--right': this.$props.position === 'right',\n    }\n  }\n\n  updateHoverState (isHovered: boolean) {\n    this.isHovered = this.$props.hoverable ? isHovered : false\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import 'variables';\n\n.va-sidebar {\n  min-height: var(--va-sidebar-min-height);\n  height: var(--va-sidebar-height);\n  position: var(--va-sidebar-position);\n  top: var(--va-sidebar-top);\n  left: var(--va-sidebar-left);\n  transition: var(--va-sidebar-transition);\n  z-index: var(--va-sidebar-z-index);\n  font-family: var(--va-font-family);\n\n  &__menu {\n    max-height: var(--va-sidebar-menu-max-height);\n    margin-bottom: var(--va-sidebar-menu-margin-bottom);\n    list-style: var(--va-sidebar-menu-list-style);\n    padding-left: var(--va-sidebar-menu-padding-left);\n    overflow-y: var(--va-sidebar-menu-overflow-y);\n    overflow-x: var(--va-sidebar-menu-overflow-x);\n  }\n\n  &--minimized {\n    left: 0;\n\n    .va-sidebar-link-group {\n      .va-sidebar-link__content {\n        padding-right: 0;\n      }\n    }\n\n    & + .content-wrap {\n      margin-left: $sidebar-width--hidden !important;\n    }\n  }\n\n  &--right {\n    left: auto;\n    right: 0;\n  }\n}\n</style>\n","<template>\n  <router-link custom :to=\"to\" v-slot=\"{ href, navigate }\">\n    <a\n      v-bind=\"$attrs\"\n      class=\"va-sidebar__item va-sidebar-item\"\n      :class=\"{ 'va-sidebar-item--active': active }\"\n      :style=\"computedStyle\"\n      :href=\"href\"\n      @click=\"navigate\"\n      @mouseenter=\"onMouseEnter\"\n      @mouseleave=\"onMouseLeave\"\n      v-on=\"keyboardFocusListeners\"\n    >\n      <slot />\n    </a>\n  </router-link>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, ref, computed } from 'vue'\nimport { useColors } from '../../../services/color-config/color-config'\nimport useKeyboardOnlyFocus from '../../../composables/useKeyboardOnlyFocus'\n\nconst useHover = () => {\n  const isHovered = ref(false)\n  const onMouseEnter = () => { isHovered.value = true }\n  const onMouseLeave = () => { isHovered.value = false }\n\n  return { isHovered, onMouseEnter, onMouseLeave }\n}\n\nexport default defineComponent({\n  name: 'VaSidebarItem',\n  props: {\n    to: {\n      type: [String, Object] as PropType<string | Record<string, any>>,\n      default: () => ({}),\n    },\n    active: { type: Boolean, default: false },\n    textColor: { type: String, default: undefined },\n    activeColor: { type: String, default: 'primary' },\n    hoverColor: { type: String, default: undefined },\n    borderColor: { type: String, default: undefined },\n  },\n  setup (props) {\n    const { isHovered, onMouseEnter, onMouseLeave } = useHover()\n    const { getColor, getHoverColor, getTextColor, getFocusColor } = useColors()\n\n    const { hasKeyboardFocus, keyboardFocusListeners } = useKeyboardOnlyFocus()\n\n    const computedStyle = computed(() => {\n      const style: Record<string, string> = {}\n\n      style.color = getColor(props.textColor, 'inherit')\n\n      if (isHovered.value) {\n        style['background-color'] = getHoverColor(getColor(props.hoverColor || props.activeColor))\n      }\n\n      if (props.active) {\n        const border = props.borderColor === undefined ? props.activeColor : props.borderColor\n\n        style['border-color'] = getColor(border)\n        style['background-color'] = getColor(props.activeColor)\n        style.color = getTextColor(style['background-color'], getColor('dark'), '#ffffff')\n      }\n\n      if (hasKeyboardFocus.value) {\n        style['background-color'] = getFocusColor(getColor(props.hoverColor || props.activeColor))\n      }\n\n      // Override default link color from VaContent\n      style.color = `${style.color} !important`\n\n      return style\n    })\n\n    return { isHovered, onMouseEnter, onMouseLeave, computedStyle, keyboardFocusListeners }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import '../variables';\n\n.va-sidebar__item {\n  border-left: var(--va-sidebar-item-active-border-size) solid transparent;\n  padding-right: var(--va-sidebar-item-active-border-size);\n  display: inline-block;\n  width: 100%;\n  color: inherit !important;\n  font-family: var(--va-font-family);\n}\n</style>\n","<template>\n  <router-link custom :to=\"to\" v-slot=\"{ href, navigate }\">\n    <a\n      v-bind=\"$attrs\"\n      class=\"va-sidebar__item va-sidebar-item\"\n      :class=\"{ 'va-sidebar-item--active': active }\"\n      :style=\"computedStyle\"\n      :href=\"href\"\n      @click=\"navigate\"\n      @mouseenter=\"onMouseEnter\"\n      @mouseleave=\"onMouseLeave\"\n      v-on=\"keyboardFocusListeners\"\n    >\n      <slot />\n    </a>\n  </router-link>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, ref, computed } from 'vue'\nimport { useColors } from '../../../services/color-config/color-config'\nimport useKeyboardOnlyFocus from '../../../composables/useKeyboardOnlyFocus'\n\nconst useHover = () => {\n  const isHovered = ref(false)\n  const onMouseEnter = () => { isHovered.value = true }\n  const onMouseLeave = () => { isHovered.value = false }\n\n  return { isHovered, onMouseEnter, onMouseLeave }\n}\n\nexport default defineComponent({\n  name: 'VaSidebarItem',\n  props: {\n    to: {\n      type: [String, Object] as PropType<string | Record<string, any>>,\n      default: () => ({}),\n    },\n    active: { type: Boolean, default: false },\n    textColor: { type: String, default: undefined },\n    activeColor: { type: String, default: 'primary' },\n    hoverColor: { type: String, default: undefined },\n    borderColor: { type: String, default: undefined },\n  },\n  setup (props) {\n    const { isHovered, onMouseEnter, onMouseLeave } = useHover()\n    const { getColor, getHoverColor, getTextColor, getFocusColor } = useColors()\n\n    const { hasKeyboardFocus, keyboardFocusListeners } = useKeyboardOnlyFocus()\n\n    const computedStyle = computed(() => {\n      const style: Record<string, string> = {}\n\n      style.color = getColor(props.textColor, 'inherit')\n\n      if (isHovered.value) {\n        style['background-color'] = getHoverColor(getColor(props.hoverColor || props.activeColor))\n      }\n\n      if (props.active) {\n        const border = props.borderColor === undefined ? props.activeColor : props.borderColor\n\n        style['border-color'] = getColor(border)\n        style['background-color'] = getColor(props.activeColor)\n        style.color = getTextColor(style['background-color'], getColor('dark'), '#ffffff')\n      }\n\n      if (hasKeyboardFocus.value) {\n        style['background-color'] = getFocusColor(getColor(props.hoverColor || props.activeColor))\n      }\n\n      // Override default link color from VaContent\n      style.color = `${style.color} !important`\n\n      return style\n    })\n\n    return { isHovered, onMouseEnter, onMouseLeave, computedStyle, keyboardFocusListeners }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import '../variables';\n\n.va-sidebar__item {\n  border-left: var(--va-sidebar-item-active-border-size) solid transparent;\n  padding-right: var(--va-sidebar-item-active-border-size);\n  display: inline-block;\n  width: 100%;\n  color: inherit !important;\n  font-family: var(--va-font-family);\n}\n</style>\n","<template>\n  <div class=\"va-sidebar__item__content va-sidebar-item-content\">\n    <slot />\n  </div>\n</template>\n\n<style lang=\"scss\">\n@import '../variables';\n\n.va-sidebar__item__content {\n  display: flex;\n  align-items: center;\n  padding: var(--va-sidebar-item-content-padding);\n\n  & > * {\n    margin-right: var(--va-sidebar-item-content-gap);\n\n    &:last-child {\n      margin-right: 0;\n    }\n  }\n}\n</style>\n","<template>\n  <div class=\"va-sidebar__title va-sidebar-item-title\">\n    <slot />\n  </div>\n</template>\n\n<style lang=\"scss\">\n@import '../_variables';\n\n.va-sidebar__title {\n  flex-grow: 1;\n  white-space: var(--va-sidebar-item-title-white-space);\n}\n</style>\n","import withConfigTransport from '../../../services/config-transport/withConfigTransport'\nimport VaSidebarItem from './VaSidebarItem.vue'\nimport VaSidebarItemContentComponent from './VaSidebarItemContent.vue'\nimport VaSidebarItemTitleComponent from './VaSidebarItemTitle.vue'\n\nexport const VaSidebarItemContent = withConfigTransport(VaSidebarItemContentComponent)\nexport const VaSidebarItemTitle = withConfigTransport(VaSidebarItemTitleComponent)\n\nexport default withConfigTransport(VaSidebarItem)\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\nimport VaSidebar from './VaSidebar.vue'\nexport { default as VaSidebarItem, VaSidebarItemContent, VaSidebarItemTitle } from './VaSidebarItem'\n\nexport default withConfigTransport(VaSidebar)\n"]},"metadata":{},"sourceType":"module"}