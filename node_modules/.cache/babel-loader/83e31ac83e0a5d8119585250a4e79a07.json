{"ast":null,"code":"import { w as o } from \"./withConfigTransport.js\";\nimport { defineComponent as r, computed as e, openBlock as t, createElementBlock as a, normalizeClass as l, normalizeStyle as i, createElementVNode as c } from \"vue\";\nimport { u as n } from \"./color-config.js\";\nimport { b as d, u as s, a as u } from \"./useStateful.js\";\nimport { s as m } from \"./style-inject.es.js\";\nimport \"./VaConfig.js\";\nimport \"colortranslator\";\nvar p = r({\n  name: \"VaColorIndicator\",\n  emits: d,\n  props: { ...s,\n    modelValue: {\n      type: Boolean,\n      default: null\n    },\n    color: {\n      type: String,\n      default: \"\"\n    },\n    square: {\n      type: Boolean,\n      default: !1\n    }\n  },\n\n  setup(o, {\n    emit: r\n  }) {\n    const {\n      valueComputed: t\n    } = u(o, r),\n          {\n      getColor: a\n    } = n(),\n          l = e(() => a(o.color)),\n          i = e(() => ({\n      borderRadius: o.square ? 0 : \"50%\"\n    })),\n          c = e(() => ({\n      \"va-color-indicator--selected\": t.value,\n      \"va-color-indicator--hoverable\": void 0 !== t.value\n    }));\n    return {\n      colorComputed: l,\n      valueComputed: t,\n      computedStyle: i,\n      computedClass: c\n    };\n  }\n\n});\nm(\".va-color-indicator{align-items:center;background-color:#d8dadd;border:.125rem solid #d8dadd;border-radius:50%;cursor:pointer;display:inline-flex;justify-content:center;text-align:center}.va-color-indicator--selected{background-color:#34495e;border-color:#34495e}.va-color-indicator--hoverable .va-color-indicator__core:hover{transform:scale(1.1);transition:transform .1s linear}.va-color-indicator__core{border-radius:50%;height:1rem;transition:transform .1s linear;vertical-align:baseline;width:1rem}\"), p.render = function render(o, r, e, n, d, s) {\n  return t(), a(\"div\", {\n    class: l([\"va-color-indicator\", o.computedClass]),\n    onClick: r[0] || (r[0] = r => o.valueComputed = !o.valueComputed),\n    style: i(o.computedStyle)\n  }, [c(\"div\", {\n    class: \"va-color-indicator__core\",\n    style: i({ ...o.computedStyle,\n      backgroundColor: o.colorComputed\n    })\n  }, null, 4)], 6);\n}, p.__file = \"src/components/va-color-indicator/VaColorIndicator.vue\";\nconst v = o(p);\nexport { v as default };","map":{"version":3,"mappings":";;;;;;;AAoBA,QAAeA,EAAgB;AAC7BC,QAAM,kBADuB;AAE7BC,SAAOC,CAFsB;AAG7BC,SAAO,KACFC,CADE;AAELC,gBAAY;AAAEC,YAAMC,OAAR;AAAsCC,eAAS;AAA/C,KAFP;AAGLC,WAAO;AAAEH,YAAMI,MAAR;AAAoCF,eAAS;AAA7C,KAHF;AAILG,YAAQ;AAAEL,YAAMC,OAAR;AAAsCC,gBAAS;AAA/C;AAJH,GAHsB;;AAS7BI,QAAOT,CAAPS,EAAOT;AAAOU,UAAEA;AAATV,GAAPS,EAAgBC;AACd;AAAMC,qBAAEA;AAAR,QAA0BC,EAAYZ,CAAZY,EAAmBF,CAAnBE,CAA1B;AAAA,UAA6CF;AACvCG,gBAAEA;AADqCH,QACxBI,GADrB;AAAA,UAGMC,IAAgBC,EAAS,MAAMH,EAASb,EAAMM,KAAfO,CAAfG,CAHtB;AAAA,UAKMC,IAAgBD,EAAS;AAASE,oBAAclB,EAAMQ,MAANR,GAAe,CAAfA,GAAmB;AAA1C,MAATgB,CALtB;AAAA,UAOMG,IAAgBH,EAAS;AAC7B,sCAAgCL,EAAcS,KADjB;AAE7B,4CAAyDC,CAAzD,KAAiCV,EAAcS;AAFlB,MAATJ,CAPtB;AAYA,WAAO;AACLD,sBADK;AAELJ,sBAFK;AAGLM,sBAHK;AAILE;AAJK,KAAP;AAIEA;;AA1ByB,CAAhBvB,CAAf;AA0BMuB;AAAAA,cC7CJG;AACEC,cAAM,oBAANA,EAEQC,eAFRD,EADFD;AAEGG,kCAAOD,mBAAiBA,eAAxBC,CAFHH;AAIGI,aAAOF,eAAPE;AAJHJ,KAIUE,CAERG;AACEJ,WAAM,0BADRI;AAEGD,kBAAYF,eAAZE;AAAYF,uBAAgCA;AAA5CE;AAFHC,KAE+CH,IAF/CG,EAE+CH,CAF/CG,CAFQH,CAJVF,EAQiDE,CARjDF,CD6CIH;ACrC6CK,CDqC7CL,ECrC6CK,mEDqC7CL;ACrC6CK,MCL7CI,IAAmBC,EAAoBC,CAApBD,CDK0BL;ACLNM","names":["defineComponent","name","emits","useStatefulEmits","props","useStatefulProps","modelValue","type","Boolean","default","color","String","square","setup","emit","valueComputed","useStateful","getColor","useColors","colorComputed","computed","computedStyle","borderRadius","computedClass","value","undefined","_createElementBlock","class","_ctx","onClick","style","_createElementVNode","VaColorIndicator","withConfigTransport","VaColorIndicatorComponent"],"sources":["../../src/components/va-color-indicator/VaColorIndicator.vue","../../src/components/va-color-indicator/VaColorIndicator.vue?vue&type=template&id=3a5f09c3&lang.js","../../src/components/va-color-indicator/index.ts"],"sourcesContent":["<template>\n  <div\n    class=\"va-color-indicator\"\n    @click=\"valueComputed = !valueComputed\"\n    :class=\"computedClass\"\n    :style=\"computedStyle\"\n  >\n    <div\n      class=\"va-color-indicator__core\"\n      :style=\"{ ...computedStyle, backgroundColor: colorComputed }\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, PropType } from 'vue'\n\nimport { useColors } from '../../composables/useColor'\nimport { useStateful, useStatefulProps, useStatefulEmits } from '../../composables/useStateful'\n\nexport default defineComponent({\n  name: 'VaColorIndicator',\n  emits: useStatefulEmits,\n  props: {\n    ...useStatefulProps,\n    modelValue: { type: Boolean as PropType<boolean>, default: null },\n    color: { type: String as PropType<string>, default: '' },\n    square: { type: Boolean as PropType<boolean>, default: false },\n  },\n  setup (props, { emit }) {\n    const { valueComputed } = useStateful(props, emit)\n    const { getColor } = useColors()\n\n    const colorComputed = computed(() => getColor(props.color))\n\n    const computedStyle = computed(() => ({ borderRadius: props.square ? 0 : '50%' }))\n\n    const computedClass = computed(() => ({\n      'va-color-indicator--selected': valueComputed.value,\n      'va-color-indicator--hoverable': valueComputed.value !== undefined,\n    }))\n\n    return {\n      colorComputed,\n      valueComputed,\n      computedStyle,\n      computedClass,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n\n.va-color-indicator {\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  border-radius: 50%;\n  text-align: center;\n  background-color: #d8dadd;\n  border: 0.125rem solid #d8dadd;\n\n  &--selected {\n    background-color: $vue-darkest-blue;\n    border-color: $vue-darkest-blue;\n  }\n\n  &--hoverable &__core:hover {\n    transform: scale(1.1);\n    transition: transform 0.1s linear;\n  }\n\n  &__core {\n    transition: transform 0.1s linear;\n    vertical-align: baseline;\n    border-radius: 50%;\n    width: 1rem;\n    height: 1rem;\n  }\n}\n</style>\n","<template>\n  <div\n    class=\"va-color-indicator\"\n    @click=\"valueComputed = !valueComputed\"\n    :class=\"computedClass\"\n    :style=\"computedStyle\"\n  >\n    <div\n      class=\"va-color-indicator__core\"\n      :style=\"{ ...computedStyle, backgroundColor: colorComputed }\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, PropType } from 'vue'\n\nimport { useColors } from '../../composables/useColor'\nimport { useStateful, useStatefulProps, useStatefulEmits } from '../../composables/useStateful'\n\nexport default defineComponent({\n  name: 'VaColorIndicator',\n  emits: useStatefulEmits,\n  props: {\n    ...useStatefulProps,\n    modelValue: { type: Boolean as PropType<boolean>, default: null },\n    color: { type: String as PropType<string>, default: '' },\n    square: { type: Boolean as PropType<boolean>, default: false },\n  },\n  setup (props, { emit }) {\n    const { valueComputed } = useStateful(props, emit)\n    const { getColor } = useColors()\n\n    const colorComputed = computed(() => getColor(props.color))\n\n    const computedStyle = computed(() => ({ borderRadius: props.square ? 0 : '50%' }))\n\n    const computedClass = computed(() => ({\n      'va-color-indicator--selected': valueComputed.value,\n      'va-color-indicator--hoverable': valueComputed.value !== undefined,\n    }))\n\n    return {\n      colorComputed,\n      valueComputed,\n      computedStyle,\n      computedClass,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n\n.va-color-indicator {\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  border-radius: 50%;\n  text-align: center;\n  background-color: #d8dadd;\n  border: 0.125rem solid #d8dadd;\n\n  &--selected {\n    background-color: $vue-darkest-blue;\n    border-color: $vue-darkest-blue;\n  }\n\n  &--hoverable &__core:hover {\n    transform: scale(1.1);\n    transition: transform 0.1s linear;\n  }\n\n  &__core {\n    transition: transform 0.1s linear;\n    vertical-align: baseline;\n    border-radius: 50%;\n    width: 1rem;\n    height: 1rem;\n  }\n}\n</style>\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\n\nimport VaColorIndicatorComponent from './VaColorIndicator.vue'\n\nconst VaColorIndicator = withConfigTransport(VaColorIndicatorComponent)\nexport default VaColorIndicator\n"]},"metadata":{},"sourceType":"module"}