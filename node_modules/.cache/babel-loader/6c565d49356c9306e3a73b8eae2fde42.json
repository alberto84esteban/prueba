{"ast":null,"code":"import { computed as e } from \"vue\";\n\nconst t = {\n  align: {\n    type: String,\n    default: \"left\"\n  },\n  vertical: {\n    type: Boolean,\n    default: !1\n  }\n},\n      n = {\n  left: \"flex-start\",\n  center: \"center\",\n  right: \"flex-end\",\n  between: \"space-between\",\n  around: \"space-around\"\n},\n      r = {\n  left: \"flex-start\",\n  center: \"center\",\n  right: \"flex-end\",\n  stretch: \"stretch\"\n},\n      items = (e, t) => t ? r[e] : \"center\";\n\nfunction useAlign(t) {\n  return {\n    alignComputed: e(() => {\n      return {\n        display: \"flex\",\n        flexDirection: t.vertical ? \"column\" : \"row\",\n        justifyContent: (e = t.align, r = t.vertical, r ? \"center\" : e ? n[e] : \"flex-start\"),\n        alignItems: items(t.align, t.vertical)\n      };\n      var e, r;\n    })\n  };\n}\n\nexport { useAlign as a, t as u };","map":{"version":3,"mappings":";;MAEaA,IAAgB;AAC3BC,SAAO;AACLC,UAAMC,MADD;AAELC,aAAS;AAFJ,GADoB;AAK3BC,YAAU;AACRH,UAAMI,OADE;AAERF,cAAS;AAFD;AALiB;MAWvBG,IAAW;AACfC,QAAM,YADS;AAEfC,UAAQ,QAFO;AAGfC,SAAO,UAHQ;AAIfC,WAAS,eAJM;AAKfC,UAAQ;AALO;MAQXC,IAAU;AACdL,QAAM,YADQ;AAEdC,UAAQ,QAFM;AAGdC,SAAO,UAHO;AAIdI,WAAS;AAJK;MAeVC,QAAQ,CAACd,CAAD,EAAgBI,CAAhB,KACLA,IAAWQ,EAAQZ,CAARY,CAAXR,GAAoD;;AAAA,SAG7CW,QAH6C,CAGnCC,CAHmC,EAGnCA;AAUxB,SAAO;AACLC,mBAVoBC,EAAS;AAC7B,aAAO;AACLC,iBAAS,MADJ;AAELC,uBAAeJ,EAAMZ,QAANY,GAAiB,QAAjBA,GAA4B,KAFtC;AAGLK,yBAjBWrB,IAiBagB,EAAMhB,KAjBnBA,EAAeI,IAiBWY,EAAMZ,QAjBhCJ,EACRI,IACH,QADGA,GAEHJ,IACEM,EAASN,CAATM,CADFN,GAEE,YAYFqB,CAHK;AAILC,oBAAYR,MAAME,EAAMhB,KAAZc,EAAmBE,EAAMZ,QAAzBU;AAJP,OAAP;AAdY,UAACd,CAAD,EAAgBI,CAAhB;AAAgBA,KAaRc;AASf,GAAP;AAtB8Bd;;AAAAA","names":["useAlignProps","align","type","String","default","vertical","Boolean","horizMap","left","center","right","between","around","vertMap","stretch","items","useAlign","props","alignComputed","computed","display","flexDirection","justifyContent","alignItems"],"sources":["../../src/composables/useAlign.ts"],"sourcesContent":["import { PropType, computed } from 'vue'\n\nexport const useAlignProps = {\n  align: {\n    type: String as PropType<string>,\n    default: 'left',\n  },\n  vertical: {\n    type: Boolean as PropType<boolean>,\n    default: false,\n  },\n}\n\nconst horizMap = {\n  left: 'flex-start',\n  center: 'center',\n  right: 'flex-end',\n  between: 'space-between',\n  around: 'space-around',\n}\n\nconst vertMap = {\n  left: 'flex-start',\n  center: 'center',\n  right: 'flex-end',\n  stretch: 'stretch',\n}\n\nconst justify = (align: string, vertical: boolean) => {\n  return vertical\n    ? 'center'\n    : align\n      ? horizMap[align as keyof typeof horizMap]\n      : 'flex-start'\n}\n\nconst items = (align: string, vertical: boolean) => {\n  return vertical ? vertMap[align as keyof typeof vertMap] : 'center'\n}\n\nexport function useAlign (props: any) {\n  const alignComputed = computed(() => {\n    return {\n      display: 'flex',\n      flexDirection: props.vertical ? 'column' : 'row' as 'row' | 'column',\n      justifyContent: justify(props.align, props.vertical),\n      alignItems: items(props.align, props.vertical),\n    }\n  })\n\n  return {\n    alignComputed,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}