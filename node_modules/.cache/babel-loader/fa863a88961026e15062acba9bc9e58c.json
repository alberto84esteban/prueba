{"ast":null,"code":"import { w as a } from \"./withConfigTransport.js\";\nimport { defineComponent as e, computed as t, openBlock as r, createElementBlock as i, normalizeClass as d, createElementVNode as v, normalizeStyle as o, renderSlot as g, createTextVNode as p, toDisplayString as n } from \"vue\";\nimport { u as l } from \"./color-config.js\";\nimport { s as b } from \"./style-inject.es.js\";\nimport \"./VaConfig.js\";\nimport \"colortranslator\";\nvar s = e({\n  name: \"VaBadge\",\n  props: {\n    color: {\n      type: String,\n      default: \"danger\"\n    },\n    textColor: {\n      type: String,\n      default: \"var(--va-white)\"\n    },\n    text: {\n      type: [String, Number],\n      default: \"\"\n    },\n    overlap: {\n      type: Boolean,\n      default: !1\n    },\n    multiLine: {\n      type: Boolean,\n      default: !1\n    },\n    visibleEmpty: {\n      type: Boolean,\n      default: !1\n    },\n    dot: {\n      type: Boolean,\n      default: !1\n    },\n    transparent: {\n      type: Boolean,\n      default: !1\n    },\n    left: {\n      type: Boolean,\n      default: !1\n    },\n    bottom: {\n      type: Boolean,\n      default: !1\n    }\n  },\n\n  setup(a, {\n    slots: e\n  }) {\n    const r = t(() => !(a.text || a.visibleEmpty || a.dot || e.text)),\n          i = t(() => e.default || a.dot),\n          d = t(() => ({\n      \"va-badge--visible-empty\": a.visibleEmpty,\n      \"va-badge--empty\": r.value,\n      \"va-badge--dot\": a.dot,\n      \"va-badge--multiLine\": a.multiLine,\n      \"va-badge--floating\": i.value,\n      \"va-badge--left\": a.left,\n      \"va-badge--bottom\": a.bottom,\n      \"va-badge--overlap\": a.overlap\n    })),\n          {\n      getColor: v\n    } = l(),\n          o = t(() => v(a.color));\n    return {\n      badgeClass: d,\n      badgeStyle: t(() => ({\n        color: v(a.textColor, \"var(--va-white)\"),\n        borderColor: o.value,\n        backgroundColor: o.value,\n        opacity: a.transparent ? .5 : 1\n      }))\n    };\n  }\n\n});\nconst m = {\n  class: \"va-badge__text\"\n};\nb(\":root{--va-badge-py:0;--va-badge-font-size:0.625rem;--va-badge-border:0.125rem;--va-badge-size:calc(var(--va-badge-font-size)*var(--va-badge-line-height) + var(--va-badge-border)*2);--va-badge-overlap:calc(var(--va-badge-size)/3);--va-badge-display:inline-flex;--va-badge-position:relative;--va-badge-line-height:1.4;--va-badge-margin:0;--va-badge-dot-size:0.5rem;--va-badge-text-wrapper-transition:0.2s cubic-bezier(0.4,0,0.6,1);--va-badge-text-wrapper-display:inline-flex;--va-badge-text-wrapper-border:solid 0.125rem;--va-badge-text-wrapper-border-radius:0.6rem;--va-badge-text-wrapper-font-weight:700;--va-badge-text-wrapper-line-height:1.4;--va-badge-text-wrapper-letter-spacing:0.0375rem;--va-badge-text-wrapper-justify-content:center;--va-badge-text-wrapper-white-space:nowrap;--va-badge-text-wrapper-width:auto;--va-badge-text-wrapper-height:auto;--va-badge-text-wrapper-min-width:initial;--va-badge-text-wrapper-min-height:initial;--va-badge-text-wrapper-margin:0;--va-badge-text-transform:uppercase;--va-badge-text-py:0;--va-badge-text-px:0.25rem}.va-badge{display:inline-flex;font-family:var(--va-font-family);position:relative}.va-badge__text-wrapper{border:var(--va-badge-text-wrapper-border,var(--va-control-border));border-radius:var(--va-badge-text-wrapper-border-radius);display:var(--va-badge-text-wrapper-display);font-weight:var(--va-badge-text-wrapper-font-weight);height:var(--va-badge-text-wrapper-height);justify-content:var(--va-badge-text-wrapper-justify-content);letter-spacing:var(--va-badge-text-wrapper-letter-spacing,var(--va-letter-spacing));line-height:var(--va-badge-text-wrapper-line-height);margin:var(--va-badge-text-wrapper-margin);min-height:var(--va-badge-text-wrapper-min-height);min-width:var(--va-badge-text-wrapper-min-width);transition:var(--va-badge-text-wrapper-transition,var(--va-transition));white-space:var(--va-badge-text-wrapper-white-space);width:var(--va-badge-text-wrapper-width)}.va-badge--visible-empty .va-badge__text-wrapper{min-height:var(--va-badge-size);min-width:var(--va-badge-size)}.va-badge--dot .va-badge__text-wrapper{border-radius:100%;border-width:0;min-height:var(--va-badge-dot-size);min-width:var(--va-badge-dot-size);padding:0}.va-badge--empty .va-badge__text-wrapper{border-width:0;height:0;min-height:0;min-width:0;width:0}.va-badge--multiLine .va-badge__text-wrapper{white-space:normal}.va-badge--floating .va-badge__text-wrapper{left:100%;position:absolute;top:0;transform:translateX(0) translateY(-50%);z-index:2}.va-badge--overlap .va-badge__text-wrapper{margin-left:calc(var(--va-badge-overlap)*-1);margin-right:0;transform:translateY(-25%)}.va-badge--left .va-badge__text-wrapper{left:0;transform:translateX(-100%) translateY(-50%)}.va-badge--left.va-badge--overlap .va-badge__text-wrapper{margin-left:var(--va-badge-overlap);transform:translateX(-100%) translateY(-25%)}.va-badge--bottom .va-badge__text-wrapper{top:100%;transform:translateX(0) translateY(-50%)}.va-badge--left.va-badge--bottom .va-badge__text-wrapper{transform:translateX(-100%) translateY(-50%)}.va-badge--bottom.va-badge--overlap .va-badge__text-wrapper{margin-left:calc(var(--va-badge-overlap)*-1);transform:translateX(0) translateY(-75%)}.va-badge--bottom.va-badge--left.va-badge--overlap .va-badge__text-wrapper{margin-left:var(--va-badge-overlap);transform:translateX(-100%) translateY(-75%)}.va-badge__text{display:inline-flex;font-size:var(--va-badge-font-size);justify-content:center;margin:var(--va-badge-margin);min-width:calc(var(--va-badge-font-size)*var(--va-badge-line-height));overflow:hidden;padding:var(--va-badge-text-py) var(--va-badge-text-px);text-align:center;text-overflow:clip;text-transform:var(--va-badge-text-transform);white-space:nowrap}.va-badge--multiLine .va-badge__text{max-height:none;overflow:auto;text-align:initial;text-overflow:clip;white-space:normal}.va-badge--dot .va-badge__text{display:none}.va-badge--floating .va-badge__text{align-items:center;padding:var(--va-badge-py) .15rem}\"), s.render = function render(a, e, t, l, b, s) {\n  return r(), i(\"div\", {\n    class: d([\"va-badge\", a.badgeClass])\n  }, [v(\"span\", {\n    class: \"va-badge__text-wrapper\",\n    style: o(a.badgeStyle)\n  }, [v(\"span\", m, [g(a.$slots, \"text\", {}, () => [p(n(a.text), 1)])])], 4), g(a.$slots, \"default\")], 2);\n}, s.__file = \"src/components/va-badge/VaBadge.vue\";\nvar w = a(s);\nexport { w as default };","map":{"version":3,"mappings":";;;;;;AAuBA,QAAeA,EAAgB;AAC7BC,QAAM,SADuB;AAE7BC,SAAO;AACLC,WAAO;AAAEC,YAAMC,MAAR;AAAoCC,eAAS;AAA7C,KADF;AAELC,eAAW;AAAEH,YAAMC,MAAR;AAAoCC,eAAS;AAA7C,KAFN;AAGLE,UAAM;AAAEJ,YAAM,CAACC,MAAD,EAASI,MAAT,CAAR;AAAuDH,eAAS;AAAhE,KAHD;AAILI,aAAS;AAAEN,YAAMO,OAAR;AAAsCL,gBAAS;AAA/C,KAJJ;AAKLM,eAAW;AAAER,YAAMO,OAAR;AAAsCL,gBAAS;AAA/C,KALN;AAMLO,kBAAc;AAAET,YAAMO,OAAR;AAAsCL,gBAAS;AAA/C,KANT;AAOLQ,SAAK;AAAEV,YAAMO,OAAR;AAAsCL,gBAAS;AAA/C,KAPA;AAQLS,iBAAa;AAAEX,YAAMO,OAAR;AAAsCL,gBAAS;AAA/C,KARR;AASLU,UAAM;AAAEZ,YAAMO,OAAR;AAAsCL,gBAAS;AAA/C,KATD;AAULW,YAAQ;AAAEb,YAAMO,OAAR;AAAsCL,gBAAS;AAA/C;AAVH,GAFsB;;AAc7BY,QAAOhB,CAAPgB,EAAOhB;AAAOiB,WAAEA;AAATjB,GAAPgB,EAAgBC;AACd,UAAMC,IAAUC,EAAS,QAAQnB,EAAMM,IAANN,IAAcA,EAAMW,YAApBX,IAAoCA,EAAMY,GAA1CZ,IAAiDiB,EAAMX,IAA/D,CAATa,CAAhB;AAAA,UAEMC,IAAaD,EAAS,MAAMF,EAAMb,OAANa,IAAiBjB,EAAMY,GAAtCO,CAFnB;AAAA,UAIME,IAAaF,EAAS;AAC1B,iCAA2BnB,EAAMW,YADP;AAE1B,yBAAmBO,EAAQI,KAFD;AAG1B,uBAAiBtB,EAAMY,GAHG;AAI1B,6BAAuBZ,EAAMU,SAJH;AAK1B,4BAAsBU,EAAWE,KALP;AAM1B,wBAAkBtB,EAAMc,IANE;AAO1B,0BAAoBd,EAAMe,MAPA;AAQ1B,2BAAqBf,EAAMQ;AARD,MAATW,CAJnB;AAAA,UAY6BX;AAGvBe,gBAAEA;AAHqBf,QAGRgB,GAfrB;AAAA,UAgBMC,IAAgBN,EAAS,MAAMI,EAASvB,EAAMC,KAAfsB,CAAfJ,CAhBtB;AAwBA,WAAO;AAAEE,mBAAF;AAAcK,kBAPFP,EAAS;AAC1BlB,eAAOsB,EAASvB,EAAMK,SAAfkB,EAA0B,iBAA1BA,CADmB;AAE1BI,qBAAaF,EAAcH,KAFD;AAG1BM,yBAAiBH,EAAcH,KAHL;AAI1BO,iBAAS7B,EAAMa,WAANb,GAAoB,EAApBA,GAA0B;AAJT,QAATmB;AAOZ,KAAP;AAHqC;;AApCV,CAAhBrB,CAAf;AAoCyC;AClD7BgC,SAAM;ADkDuB;AClDvBC;AAAA,cARhBC;AACEF,cAAM,UAANA,EACQG,YADRH;AADFE,KAEUC,CAERC;AACEJ,WAAM,wBADRI;AAEGC,aAAOF,YAAPE;AAFHD,KAEUD,CAERC,cACEE,mCACKH,MADL,GACKA,CADL,GADFI,EAFQJ,CAFVC,EAMSD,CANTC,CAFQD,EAYRG,sBAZQH,CAFVD,EAcEI,CAdFJ,CAQgB;AAMdI,CANc,EAMdA,gDANc;ACNlB,QAAeE,EAAoBC,CAApBD,CAAf;AAAmCC","names":["defineComponent","name","props","color","type","String","default","textColor","text","Number","overlap","Boolean","multiLine","visibleEmpty","dot","transparent","left","bottom","setup","slots","isEmpty","computed","isFloating","badgeClass","value","getColor","useColors","colorComputed","badgeStyle","borderColor","backgroundColor","opacity","class","b","_createElementBlock","_ctx","_createElementVNode","style","_renderSlot","_hoisted_1","withConfigTransport","VaBadge"],"sources":["../../src/components/va-badge/VaBadge.vue","../../src/components/va-badge/VaBadge.vue?vue&type=template&id=7751249a&lang.js","../../src/components/va-badge/index.ts"],"sourcesContent":["<template>\n  <div\n    class=\"va-badge\"\n    :class=\"badgeClass\"\n  >\n    <span\n      class=\"va-badge__text-wrapper\"\n      :style=\"badgeStyle\"\n    >\n      <span class=\"va-badge__text\">\n        <slot name=\"text\">\n          {{ text }}\n        </slot>\n      </span>\n    </span>\n    <slot />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, PropType } from 'vue'\nimport { useColors } from '../../composables/useColor'\n\nexport default defineComponent({\n  name: 'VaBadge',\n  props: {\n    color: { type: String as PropType<string>, default: 'danger' },\n    textColor: { type: String as PropType<string>, default: 'var(--va-white)' },\n    text: { type: [String, Number] as PropType<string | number>, default: '' },\n    overlap: { type: Boolean as PropType<boolean>, default: false },\n    multiLine: { type: Boolean as PropType<boolean>, default: false },\n    visibleEmpty: { type: Boolean as PropType<boolean>, default: false },\n    dot: { type: Boolean as PropType<boolean>, default: false },\n    transparent: { type: Boolean as PropType<boolean>, default: false },\n    left: { type: Boolean as PropType<boolean>, default: false },\n    bottom: { type: Boolean as PropType<boolean>, default: false },\n  },\n  setup (props, { slots }) {\n    const isEmpty = computed(() => !(props.text || props.visibleEmpty || props.dot || slots.text))\n\n    const isFloating = computed(() => slots.default || props.dot)\n\n    const badgeClass = computed(() => ({\n      'va-badge--visible-empty': props.visibleEmpty,\n      'va-badge--empty': isEmpty.value,\n      'va-badge--dot': props.dot,\n      'va-badge--multiLine': props.multiLine,\n      'va-badge--floating': isFloating.value,\n      'va-badge--left': props.left,\n      'va-badge--bottom': props.bottom,\n      'va-badge--overlap': props.overlap,\n    }))\n\n    const { getColor } = useColors()\n    const colorComputed = computed(() => getColor(props.color))\n    const badgeStyle = computed(() => ({\n      color: getColor(props.textColor, 'var(--va-white)'),\n      borderColor: colorComputed.value,\n      backgroundColor: colorComputed.value,\n      opacity: props.transparent ? 0.5 : 1,\n    }))\n\n    return { badgeClass, badgeStyle }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"variables\";\n\n.va-badge {\n  display: inline-flex;\n  position: relative;\n  font-family: var(--va-font-family);\n\n  &__text-wrapper {\n    transition: var(--va-badge-text-wrapper-transition, var(--va-transition));\n    display: var(--va-badge-text-wrapper-display);\n    border: var(--va-badge-text-wrapper-border, var(--va-control-border));\n    border-radius: var(--va-badge-text-wrapper-border-radius);\n    font-weight: var(--va-badge-text-wrapper-font-weight);\n    line-height: var(--va-badge-text-wrapper-line-height);\n    letter-spacing: var(--va-badge-text-wrapper-letter-spacing, var(--va-letter-spacing));\n    justify-content: var(--va-badge-text-wrapper-justify-content);\n    white-space: var(--va-badge-text-wrapper-white-space);\n    width: var(--va-badge-text-wrapper-width);\n    height: var(--va-badge-text-wrapper-height);\n    min-width: var(--va-badge-text-wrapper-min-width);\n    min-height: var(--va-badge-text-wrapper-min-height);\n    margin: var(--va-badge-text-wrapper-margin);\n\n    .va-badge--visible-empty & {\n      min-width: var(--va-badge-size);\n      min-height: var(--va-badge-size);\n    }\n\n    .va-badge--dot & {\n      min-width: var(--va-badge-dot-size);\n      min-height: var(--va-badge-dot-size);\n      border-width: 0;\n      border-radius: 100%;\n      padding: 0;\n    }\n\n    .va-badge--empty & {\n      width: 0;\n      height: 0;\n      min-width: 0;\n      min-height: 0;\n      border-width: 0;\n    }\n\n    .va-badge--multiLine & {\n      white-space: normal;\n    }\n\n    .va-badge--floating & {\n      position: absolute;\n      z-index: 2;\n      top: 0;\n      left: 100%;\n      transform: translateX(0) translateY(-50%);\n    }\n\n    .va-badge--overlap & {\n      margin-left: calc(-1 * var(--va-badge-overlap));\n      margin-right: 0;\n      transform: translateY(-25%);\n    }\n\n    .va-badge--left & {\n      left: 0;\n      transform: translateX(-100%) translateY(-50%);\n    }\n\n    .va-badge--left.va-badge--overlap & {\n      margin-left: var(--va-badge-overlap);\n      transform: translateX(-100%) translateY(-25%);\n    }\n\n    .va-badge--bottom & {\n      top: 100%;\n      transform: translateX(0) translateY(-50%);\n    }\n\n    .va-badge--left.va-badge--bottom & {\n      transform: translateX(-100%) translateY(-50%);\n    }\n\n    .va-badge--bottom.va-badge--overlap & {\n      margin-left: calc(-1 * var(--va-badge-overlap));\n      transform: translateX(0) translateY(-75%);\n    }\n\n    .va-badge--bottom.va-badge--left.va-badge--overlap & {\n      margin-left: var(--va-badge-overlap);\n      transform: translateX(-100%) translateY(-75%);\n    }\n  }\n\n  &__text {\n    margin: var(--va-badge-margin);\n    text-transform: var(--va-badge-text-transform);\n    overflow: hidden;\n    min-width: calc(var(--va-badge-font-size) * var(--va-badge-line-height));\n    padding: var(--va-badge-text-py) var(--va-badge-text-px);\n    text-align: center;\n    display: inline-flex;\n    justify-content: center;\n    text-overflow: clip;\n    white-space: nowrap;\n    font-size: var(--va-badge-font-size);\n\n    .va-badge--multiLine & {\n      overflow: auto;\n      max-height: initial;\n      text-align: initial;\n      text-overflow: initial;\n      white-space: normal;\n    }\n\n    .va-badge--dot & {\n      display: none;\n    }\n\n    .va-badge--floating & {\n      align-items: center;\n      padding: var(--va-badge-py) 0.15rem;\n    }\n  }\n}\n</style>\n","<template>\n  <div\n    class=\"va-badge\"\n    :class=\"badgeClass\"\n  >\n    <span\n      class=\"va-badge__text-wrapper\"\n      :style=\"badgeStyle\"\n    >\n      <span class=\"va-badge__text\">\n        <slot name=\"text\">\n          {{ text }}\n        </slot>\n      </span>\n    </span>\n    <slot />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, PropType } from 'vue'\nimport { useColors } from '../../composables/useColor'\n\nexport default defineComponent({\n  name: 'VaBadge',\n  props: {\n    color: { type: String as PropType<string>, default: 'danger' },\n    textColor: { type: String as PropType<string>, default: 'var(--va-white)' },\n    text: { type: [String, Number] as PropType<string | number>, default: '' },\n    overlap: { type: Boolean as PropType<boolean>, default: false },\n    multiLine: { type: Boolean as PropType<boolean>, default: false },\n    visibleEmpty: { type: Boolean as PropType<boolean>, default: false },\n    dot: { type: Boolean as PropType<boolean>, default: false },\n    transparent: { type: Boolean as PropType<boolean>, default: false },\n    left: { type: Boolean as PropType<boolean>, default: false },\n    bottom: { type: Boolean as PropType<boolean>, default: false },\n  },\n  setup (props, { slots }) {\n    const isEmpty = computed(() => !(props.text || props.visibleEmpty || props.dot || slots.text))\n\n    const isFloating = computed(() => slots.default || props.dot)\n\n    const badgeClass = computed(() => ({\n      'va-badge--visible-empty': props.visibleEmpty,\n      'va-badge--empty': isEmpty.value,\n      'va-badge--dot': props.dot,\n      'va-badge--multiLine': props.multiLine,\n      'va-badge--floating': isFloating.value,\n      'va-badge--left': props.left,\n      'va-badge--bottom': props.bottom,\n      'va-badge--overlap': props.overlap,\n    }))\n\n    const { getColor } = useColors()\n    const colorComputed = computed(() => getColor(props.color))\n    const badgeStyle = computed(() => ({\n      color: getColor(props.textColor, 'var(--va-white)'),\n      borderColor: colorComputed.value,\n      backgroundColor: colorComputed.value,\n      opacity: props.transparent ? 0.5 : 1,\n    }))\n\n    return { badgeClass, badgeStyle }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"variables\";\n\n.va-badge {\n  display: inline-flex;\n  position: relative;\n  font-family: var(--va-font-family);\n\n  &__text-wrapper {\n    transition: var(--va-badge-text-wrapper-transition, var(--va-transition));\n    display: var(--va-badge-text-wrapper-display);\n    border: var(--va-badge-text-wrapper-border, var(--va-control-border));\n    border-radius: var(--va-badge-text-wrapper-border-radius);\n    font-weight: var(--va-badge-text-wrapper-font-weight);\n    line-height: var(--va-badge-text-wrapper-line-height);\n    letter-spacing: var(--va-badge-text-wrapper-letter-spacing, var(--va-letter-spacing));\n    justify-content: var(--va-badge-text-wrapper-justify-content);\n    white-space: var(--va-badge-text-wrapper-white-space);\n    width: var(--va-badge-text-wrapper-width);\n    height: var(--va-badge-text-wrapper-height);\n    min-width: var(--va-badge-text-wrapper-min-width);\n    min-height: var(--va-badge-text-wrapper-min-height);\n    margin: var(--va-badge-text-wrapper-margin);\n\n    .va-badge--visible-empty & {\n      min-width: var(--va-badge-size);\n      min-height: var(--va-badge-size);\n    }\n\n    .va-badge--dot & {\n      min-width: var(--va-badge-dot-size);\n      min-height: var(--va-badge-dot-size);\n      border-width: 0;\n      border-radius: 100%;\n      padding: 0;\n    }\n\n    .va-badge--empty & {\n      width: 0;\n      height: 0;\n      min-width: 0;\n      min-height: 0;\n      border-width: 0;\n    }\n\n    .va-badge--multiLine & {\n      white-space: normal;\n    }\n\n    .va-badge--floating & {\n      position: absolute;\n      z-index: 2;\n      top: 0;\n      left: 100%;\n      transform: translateX(0) translateY(-50%);\n    }\n\n    .va-badge--overlap & {\n      margin-left: calc(-1 * var(--va-badge-overlap));\n      margin-right: 0;\n      transform: translateY(-25%);\n    }\n\n    .va-badge--left & {\n      left: 0;\n      transform: translateX(-100%) translateY(-50%);\n    }\n\n    .va-badge--left.va-badge--overlap & {\n      margin-left: var(--va-badge-overlap);\n      transform: translateX(-100%) translateY(-25%);\n    }\n\n    .va-badge--bottom & {\n      top: 100%;\n      transform: translateX(0) translateY(-50%);\n    }\n\n    .va-badge--left.va-badge--bottom & {\n      transform: translateX(-100%) translateY(-50%);\n    }\n\n    .va-badge--bottom.va-badge--overlap & {\n      margin-left: calc(-1 * var(--va-badge-overlap));\n      transform: translateX(0) translateY(-75%);\n    }\n\n    .va-badge--bottom.va-badge--left.va-badge--overlap & {\n      margin-left: var(--va-badge-overlap);\n      transform: translateX(-100%) translateY(-75%);\n    }\n  }\n\n  &__text {\n    margin: var(--va-badge-margin);\n    text-transform: var(--va-badge-text-transform);\n    overflow: hidden;\n    min-width: calc(var(--va-badge-font-size) * var(--va-badge-line-height));\n    padding: var(--va-badge-text-py) var(--va-badge-text-px);\n    text-align: center;\n    display: inline-flex;\n    justify-content: center;\n    text-overflow: clip;\n    white-space: nowrap;\n    font-size: var(--va-badge-font-size);\n\n    .va-badge--multiLine & {\n      overflow: auto;\n      max-height: initial;\n      text-align: initial;\n      text-overflow: initial;\n      white-space: normal;\n    }\n\n    .va-badge--dot & {\n      display: none;\n    }\n\n    .va-badge--floating & {\n      align-items: center;\n      padding: var(--va-badge-py) 0.15rem;\n    }\n  }\n}\n</style>\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\nimport VaBadge from './VaBadge.vue'\n\nexport default withConfigTransport(VaBadge)\n"]},"metadata":{},"sourceType":"module"}