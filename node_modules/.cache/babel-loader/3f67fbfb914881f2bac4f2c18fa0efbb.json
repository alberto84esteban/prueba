{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport { w as t } from \"./withConfigTransport.js\";\nimport { __decorate as e, __metadata as i } from \"tslib\";\nimport { watch as o, resolveComponent as a, openBlock as n, createBlock as s, withCtx as r, createCommentVNode as l, renderSlot as p, createElementBlock as u, Fragment as c, renderList as d, normalizeStyle as h, normalizeClass as g, createTextVNode as m, toDisplayString as f, withDirectives as b, withKeys as v, vModelText as y } from \"vue\";\nimport { V, m as j, O as $, p as I } from \"./vue-class-component.esm-bundler.js\";\nimport { R as k } from \"./decorators.js\";\nimport { C as P } from \"./ColorMixin.js\";\nimport { S as _ } from \"./StatefulMixin.js\";\nimport w from \"./index10.js\";\nimport S from \"./index8.js\";\nimport C from \"./index31.js\";\nimport { s as L } from \"./style-inject.es.js\";\nimport \"./VaConfig.js\";\nimport \"./color-config.js\";\nimport \"colortranslator\";\nimport \"./useColor.js\";\nimport \"./useRouterLink.js\";\nimport \"./useSize.js\";\nimport \"./useLoading.js\";\nimport \"./index28.js\";\nimport \"./VaIcon.js\";\nimport \"./flatten.js\";\nimport \"./index39.js\";\nimport \"./clamp.js\";\nimport \"./toNumber.js\";\nimport \"./VaInput.js\";\nimport \"./useForm.js\";\nimport \"./index60.js\";\nimport \"./useSyncProp.js\";\nimport \"./consts.js\";\nimport \"./useFocus.js\";\nimport \"cleave.js\";\nimport \"./useEmitProxy.js\";\nimport \"./pick.js\";\nimport \"./child-props.js\";\nimport \"./VaMessageListWrapper.vue_vue&type=script&lang.js\";\nconst x = V.with(class PaginationProps {\n  constructor() {\n    this.modelValue = I({\n      type: Number,\n      default: 1\n    }), this.visiblePages = I({\n      type: Number,\n      default: 0\n    }), this.pages = I({\n      type: Number,\n      default: 0\n    }), this.disabled = I({\n      type: Boolean,\n      default: !1\n    }), this.color = I({\n      type: String,\n      default: \"primary\"\n    }), this.size = I({\n      type: String,\n      default: \"medium\",\n      validator: t => [\"medium\", \"small\", \"large\"].includes(t)\n    }), this.boundaryLinks = I({\n      type: Boolean,\n      default: !0\n    }), this.boundaryNumbers = I({\n      type: Boolean,\n      default: !1\n    }), this.directionLinks = I({\n      type: Boolean,\n      default: !0\n    }), this.input = I({\n      type: Boolean,\n      default: !1\n    }), this.hideOnSinglePage = I({\n      type: Boolean,\n      default: !1\n    }), this.flat = I({\n      type: Boolean,\n      default: !1\n    }), this.total = I({\n      type: Number,\n      default: null\n    }), this.pageSize = I({\n      type: Number,\n      default: null\n    }), this.boundaryIconLeft = I({\n      type: String,\n      default: \"first_page\"\n    }), this.boundaryIconRight = I({\n      type: String,\n      default: \"last_page\"\n    }), this.directionIconLeft = I({\n      type: String,\n      default: \"chevron_left\"\n    }), this.directionIconRight = I({\n      type: String,\n      default: \"chevron_right\"\n    });\n  }\n\n});\nlet z = class VaPagination extends j(_, P, x) {\n  constructor() {\n    super(...arguments), this.inputValue = \"\";\n  }\n\n  created() {\n    o([() => this.useTotal, () => this.$props.pages], () => {\n      if (this.useTotal && this.$props.pages && \"production\" !== process.env.NODE_ENV) throw new Error(\"Please, use either `total` and `page-size` props, or `pages`.\");\n    });\n  }\n\n  get lastPage() {\n    const {\n      total: t,\n      pageSize: e,\n      pages: i\n    } = this.$props;\n    return this.useTotal ? Math.ceil(t / e) || 1 : i;\n  }\n\n  get paginationRange() {\n    const {\n      visiblePages: t,\n      total: e,\n      pageSize: i,\n      boundaryNumbers: o,\n      pages: a\n    } = this.$props;\n    return ((t = 1, e, i, o = !1) => {\n      let a = 0;\n      if (0 === i && (i = 1), e > i && (e = i), 0 === e) a = 1, e = i;else {\n        const o = e / 2;\n        a = t - o <= 0 || t > i ? 1 : t + o > i ? i - e + 1 : Math.ceil(t - o);\n      }\n      const n = [];\n\n      for (let t = 0; t < e; t++) n.push(a + t);\n\n      return o && (1 !== a && n.splice(0, 2, 1, \"...\"), n[n.length - 1] !== i && n.splice(-2, 2, \"...\", i)), n;\n    })(this.currentValue || 1, t, this.useTotal ? Math.ceil(e / i) : a, o);\n  }\n\n  get showBoundaryLinks() {\n    const {\n      visiblePages: t,\n      boundaryLinks: e,\n      boundaryNumbers: i,\n      input: o\n    } = this.$props;\n    return o || t && this.lastPage > t && e && !i;\n  }\n\n  get showDirectionLinks() {\n    const {\n      visiblePages: t,\n      directionLinks: e,\n      input: i\n    } = this.$props;\n    return i || t && this.lastPage > t && e;\n  }\n\n  get showPagination() {\n    return this.lastPage > 1 || !this.$props.hideOnSinglePage && this.lastPage <= 1;\n  }\n\n  get fontColor() {\n    return this.computeColor(this.$props.color);\n  }\n\n  get useTotal() {\n    const {\n      total: t,\n      pageSize: e\n    } = this.$props;\n    return !(!t && 0 !== t || !e);\n  }\n\n  get currentValue() {\n    return this.useTotal ? Math.ceil(this.valueComputed / this.$props.pageSize) || 1 : this.valueComputed;\n  }\n\n  set currentValue(t) {\n    this.valueComputed = t;\n  }\n\n  focusInput() {\n    const {\n      currentValue: t,\n      $nextTick: e\n    } = this;\n    this.inputValue = t, e(() => this.htmlInput.setSelectionRange(0, this.htmlInput.value.length));\n  }\n\n  onUserInput(t) {\n    t < 1 || t > this.lastPage || (this.currentValue = this.useTotal ? (t - 1) * this.$props.pageSize + 1 : t);\n  }\n\n  resetInput() {\n    this.inputValue = \"\", this.htmlInput.blur();\n  }\n\n  changeValue() {\n    if (this.inputValue === this.currentValue && this.resetInput(), !this.inputValue.length) return;\n    let t = Number.parseInt(this.inputValue);\n\n    switch (!0) {\n      case t < 1:\n        t = 1;\n        break;\n\n      case t > this.lastPage:\n        t = this.lastPage;\n        break;\n\n      case isNaN(t):\n        t = this.currentValue;\n    }\n\n    this.onUserInput(t), this.resetInput();\n  }\n\n  activeButtonStyle(t) {\n    return t === this.currentValue ? {\n      backgroundColor: this.colorComputed,\n      color: \"#ffffff\"\n    } : {\n      color: this.fontColor\n    };\n  }\n\n};\ne([k(), i(\"design:type\", HTMLInputElement)], z.prototype, \"htmlInput\", void 0), z = e([$({\n  name: \"VaPagination\",\n  components: {\n    VaButtonGroup: w,\n    VaButton: S,\n    VaInput: C\n  }\n})], z);\nvar B = z;\nconst N = [\"disabled\", \"placeholder\"];\nL(\":root{--va-pagination-input-border-style:solid;--va-pagination-input-border-width:2px 0;--va-pagination-input-text-align:center;--va-pagination-input-font-size:1rem;--va-pagination-input-flat-border-top-width:0}.va-pagination{font-family:var(--va-font-family)}.va-pagination__input{border-style:var(--va-pagination-input-border-style);border-width:var(--va-pagination-input-border-width);font-size:var(--va-pagination-input-font-size);text-align:var(--va-pagination-input-text-align)}.va-pagination__input--flat{border-top-width:var(--va-pagination-input-flat-border-top-width)}.va-pagination .va-button.va-input{cursor:default}.va-pagination .va-button--ellipsis{cursor:default;opacity:1}.va-pagination .va-button--ellipsis>.va-button__content{opacity:.4}.va-pagination .va-button--outline.va-button--disabled{opacity:1}.va-pagination .va-button--outline.va-button--disabled>.va-button__content{opacity:.4}\"), B.render = function render(t, e, i, o, V, j) {\n  const $ = a(\"va-button\"),\n        I = a(\"va-button-group\");\n  return t.showPagination ? (n(), s(I, {\n    key: 0,\n    class: \"va-pagination\",\n    flat: t.$props.flat,\n    size: t.$props.size,\n    color: t.$props.color,\n    outline: \"\"\n  }, {\n    default: r(() => [t.showBoundaryLinks ? (n(), s($, {\n      key: 0,\n      disabled: t.$props.disabled || 1 === t.currentValue,\n      icon: t.$props.boundaryIconLeft,\n      onClick: e[0] || (e[0] = e => t.onUserInput(1))\n    }, null, 8, [\"disabled\", \"icon\"])) : l(\"v-if\", !0), t.showDirectionLinks ? (n(), s($, {\n      key: 1,\n      outline: \"\",\n      disabled: t.$props.disabled || 1 === t.currentValue,\n      icon: t.$props.directionIconLeft,\n      onClick: e[1] || (e[1] = e => t.onUserInput(t.currentValue - 1))\n    }, null, 8, [\"disabled\", \"icon\"])) : l(\"v-if\", !0), t.$props.input ? b((n(), u(\"input\", {\n      key: 3,\n      ref: \"htmlInput\",\n      class: g([\"va-pagination__input va-button\", {\n        \"va-pagination__input--flat\": t.$props.flat\n      }]),\n      style: h({\n        cursor: \"default\",\n        color: t.computeColor(t.$props.color),\n        opacity: t.$props.disabled ? .4 : 1\n      }),\n      onKeydown: e[2] || (e[2] = v((...e) => t.changeValue && t.changeValue(...e), [\"enter\"])),\n      onFocus: e[3] || (e[3] = (...e) => t.focusInput && t.focusInput(...e)),\n      onBlur: e[4] || (e[4] = (...e) => t.changeValue && t.changeValue(...e)),\n      disabled: t.$props.disabled,\n      placeholder: `${t.currentValue}/${t.lastPage}`,\n      \"onUpdate:modelValue\": e[5] || (e[5] = e => t.inputValue = e)\n    }, null, 46, N)), [[y, t.inputValue]]) : p(t.$slots, \"default\", {\n      key: 2\n    }, () => [(n(!0), u(c, null, d(t.paginationRange, (e, i) => (n(), s($, {\n      style: h(t.activeButtonStyle(e)),\n      outline: \"\",\n      key: i,\n      disabled: t.$props.disabled || \"...\" === e,\n      class: g({\n        \"va-button--ellipsis\": \"...\" === e\n      }),\n      onClick: i => t.onUserInput(e)\n    }, {\n      default: r(() => [m(f(e), 1)]),\n      _: 2\n    }, 1032, [\"style\", \"disabled\", \"class\", \"onClick\"]))), 128))]), t.showDirectionLinks ? (n(), s($, {\n      key: 4,\n      outline: \"\",\n      disabled: t.$props.disabled || t.currentValue === t.lastPage,\n      icon: t.$props.directionIconRight,\n      onClick: e[6] || (e[6] = e => t.onUserInput(t.currentValue + 1))\n    }, null, 8, [\"disabled\", \"icon\"])) : l(\"v-if\", !0), t.showBoundaryLinks ? (n(), s($, {\n      key: 5,\n      outline: \"\",\n      disabled: t.$props.disabled || t.currentValue === t.lastPage,\n      icon: t.$props.boundaryIconRight,\n      onClick: e[7] || (e[7] = e => t.onUserInput(t.lastPage))\n    }, null, 8, [\"disabled\", \"icon\"])) : l(\"v-if\", !0)]),\n    _: 3\n  }, 8, [\"flat\", \"size\", \"color\"])) : l(\"v-if\", !0);\n}, B.__file = \"src/components/va-pagination/VaPagination.vue\";\nvar T = t(B);\nexport { T as default };","map":{"version":3,"mappings":"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","names":["PaginationPropsMixin","Vue","with","PaginationProps","constructor","this","prop","type","Number","default","Boolean","String","validator","v","includes","VaPagination","mixins","StatefulMixin","ColorMixin","created","watch","useTotal","$props","pages","process","env","NODE_ENV","Error","lastPage","total","pageSize","Math","ceil","paginationRange","visiblePages","boundaryNumbers","value","includeBoundary","start","paginationMiddlePage","range","i","push","splice","length","currentValue","showBoundaryLinks","boundaryLinks","input","showDirectionLinks","directionLinks","showPagination","hideOnSinglePage","fontColor","computeColor","color","valueComputed","focusInput","$nextTick","inputValue","htmlInput","setSelectionRange","onUserInput","pageNum","resetInput","blur","changeValue","parseInt","isNaN","activeButtonStyle","buttonValue","backgroundColor","colorComputed","__decorate","Ref","HTMLInputElement","Options","name","components","VaButtonGroup","VaButton","VaInput","_ctx","n","_createBlock","class","flat","size","outline","disabled","icon","boundaryIconLeft","onClick","directionIconLeft","_createElementBlock","ref","style","onKeydown","onFocus","onBlur","placeholder","_renderSlot","key","directionIconRight","boundaryIconRight","withConfigTransport"],"sources":["../../src/components/va-pagination/VaPagination.vue","../../src/components/va-pagination/setPaginationRange.ts","../../src/components/va-pagination/VaPagination.vue?vue&type=template&id=51c93e08&lang.js","../../src/components/va-pagination/index.ts"],"sourcesContent":["<template>\n  <va-button-group\n    v-if=\"showPagination\"\n    class=\"va-pagination\"\n    :flat=\"$props.flat\"\n    :size=\"$props.size\"\n    :color=\"$props.color\"\n    outline\n  >\n    <va-button\n      v-if=\"showBoundaryLinks\"\n      :disabled=\"$props.disabled || currentValue === 1\"\n      :icon=\"$props.boundaryIconLeft\"\n      @click=\"onUserInput(1)\"\n    />\n    <va-button\n      v-if=\"showDirectionLinks\"\n      outline\n      :disabled=\"$props.disabled || currentValue === 1\"\n      :icon=\"$props.directionIconLeft\"\n      @click=\"onUserInput(currentValue - 1)\"\n    />\n    <slot v-if=\"!$props.input\">\n      <va-button\n        :style=\"activeButtonStyle(n)\"\n        outline\n        v-for=\"(n, key) in paginationRange\"\n        :key=\"key\"\n        :disabled=\"$props.disabled || n === '...'\"\n        :class=\"{\n          'va-button--ellipsis': n === '...',\n        }\"\n\n        @click=\"onUserInput(n)\"\n      >\n        {{ n }}\n      </va-button>\n    </slot>\n    <input\n      v-else\n      ref=\"htmlInput\"\n      class=\"va-pagination__input va-button\"\n      :style=\"{\n        cursor: 'default',\n        color: computeColor($props.color),\n        opacity: $props.disabled ? 0.4 : 1\n      }\"\n      :class=\"{ 'va-pagination__input--flat': $props.flat }\"\n      @keydown.enter=\"changeValue\"\n      @focus=\"focusInput\"\n      @blur=\"changeValue\"\n      :disabled=\"$props.disabled\"\n      :placeholder=\"`${currentValue}/${lastPage}`\"\n      v-model=\"inputValue\"\n    />\n    <va-button\n      v-if=\"showDirectionLinks\"\n      outline\n      :disabled=\"$props.disabled || currentValue === lastPage\"\n      :icon=\"$props.directionIconRight\"\n      @click=\"onUserInput(currentValue + 1)\"\n    />\n    <va-button\n      v-if=\"showBoundaryLinks\"\n      outline\n      :disabled=\"$props.disabled || currentValue === lastPage\"\n      :icon=\"$props.boundaryIconRight\"\n      @click=\"onUserInput(lastPage)\"\n    />\n  </va-button-group>\n</template>\n\n<script lang=\"ts\">\nimport { watch } from 'vue'\nimport { Options, mixins, prop, Vue } from 'vue-class-component'\n\nimport { Ref } from '../../utils/decorators'\nimport ColorMixin from '../../services/color-config/ColorMixin'\nimport { StatefulMixin } from '../../mixins/StatefulMixin/StatefulMixin'\nimport VaButtonGroup from '../va-button-group'\nimport VaButton from '../va-button'\nimport VaInput from '../va-input'\n\nimport { setPaginationRange } from './setPaginationRange'\n\nclass PaginationProps {\n  modelValue = prop<number>({ type: Number, default: 1 })\n  visiblePages = prop<number>({ type: Number, default: 0 })\n  pages = prop<number>({ type: Number, default: 0 })\n  disabled = prop<boolean>({ type: Boolean, default: false })\n  color = prop<string>({ type: String, default: 'primary' })\n  size = prop<string>({\n    type: String,\n    default: 'medium',\n    validator: (v: string) => ['medium', 'small', 'large'].includes(v),\n  })\n\n  boundaryLinks = prop<boolean>({ type: Boolean, default: true })\n  boundaryNumbers = prop<boolean>({ type: Boolean, default: false })\n  directionLinks = prop<boolean>({ type: Boolean, default: true })\n  input = prop<boolean>({ type: Boolean, default: false })\n  hideOnSinglePage = prop<boolean>({ type: Boolean, default: false })\n  flat = prop<boolean>({ type: Boolean, default: false })\n  total = prop<number>({ type: Number, default: null })\n  pageSize = prop<number>({ type: Number, default: null })\n  boundaryIconLeft = prop<string>({ type: String, default: 'first_page' })\n  boundaryIconRight = prop<string>({ type: String, default: 'last_page' })\n  directionIconLeft = prop<string>({ type: String, default: 'chevron_left' })\n  directionIconRight = prop<string>({ type: String, default: 'chevron_right' })\n}\n\nconst PaginationPropsMixin = Vue.with(PaginationProps)\n\n@Options({\n  name: 'VaPagination',\n  components: {\n    VaButtonGroup,\n    VaButton,\n    VaInput,\n  },\n})\nexport default class VaPagination extends mixins(\n  StatefulMixin,\n  ColorMixin,\n  PaginationPropsMixin,\n) {\n  inputValue = ''\n\n  @Ref() readonly htmlInput!: HTMLInputElement\n\n  created () {\n    watch([() => this.useTotal, () => this.$props.pages], () => {\n      if (this.useTotal && this.$props.pages) {\n        if (process.env.NODE_ENV !== 'production') {\n          throw new Error('Please, use either `total` and `page-size` props, or `pages`.')\n        }\n      }\n    })\n  }\n\n  get lastPage (): number {\n    const { total, pageSize, pages } = this.$props\n    return this.useTotal\n      ? Math.ceil((total as number) / (pageSize as number)) || 1\n      : pages as number\n  }\n\n  get paginationRange () {\n    const { visiblePages, total, pageSize, boundaryNumbers, pages } = this.$props\n    const value = this.currentValue || 1\n    const totalPages = this.useTotal ? Math.ceil((total as number) / (pageSize as number)) : pages\n    return setPaginationRange(value, visiblePages as number, totalPages as number, boundaryNumbers)\n  }\n\n  get showBoundaryLinks () {\n    const { visiblePages, boundaryLinks, boundaryNumbers, input } = this.$props\n    return input ||\n      ((visiblePages && this.lastPage > visiblePages) && boundaryLinks && !boundaryNumbers)\n  }\n\n  get showDirectionLinks () {\n    const { visiblePages, directionLinks, input } = this.$props\n    return input || ((visiblePages && this.lastPage > visiblePages) && directionLinks)\n  }\n\n  get showPagination () {\n    return this.lastPage > 1 || (!this.$props.hideOnSinglePage && this.lastPage <= 1)\n  }\n\n  get fontColor () {\n    return this.computeColor(this.$props.color as string)\n  }\n\n  get useTotal () {\n    const { total, pageSize } = this.$props\n    return !!((total || total === 0) && pageSize)\n  }\n\n  get currentValue () {\n    if (this.useTotal) {\n      return Math.ceil(this.valueComputed / (this.$props.pageSize as number)) || 1\n    } else {\n      return this.valueComputed\n    }\n  }\n\n  set currentValue (value) {\n    this.valueComputed = value\n  }\n\n  focusInput () {\n    const { currentValue, $nextTick } = this\n    this.inputValue = currentValue\n    $nextTick(() => this.htmlInput.setSelectionRange(0, this.htmlInput.value.length))\n  }\n\n  onUserInput (pageNum: number) {\n    if (pageNum < 1 || pageNum > this.lastPage) {\n      return\n    }\n    this.currentValue = this.useTotal\n      ? (pageNum - 1) * (this.$props.pageSize as number) + 1\n      : pageNum\n  }\n\n  resetInput () {\n    this.inputValue = ''\n    this.htmlInput.blur()\n  }\n\n  changeValue () {\n    if (this.inputValue === this.currentValue) { this.resetInput() }\n    if (!this.inputValue.length) { return }\n    let pageNum = Number.parseInt(this.inputValue)\n    switch (true) {\n    case pageNum < 1:\n      pageNum = 1\n      break\n    case pageNum > this.lastPage:\n      pageNum = this.lastPage\n      break\n    case isNaN(pageNum):\n      pageNum = this.currentValue\n      break\n    default:\n      break\n    }\n    this.onUserInput(pageNum)\n    this.resetInput()\n  }\n\n  activeButtonStyle (buttonValue: number) {\n    if (buttonValue === this.currentValue) {\n      return {\n        backgroundColor: this.colorComputed,\n        color: '#ffffff',\n      }\n    }\n    return {\n      color: this.fontColor,\n    }\n  }\n}\n</script>\n\n<style lang='scss'>\n@import \"../../styles/resources\";\n@import 'variables';\n\n.va-pagination {\n  font-family: var(--va-font-family);\n\n  &__input {\n    border-style: var(--va-pagination-input-border-style);\n    border-width: var(--va-pagination-input-border-width);\n    text-align: var(--va-pagination-input-text-align);\n    font-size: var(--va-pagination-input-font-size);\n\n    &--flat {\n      border-top-width: var(--va-pagination-input-flat-border-top-width);\n    }\n  }\n\n  .va-button {\n    &.va-input {\n      cursor: default;\n    }\n\n    &--ellipsis {\n      cursor: default;\n      opacity: 1;\n    }\n\n    &--ellipsis > .va-button__content {\n      opacity: 0.4;\n    }\n\n    &--outline.va-button--disabled {\n      opacity: 1;\n    }\n\n    &--outline.va-button--disabled > .va-button__content {\n      opacity: 0.4;\n    }\n  }\n}\n</style>\n","export const setPaginationRange = (value = 1, visiblePages: number, pages: number, includeBoundary = false) => {\n  let start = 0\n\n  if (pages === 0) {\n    pages = 1\n  }\n\n  if (visiblePages > pages) {\n    visiblePages = pages\n  }\n  if (visiblePages === 0) {\n    start = 1\n    visiblePages = pages\n  } else {\n    const paginationMiddlePage = visiblePages / 2\n    if (value - paginationMiddlePage <= 0 || value > pages) {\n      start = 1\n    } else {\n      start = value + paginationMiddlePage > pages\n        ? pages - visiblePages + 1\n        : Math.ceil(value - paginationMiddlePage)\n    }\n  }\n\n  const range: Array<'...' | number> = []\n\n  for (let i = 0; i < visiblePages; i++) {\n    range.push(start + i)\n  }\n\n  if (includeBoundary) {\n    start !== 1 && range.splice(0, 2, 1, '...')\n    range[range.length - 1] !== pages && range.splice(-2, 2, '...', pages)\n  }\n\n  return range\n}\n","<template>\n  <va-button-group\n    v-if=\"showPagination\"\n    class=\"va-pagination\"\n    :flat=\"$props.flat\"\n    :size=\"$props.size\"\n    :color=\"$props.color\"\n    outline\n  >\n    <va-button\n      v-if=\"showBoundaryLinks\"\n      :disabled=\"$props.disabled || currentValue === 1\"\n      :icon=\"$props.boundaryIconLeft\"\n      @click=\"onUserInput(1)\"\n    />\n    <va-button\n      v-if=\"showDirectionLinks\"\n      outline\n      :disabled=\"$props.disabled || currentValue === 1\"\n      :icon=\"$props.directionIconLeft\"\n      @click=\"onUserInput(currentValue - 1)\"\n    />\n    <slot v-if=\"!$props.input\">\n      <va-button\n        :style=\"activeButtonStyle(n)\"\n        outline\n        v-for=\"(n, key) in paginationRange\"\n        :key=\"key\"\n        :disabled=\"$props.disabled || n === '...'\"\n        :class=\"{\n          'va-button--ellipsis': n === '...',\n        }\"\n\n        @click=\"onUserInput(n)\"\n      >\n        {{ n }}\n      </va-button>\n    </slot>\n    <input\n      v-else\n      ref=\"htmlInput\"\n      class=\"va-pagination__input va-button\"\n      :style=\"{\n        cursor: 'default',\n        color: computeColor($props.color),\n        opacity: $props.disabled ? 0.4 : 1\n      }\"\n      :class=\"{ 'va-pagination__input--flat': $props.flat }\"\n      @keydown.enter=\"changeValue\"\n      @focus=\"focusInput\"\n      @blur=\"changeValue\"\n      :disabled=\"$props.disabled\"\n      :placeholder=\"`${currentValue}/${lastPage}`\"\n      v-model=\"inputValue\"\n    />\n    <va-button\n      v-if=\"showDirectionLinks\"\n      outline\n      :disabled=\"$props.disabled || currentValue === lastPage\"\n      :icon=\"$props.directionIconRight\"\n      @click=\"onUserInput(currentValue + 1)\"\n    />\n    <va-button\n      v-if=\"showBoundaryLinks\"\n      outline\n      :disabled=\"$props.disabled || currentValue === lastPage\"\n      :icon=\"$props.boundaryIconRight\"\n      @click=\"onUserInput(lastPage)\"\n    />\n  </va-button-group>\n</template>\n\n<script lang=\"ts\">\nimport { watch } from 'vue'\nimport { Options, mixins, prop, Vue } from 'vue-class-component'\n\nimport { Ref } from '../../utils/decorators'\nimport ColorMixin from '../../services/color-config/ColorMixin'\nimport { StatefulMixin } from '../../mixins/StatefulMixin/StatefulMixin'\nimport VaButtonGroup from '../va-button-group'\nimport VaButton from '../va-button'\nimport VaInput from '../va-input'\n\nimport { setPaginationRange } from './setPaginationRange'\n\nclass PaginationProps {\n  modelValue = prop<number>({ type: Number, default: 1 })\n  visiblePages = prop<number>({ type: Number, default: 0 })\n  pages = prop<number>({ type: Number, default: 0 })\n  disabled = prop<boolean>({ type: Boolean, default: false })\n  color = prop<string>({ type: String, default: 'primary' })\n  size = prop<string>({\n    type: String,\n    default: 'medium',\n    validator: (v: string) => ['medium', 'small', 'large'].includes(v),\n  })\n\n  boundaryLinks = prop<boolean>({ type: Boolean, default: true })\n  boundaryNumbers = prop<boolean>({ type: Boolean, default: false })\n  directionLinks = prop<boolean>({ type: Boolean, default: true })\n  input = prop<boolean>({ type: Boolean, default: false })\n  hideOnSinglePage = prop<boolean>({ type: Boolean, default: false })\n  flat = prop<boolean>({ type: Boolean, default: false })\n  total = prop<number>({ type: Number, default: null })\n  pageSize = prop<number>({ type: Number, default: null })\n  boundaryIconLeft = prop<string>({ type: String, default: 'first_page' })\n  boundaryIconRight = prop<string>({ type: String, default: 'last_page' })\n  directionIconLeft = prop<string>({ type: String, default: 'chevron_left' })\n  directionIconRight = prop<string>({ type: String, default: 'chevron_right' })\n}\n\nconst PaginationPropsMixin = Vue.with(PaginationProps)\n\n@Options({\n  name: 'VaPagination',\n  components: {\n    VaButtonGroup,\n    VaButton,\n    VaInput,\n  },\n})\nexport default class VaPagination extends mixins(\n  StatefulMixin,\n  ColorMixin,\n  PaginationPropsMixin,\n) {\n  inputValue = ''\n\n  @Ref() readonly htmlInput!: HTMLInputElement\n\n  created () {\n    watch([() => this.useTotal, () => this.$props.pages], () => {\n      if (this.useTotal && this.$props.pages) {\n        if (process.env.NODE_ENV !== 'production') {\n          throw new Error('Please, use either `total` and `page-size` props, or `pages`.')\n        }\n      }\n    })\n  }\n\n  get lastPage (): number {\n    const { total, pageSize, pages } = this.$props\n    return this.useTotal\n      ? Math.ceil((total as number) / (pageSize as number)) || 1\n      : pages as number\n  }\n\n  get paginationRange () {\n    const { visiblePages, total, pageSize, boundaryNumbers, pages } = this.$props\n    const value = this.currentValue || 1\n    const totalPages = this.useTotal ? Math.ceil((total as number) / (pageSize as number)) : pages\n    return setPaginationRange(value, visiblePages as number, totalPages as number, boundaryNumbers)\n  }\n\n  get showBoundaryLinks () {\n    const { visiblePages, boundaryLinks, boundaryNumbers, input } = this.$props\n    return input ||\n      ((visiblePages && this.lastPage > visiblePages) && boundaryLinks && !boundaryNumbers)\n  }\n\n  get showDirectionLinks () {\n    const { visiblePages, directionLinks, input } = this.$props\n    return input || ((visiblePages && this.lastPage > visiblePages) && directionLinks)\n  }\n\n  get showPagination () {\n    return this.lastPage > 1 || (!this.$props.hideOnSinglePage && this.lastPage <= 1)\n  }\n\n  get fontColor () {\n    return this.computeColor(this.$props.color as string)\n  }\n\n  get useTotal () {\n    const { total, pageSize } = this.$props\n    return !!((total || total === 0) && pageSize)\n  }\n\n  get currentValue () {\n    if (this.useTotal) {\n      return Math.ceil(this.valueComputed / (this.$props.pageSize as number)) || 1\n    } else {\n      return this.valueComputed\n    }\n  }\n\n  set currentValue (value) {\n    this.valueComputed = value\n  }\n\n  focusInput () {\n    const { currentValue, $nextTick } = this\n    this.inputValue = currentValue\n    $nextTick(() => this.htmlInput.setSelectionRange(0, this.htmlInput.value.length))\n  }\n\n  onUserInput (pageNum: number) {\n    if (pageNum < 1 || pageNum > this.lastPage) {\n      return\n    }\n    this.currentValue = this.useTotal\n      ? (pageNum - 1) * (this.$props.pageSize as number) + 1\n      : pageNum\n  }\n\n  resetInput () {\n    this.inputValue = ''\n    this.htmlInput.blur()\n  }\n\n  changeValue () {\n    if (this.inputValue === this.currentValue) { this.resetInput() }\n    if (!this.inputValue.length) { return }\n    let pageNum = Number.parseInt(this.inputValue)\n    switch (true) {\n    case pageNum < 1:\n      pageNum = 1\n      break\n    case pageNum > this.lastPage:\n      pageNum = this.lastPage\n      break\n    case isNaN(pageNum):\n      pageNum = this.currentValue\n      break\n    default:\n      break\n    }\n    this.onUserInput(pageNum)\n    this.resetInput()\n  }\n\n  activeButtonStyle (buttonValue: number) {\n    if (buttonValue === this.currentValue) {\n      return {\n        backgroundColor: this.colorComputed,\n        color: '#ffffff',\n      }\n    }\n    return {\n      color: this.fontColor,\n    }\n  }\n}\n</script>\n\n<style lang='scss'>\n@import \"../../styles/resources\";\n@import 'variables';\n\n.va-pagination {\n  font-family: var(--va-font-family);\n\n  &__input {\n    border-style: var(--va-pagination-input-border-style);\n    border-width: var(--va-pagination-input-border-width);\n    text-align: var(--va-pagination-input-text-align);\n    font-size: var(--va-pagination-input-font-size);\n\n    &--flat {\n      border-top-width: var(--va-pagination-input-flat-border-top-width);\n    }\n  }\n\n  .va-button {\n    &.va-input {\n      cursor: default;\n    }\n\n    &--ellipsis {\n      cursor: default;\n      opacity: 1;\n    }\n\n    &--ellipsis > .va-button__content {\n      opacity: 0.4;\n    }\n\n    &--outline.va-button--disabled {\n      opacity: 1;\n    }\n\n    &--outline.va-button--disabled > .va-button__content {\n      opacity: 0.4;\n    }\n  }\n}\n</style>\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\nimport VaPagination from './VaPagination.vue'\n\nexport default withConfigTransport(VaPagination)\n"]},"metadata":{},"sourceType":"module"}