{"ast":null,"code":"import { w as r } from \"./withConfigTransport.js\";\nimport { defineComponent as e, computed as s, openBlock as a, createElementBlock as o, normalizeClass as i, normalizeStyle as t, createElementVNode as p, renderSlot as c, createCommentVNode as l } from \"vue\";\nimport { c as n } from \"./clamp.js\";\nimport { u as v } from \"./color-config.js\";\nimport { u as f, a as g } from \"./useSize.js\";\nimport { s as m } from \"./style-inject.es.js\";\nimport \"./VaConfig.js\";\nimport \"./toNumber.js\";\nimport \"colortranslator\";\nvar d = e({\n  name: \"VaProgressCircle\",\n  props: { ...f,\n    modelValue: {\n      type: Number,\n      default: 0\n    },\n    indeterminate: {\n      type: Boolean,\n      default: !1\n    },\n    thickness: {\n      type: Number,\n      default: .06\n    },\n    color: {\n      type: String,\n      default: \"primary\"\n    }\n  },\n\n  setup(r) {\n    const {\n      getColor: e\n    } = v(),\n          {\n      sizeComputed: a\n    } = g(r),\n          o = s(() => n(r.thickness, 0, 1) / 2 * 100),\n          i = s(() => 20 - 20 * o.value / 100),\n          t = s(() => 2 * Math.PI * i.value),\n          p = s(() => t.value * (1 - n(r.modelValue, 0, 100) / 100)),\n          c = s(() => e(r.color));\n    return {\n      infoStyle: s(() => ({\n        color: c.value\n      })),\n      rootStyle: s(() => ({\n        width: a.value,\n        height: a.value\n      })),\n      rootClass: s(() => ({\n        \"va-progress-circle--indeterminate\": r.indeterminate\n      })),\n      colorComputed: c,\n      radius: i,\n      dasharray: t,\n      dashoffset: p,\n      cappedThickness: o\n    };\n  }\n\n});\nconst h = {\n  class: \"va-progress-circle__wrapper\",\n  viewBox: \"0 0 40 40\"\n},\n      w = [\"r\", \"stroke\", \"stroke-width\", \"stroke-dasharray\", \"stroke-dashoffset\"];\nm(\":root{--va-progress-circle-position:relative;--va-progress-circle-overflow:hidden;--va-progress-circle-wrapper-position:absolute;--va-progress-circle-wrapper-top:0;--va-progress-circle-wrapper-left:0;--va-progress-circle-wrapper-bottom:0;--va-progress-circle-wrapper-right:0;--va-progress-circle-wrapper-margin:auto;--va-progress-circle-wrapper-transform:rotate(-90deg);--va-progress-circle-wrapper-width:80%;--va-progress-circle-wrapper-height:80%;--va-progress-circle-overlay-transition:all ease 2s;--va-progress-circle-info-font-size:0.75rem;--va-progress-circle-info-position:absolute;--va-progress-circle-info-left:50%;--va-progress-circle-info-top:50%;--va-progress-circle-info-transform:translate(-50%,-50%)}.va-progress-circle{font-family:var(--va-font-family);overflow:var(--va-progress-circle-overflow);position:var(--va-progress-circle-position)}.va-progress-circle__wrapper{align-items:center;bottom:var(--va-progress-circle-wrapper-bottom);display:flex;height:var(--va-progress-circle-wrapper-height);justify-content:center;left:var(--va-progress-circle-wrapper-left);margin:var(--va-progress-circle-wrapper-margin);position:var(--va-progress-circle-wrapper-position);right:var(--va-progress-circle-wrapper-right);top:var(--va-progress-circle-wrapper-top);transform:var(--va-progress-circle-wrapper-transform);width:var(--va-progress-circle-wrapper-width)}.va-progress-circle--indeterminate .va-progress-circle__wrapper{-webkit-animation:va-progress-circle__wrapper--indeterminate 2s linear infinite;animation:va-progress-circle__wrapper--indeterminate 2s linear infinite}.va-progress-circle__overlay{transition:var(--va-progress-circle-overlay-transition)}.va-progress-circle--indeterminate .va-progress-circle__overlay{-webkit-animation:va-progress-circle__overlay--indeterminate 2s ease-in-out infinite;animation:va-progress-circle__overlay--indeterminate 2s ease-in-out infinite}.va-progress-circle__info{font-size:var(--va-progress-circle-info-font-size);left:var(--va-progress-circle-info-left);position:var(--va-progress-circle-info-position);top:var(--va-progress-circle-info-top);transform:var(--va-progress-circle-info-transform)}@-webkit-keyframes va-progress-circle__wrapper--indeterminate{to{transform:rotate(270deg)}}@keyframes va-progress-circle__wrapper--indeterminate{to{transform:rotate(270deg)}}@-webkit-keyframes va-progress-circle__overlay--indeterminate{0%{stroke-dasharray:1,125;stroke-dashoffset:0}50%{stroke-dasharray:125,125;stroke-dashoffset:-65px}to{stroke-dasharray:125,125;stroke-dashoffset:-125px}}@keyframes va-progress-circle__overlay--indeterminate{0%{stroke-dasharray:1,125;stroke-dashoffset:0}50%{stroke-dasharray:125,125;stroke-dashoffset:-65px}to{stroke-dasharray:125,125;stroke-dashoffset:-125px}}\"), d.render = function render(r, e, s, n, v, f) {\n  return a(), o(\"div\", {\n    class: i([\"va-progress-circle\", r.rootClass]),\n    ref: \"progress\",\n    style: t(r.rootStyle)\n  }, [(a(), o(\"svg\", h, [p(\"circle\", {\n    class: \"va-progress-circle__overlay\",\n    cx: \"50%\",\n    cy: \"50%\",\n    r: r.radius,\n    fill: \"none\",\n    stroke: r.colorComputed,\n    \"stroke-width\": r.cappedThickness + \"%\",\n    \"stroke-dasharray\": r.dasharray,\n    \"stroke-dashoffset\": r.dashoffset\n  }, null, 8, w)])), r.$slots.default ? (a(), o(\"div\", {\n    key: 0,\n    style: t(r.infoStyle),\n    class: \"va-progress-circle__info\"\n  }, [c(r.$slots, \"default\")], 4)) : l(\"v-if\", !0)], 6);\n}, d.__file = \"src/components/va-progress-circle/VaProgressCircle.vue\";\nconst y = r(d);\nexport { y as VaProgressCircle };","map":{"version":3,"mappings":";;;;;;;;;AAuCA,QAAeA,EAAgB;AAC7BC,QAAM,kBADuB;AAG7BC,SAAO,KACFC,CADE;AAELC,gBAAY;AAAEC,YAAMC,MAAR;AAAgBC,eAAS;AAAzB,KAFP;AAGLC,mBAAe;AAAEH,YAAMI,OAAR;AAAiBF,gBAAS;AAA1B,KAHV;AAILG,eAAW;AAAEL,YAAMC,MAAR;AAAgBC,eAAS;AAAzB,KAJN;AAKLI,WAAO;AAAEN,YAAMO,MAAR;AAAgBL,eAAS;AAAzB;AALF,GAHsB;;AAW7BM,QAAOX,CAAPW,EAAOX;AACL;AAAMY,gBAAEA;AAAR,QAAqBC,GAArB;AAAA,UAAqBA;AACfC,oBAAEA;AADaD,QACIE,EAAQf,CAARe,CADzB;AAAA,UAGMC,IAAkBC,EAAS,MAAMC,EAAMlB,EAAMQ,SAAZU,EAAuB,CAAvBA,EAA0B,CAA1BA,IAA+B,CAA/BA,GAAmC,GAAlDD,CAHxB;AAAA,UAKME,IAASF,EAAS,MAAM,KAAM,KAAKD,EAAgBI,KAArB,GAA6B,GAAlDH,CALf;AAAA,UAMMI,IAAYJ,EAAS,MAAM,IAAIK,KAAKC,EAAT,GAAcJ,EAAOC,KAApCH,CANlB;AAAA,UAOMO,IAAaP,EAAS,MAAMI,EAAUD,KAAVC,IAAmB,IAAIH,EAAMlB,EAAME,UAAZgB,EAAwB,CAAxBA,EAA2B,GAA3BA,IAAkC,GAAzDG,CAAfJ,CAPnB;AAAA,UAQMQ,IAAgBR,EAAS,MAAML,EAASZ,EAAMS,KAAfG,CAAfK,CARtB;AAUA,WAAO;AACLS,iBAAWT,EAAS;AAASR,eAAOgB,EAAcL;AAA9B,QAATH,CADN;AAELU,iBAAWV,EAAS;AAClBW,eAAOd,EAAaM,KADF;AAElBS,gBAAQf,EAAaM;AAFH,QAATH,CAFN;AAMLa,iBAAWb,EAAS;AAClB,6CAAqCjB,EAAMM;AADzB,QAATW,CANN;AAULQ,sBAVK;AAWLN,eAXK;AAYLE,kBAZK;AAaLG,mBAbK;AAcLR;AAdK,KAAP;AAcEA;;AApCyB,CAAhBlB,CAAf;AAoCMkB;ACnEAe,SAAM,6BDmENf;AClEAgB,WAAQ;ADkERhB;AAAAA,MClEQiB,4EDkERjB;AClEQkB;AAAA,cARZC;AACEJ,cAAM,oBAANA,EAGQK,WAHRL,EADFI;AAEEE,SAAI,UAFNF;AAGGG,aAAOF,WAAPE;AAHHH,KAGUC,OAGRD,aAIEI;AACER,WAAM,6BADRQ;AAEEC,QAAG,KAFLD;AAGEE,QAAG,KAHLF;AAIGG,OAAGN,QAJNG;AAKEI,UAAK,MALPJ;AAMGK,YAAQR,eANXG;AAOG,oBAAcH,uBAPjBG;AAQG,wBAAkBH,WARrBG;AASG,yBAAmBH;AATtBG,KASsBH,IATtBG,EASsBH,CATtBG,EASsBH,CATtBG,CAJFM,EAHQT,GAoBAA,SAAc/B,OAAd+B,IAAcU,KADtBX;AAAAA;AAEGG,aAAOF,WAAPE,CAFHH;AAGEJ,WAAM;AAHRI,KAGQ,CAENY,sBAFM,CAHRZ,EAKEY,CALFZ,CACQC,IAINW,aAxBMX,CAHVD,EA2BIY,CA3BJZ,CAQY;AAmBRY,CAnBQ,EAmBRA,mEAnBQ;AAmBRA,MCzBOC,IAAmBC,EAAoBC,CAApBD,CDyB1BF;ACzB8CG","names":["defineComponent","name","props","useSizeProps","modelValue","type","Number","default","indeterminate","Boolean","thickness","color","String","setup","getColor","useColors","sizeComputed","useSize","cappedThickness","computed","clamp","radius","value","dasharray","Math","PI","dashoffset","colorComputed","infoStyle","rootStyle","width","height","rootClass","class","viewBox","w","m","_createElementBlock","_ctx","ref","style","_createElementVNode","cx","cy","r","fill","stroke","_hoisted_1","a","_renderSlot","VaProgressCircle","withConfigTransport","VaProgressCircleComponent"],"sources":["../../src/components/va-progress-circle/VaProgressCircle.vue","../../src/components/va-progress-circle/VaProgressCircle.vue?vue&type=template&id=21fac549&lang.js","../../src/components/va-progress-circle/index.ts"],"sourcesContent":["<template>\n  <div\n    class=\"va-progress-circle\"\n    ref=\"progress\"\n    :style=\"rootStyle\"\n    :class=\"rootClass\"\n  >\n    <svg\n      class=\"va-progress-circle__wrapper\"\n      viewBox=\"0 0 40 40\"\n    >\n      <circle\n        class=\"va-progress-circle__overlay\"\n        cx=\"50%\"\n        cy=\"50%\"\n        :r=\"radius\"\n        fill=\"none\"\n        :stroke=\"colorComputed\"\n        :stroke-width=\"cappedThickness + '%'\"\n        :stroke-dasharray=\"dasharray\"\n        :stroke-dashoffset=\"dashoffset\"\n      />\n    </svg>\n    <div\n      v-if=\"$slots.default\"\n      :style=\"infoStyle\"\n      class=\"va-progress-circle__info\"\n    >\n      <slot />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent } from 'vue'\nimport clamp from 'lodash/clamp'\nimport { useColors } from '../../services/color-config/color-config'\nimport { useSize, useSizeProps } from '../../composables/useSize'\n\nexport default defineComponent({\n  name: 'VaProgressCircle',\n\n  props: {\n    ...useSizeProps,\n    modelValue: { type: Number, default: 0 },\n    indeterminate: { type: Boolean, default: false },\n    thickness: { type: Number, default: 0.06 },\n    color: { type: String, default: 'primary' },\n  },\n\n  setup (props) {\n    const { getColor } = useColors()\n    const { sizeComputed } = useSize(props)\n\n    const cappedThickness = computed(() => clamp(props.thickness, 0, 1) / 2 * 100)\n\n    const radius = computed(() => 20 - (20 * cappedThickness.value / 100))\n    const dasharray = computed(() => 2 * Math.PI * radius.value)\n    const dashoffset = computed(() => dasharray.value * (1 - clamp(props.modelValue, 0, 100) / 100))\n    const colorComputed = computed(() => getColor(props.color))\n\n    return {\n      infoStyle: computed(() => ({ color: colorComputed.value })),\n      rootStyle: computed(() => ({\n        width: sizeComputed.value,\n        height: sizeComputed.value,\n      })),\n      rootClass: computed(() => ({\n        'va-progress-circle--indeterminate': props.indeterminate,\n      })),\n\n      colorComputed,\n      radius,\n      dasharray,\n      dashoffset,\n      cappedThickness,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-progress-circle {\n  position: var(--va-progress-circle-position);\n  overflow: var(--va-progress-circle-overflow); // Prevents resizing container back and forth.\n  font-family: var(--va-font-family);\n\n  &__wrapper {\n    position: var(--va-progress-circle-wrapper-position);\n    top: var(--va-progress-circle-wrapper-top);\n    left: var(--va-progress-circle-wrapper-left);\n    bottom: var(--va-progress-circle-wrapper-bottom);\n    right: var(--va-progress-circle-wrapper-right);\n    margin: var(--va-progress-circle-wrapper-margin);\n    transform: var(--va-progress-circle-wrapper-transform);\n    width: var(--va-progress-circle-wrapper-width);\n    height: var(--va-progress-circle-wrapper-height);\n\n    @include flex-center();\n\n    @at-root {\n      .va-progress-circle--indeterminate & {\n        animation: va-progress-circle__wrapper--indeterminate 2s linear infinite;\n      }\n    }\n  }\n\n  &__overlay {\n    transition: var(--va-progress-circle-overlay-transition);\n\n    @at-root {\n      .va-progress-circle--indeterminate & {\n        animation: va-progress-circle__overlay--indeterminate 2s ease-in-out infinite;\n      }\n    }\n  }\n\n  &__info {\n    font-size: var(--va-progress-circle-info-font-size);\n    position: var(--va-progress-circle-info-position);\n    left: var(--va-progress-circle-info-left);\n    top: var(--va-progress-circle-info-top);\n    transform: var(--va-progress-circle-info-transform);\n  }\n}\n\n@keyframes va-progress-circle__wrapper--indeterminate {\n  100% {\n    transform: rotate(270deg);\n  }\n}\n\n@keyframes va-progress-circle__overlay--indeterminate {\n  0% {\n    stroke-dasharray: 1, 125;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 125, 125;\n    stroke-dashoffset: -65px;\n  }\n\n  100% {\n    stroke-dasharray: 125, 125;\n    stroke-dashoffset: -125px;\n  }\n}\n</style>\n","<template>\n  <div\n    class=\"va-progress-circle\"\n    ref=\"progress\"\n    :style=\"rootStyle\"\n    :class=\"rootClass\"\n  >\n    <svg\n      class=\"va-progress-circle__wrapper\"\n      viewBox=\"0 0 40 40\"\n    >\n      <circle\n        class=\"va-progress-circle__overlay\"\n        cx=\"50%\"\n        cy=\"50%\"\n        :r=\"radius\"\n        fill=\"none\"\n        :stroke=\"colorComputed\"\n        :stroke-width=\"cappedThickness + '%'\"\n        :stroke-dasharray=\"dasharray\"\n        :stroke-dashoffset=\"dashoffset\"\n      />\n    </svg>\n    <div\n      v-if=\"$slots.default\"\n      :style=\"infoStyle\"\n      class=\"va-progress-circle__info\"\n    >\n      <slot />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent } from 'vue'\nimport clamp from 'lodash/clamp'\nimport { useColors } from '../../services/color-config/color-config'\nimport { useSize, useSizeProps } from '../../composables/useSize'\n\nexport default defineComponent({\n  name: 'VaProgressCircle',\n\n  props: {\n    ...useSizeProps,\n    modelValue: { type: Number, default: 0 },\n    indeterminate: { type: Boolean, default: false },\n    thickness: { type: Number, default: 0.06 },\n    color: { type: String, default: 'primary' },\n  },\n\n  setup (props) {\n    const { getColor } = useColors()\n    const { sizeComputed } = useSize(props)\n\n    const cappedThickness = computed(() => clamp(props.thickness, 0, 1) / 2 * 100)\n\n    const radius = computed(() => 20 - (20 * cappedThickness.value / 100))\n    const dasharray = computed(() => 2 * Math.PI * radius.value)\n    const dashoffset = computed(() => dasharray.value * (1 - clamp(props.modelValue, 0, 100) / 100))\n    const colorComputed = computed(() => getColor(props.color))\n\n    return {\n      infoStyle: computed(() => ({ color: colorComputed.value })),\n      rootStyle: computed(() => ({\n        width: sizeComputed.value,\n        height: sizeComputed.value,\n      })),\n      rootClass: computed(() => ({\n        'va-progress-circle--indeterminate': props.indeterminate,\n      })),\n\n      colorComputed,\n      radius,\n      dasharray,\n      dashoffset,\n      cappedThickness,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-progress-circle {\n  position: var(--va-progress-circle-position);\n  overflow: var(--va-progress-circle-overflow); // Prevents resizing container back and forth.\n  font-family: var(--va-font-family);\n\n  &__wrapper {\n    position: var(--va-progress-circle-wrapper-position);\n    top: var(--va-progress-circle-wrapper-top);\n    left: var(--va-progress-circle-wrapper-left);\n    bottom: var(--va-progress-circle-wrapper-bottom);\n    right: var(--va-progress-circle-wrapper-right);\n    margin: var(--va-progress-circle-wrapper-margin);\n    transform: var(--va-progress-circle-wrapper-transform);\n    width: var(--va-progress-circle-wrapper-width);\n    height: var(--va-progress-circle-wrapper-height);\n\n    @include flex-center();\n\n    @at-root {\n      .va-progress-circle--indeterminate & {\n        animation: va-progress-circle__wrapper--indeterminate 2s linear infinite;\n      }\n    }\n  }\n\n  &__overlay {\n    transition: var(--va-progress-circle-overlay-transition);\n\n    @at-root {\n      .va-progress-circle--indeterminate & {\n        animation: va-progress-circle__overlay--indeterminate 2s ease-in-out infinite;\n      }\n    }\n  }\n\n  &__info {\n    font-size: var(--va-progress-circle-info-font-size);\n    position: var(--va-progress-circle-info-position);\n    left: var(--va-progress-circle-info-left);\n    top: var(--va-progress-circle-info-top);\n    transform: var(--va-progress-circle-info-transform);\n  }\n}\n\n@keyframes va-progress-circle__wrapper--indeterminate {\n  100% {\n    transform: rotate(270deg);\n  }\n}\n\n@keyframes va-progress-circle__overlay--indeterminate {\n  0% {\n    stroke-dasharray: 1, 125;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 125, 125;\n    stroke-dashoffset: -65px;\n  }\n\n  100% {\n    stroke-dasharray: 125, 125;\n    stroke-dashoffset: -125px;\n  }\n}\n</style>\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\nimport VaProgressCircleComponent from './VaProgressCircle.vue'\n\nexport const VaProgressCircle = withConfigTransport(VaProgressCircleComponent)\n"]},"metadata":{},"sourceType":"module"}