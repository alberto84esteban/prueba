{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport { ref as e, onMounted as t, onBeforeUnmount as r, watch as a, computed as n, unref as o, defineComponent as i, resolveComponent as l, openBlock as p, createElementBlock as s, normalizeClass as u, createElementVNode as c, renderSlot as d, createCommentVNode as v, normalizeStyle as m, createTextVNode as b, toDisplayString as g, normalizeProps as _, guardReactiveProps as f, createVNode as h, nextTick as y, mergeProps as w, toRefs as k, createBlock as x, createSlots as V, withCtx as C, withModifiers as $, renderList as z } from \"vue\";\nimport { u as I } from \"./useForm.js\";\nimport { V as S, u as B, a as P, b as j } from \"./index60.js\";\nimport R from \"cleave.js\";\nimport { u as E } from \"./useEmitProxy.js\";\nimport { g as F } from \"./color-config.js\";\nimport { s as M } from \"./style-inject.es.js\";\nimport { p as L } from \"./pick.js\";\nimport { s as A, o as H } from \"./VaIcon.js\";\nimport { f as q, e as T } from \"./child-props.js\";\n\nconst N = {\n  creditCard: {\n    creditCard: !0\n  },\n  date: {\n    date: !0,\n    datePattern: [\"d\", \"m\", \"Y\"]\n  },\n  time: {\n    time: !0,\n    timePattern: [\"h\", \"m\"],\n    timeFormat: \"24\"\n  },\n  numeral: {\n    numeral: !0,\n    numeralThousandsGroupStyle: \"thousand\"\n  }\n},\n      O = {\n  mask: {\n    type: [String, Object],\n    default: \"\"\n  },\n  returnRaw: {\n    type: Boolean,\n    default: !0\n  },\n  modelValue: {\n    type: String\n  }\n},\n      useCleave = (o, i, l) => {\n  const p = e(),\n        destroyCleave = () => {\n    p.value && p.value.destroy();\n  },\n        initCleave = () => {\n    var e;\n    (destroyCleave(), o.value) && (p.value = new R(o.value, \"string\" == typeof (e = i.mask) ? N[e] ? { ...N[e]\n    } : {} : { ...e\n    }));\n  };\n\n  t(() => {\n    initCleave();\n  }), r(() => {\n    destroyCleave();\n  }), a(() => [o.value, i.mask], () => {\n    initCleave();\n  });\n  const s = n(() => p.value && i.returnRaw && i.modelValue === p.value.getRawValue() ? p.value.getFormattedValue() : i.modelValue);\n  return {\n    cleave: p,\n    computedValue: s,\n    onInput: e => {\n      const t = e.target.value;\n      (\"string\" === i.mask || Object.keys(i.mask).length) && p.value && (p.value.setRawValue(t), i.returnRaw) ? l(\"update:modelValue\", p.value.getRawValue()) : l(\"update:modelValue\", t);\n    }\n  };\n};\n\nvar W = i({\n  name: \"VaInputWrapper\",\n  components: {\n    VaMessageList: S\n  },\n  props: { ...I,\n    ...B,\n    label: {\n      type: String,\n      default: \"\"\n    },\n    color: {\n      type: String,\n      default: \"primary\"\n    },\n    outline: {\n      type: Boolean,\n      default: !1\n    },\n    bordered: {\n      type: Boolean,\n      default: !1\n    },\n    focused: {\n      type: Boolean,\n      default: !1\n    },\n    error: {\n      type: Boolean,\n      default: !1\n    },\n    success: {\n      type: Boolean,\n      default: !1\n    },\n    requiredMark: {\n      type: Boolean,\n      default: !1\n    }\n  },\n  emits: [\"click\", \"click-prepend\", \"click-append\", \"click-prepend-inner\", \"click-append-inner\", \"click-icon\"],\n\n  setup(e) {\n    const {\n      createModifiersClasses: t\n    } = (r = \"va-input\", {\n      createModifiersClasses: (e, t = []) => n(() => {\n        const a = e();\n        return [r, ...o(t), ...Object.keys(a).filter(e => a[e]).map(e => `${r}--${e}`)];\n      })\n    });\n    var r;\n    const a = n(() => F(e.color));\n    return {\n      wrapperClass: t(() => ({\n        outline: e.outline,\n        bordered: e.bordered,\n        solid: !e.outline && !e.bordered,\n        disabled: e.disabled,\n        readonly: e.readonly,\n        labeled: !!e.label,\n        success: e.success,\n        focused: e.focused,\n        error: e.error\n      })),\n      colorComputed: a,\n      borderColorComputed: n(() => e.focused ? a.value : void 0),\n      messagesColor: n(() => e.error ? \"danger\" : e.success ? \"success\" : \"\"),\n      messagesComputed: n(() => e.error ? e.errorMessages : e.messages),\n      errorLimit: n(() => e.error ? e.errorCount : 99)\n    };\n  }\n\n});\nconst Y = {\n  class: \"va-input-wrapper__input\"\n},\n      G = {\n  class: \"va-input-wrapper__content\"\n},\n      D = {\n  class: \"va-input__content-wrapper\"\n},\n      J = {\n  class: \"va-input__content\"\n},\n      K = {\n  key: 0,\n  class: \"va-input__required-mark\"\n},\n      Q = {\n  key: 1,\n  class: \"va-input__content__input\"\n},\n      U = {\n  class: \"va-input-wrapper__message-list-wrapper\"\n};\nM(\":root{--va-input-color:var(--va-background,#f5f9fb);--va-input-text-color:var(--va-dark,#262824);--va-input-scroll-color:var(--va-divided,#e1e9f8);--va-input-bordered-color:var(--va-divided,#e1e9f8);--va-input-border-width:1px;--va-input-border-radius:4px;--va-input-min-height:36px;--va-input-cursor:text;--va-message-list-color:var(--va-gray);--va-input-success-color:var(--va-success);--va-input-success-background:#f1f7ee;--va-input-error-color:var(--va-danger);--va-input-error-background:#fdefef;--va-input-content-horizontal-padding:12px;--va-input-content-items-gap:6px;--va-input-line-height:20px;--va-input-font-size:1rem;--va-input-font-weight:normal;--va-input-font-style:normal;--va-input-font-stretch:normal;--va-input-letter-spacing:normal;--va-input-placeholder-text-color:#bac2bb;--va-input-disabled-opacity:0.4;--va-input-container-label-max-width:calc(100% - 0.75rem);--va-input-container-label-color:#4ae387;--va-input-container-label-font-size:0.6rem;--va-input-container-label-letter-spacing:0.0375rem;--va-input-container-label-line-height:1.2;--va-input-container-label-font-weight:700;--va-input-container-label-text-transform:uppercase;--va-input-container-label-transform-origin:top left}.va-input{color:var(--va-input-text-color);cursor:var(--va-input-cursor);font-family:var(--va-font-family);position:relative}.va-input--readonly{cursor:default}.va-input--disabled{cursor:default;opacity:.4;pointer-events:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.va-input__container{align-items:center;border:var(--va-input-border-width) solid var(--va-input-color);display:flex;min-height:var(--va-input-min-height);overflow:hidden;padding:0 var(--va-input-content-horizontal-padding);position:relative;width:100%}.va-input__container>*{line-height:0;padding-right:var(--va-input-content-items-gap)}.va-input__container>:last-child{padding-right:0}.va-input-wrapper__input{align-items:center;display:flex}.va-input-wrapper__message-list-wrapper{margin-top:2px}.va-input-wrapper__content{flex-grow:1;position:relative}.va-input-wrapper__append-inner,.va-input-wrapper__prepend-inner,.va-input__append-inner,.va-input__prepend-inner{align-content:center;align-items:center;display:flex;justify-content:center}.va-input__content-wrapper{align-items:center;display:flex;width:100%}.va-input__content-wrapper .va-input__content{position:relative;width:100%}.va-input__content-wrapper .va-input__content input{cursor:inherit}.va-input__content-wrapper .va-input__content__input{background-color:transparent;border-style:none;color:var(--va-input-text-color);font-family:inherit;font-size:var(--va-input-font-size);font-stretch:var(--va-input-font-stretch);font-style:var(--va-input-font-style);font-weight:var(--va-input-font-weight);letter-spacing:var(--va-input-letter-spacing);line-height:var(--va-input-line-height);min-height:var(--va-input-line-height);outline:none;scrollbar-color:var(--va-input-scroll-color) transparent;scrollbar-width:thin;transform:translateY(-1px);width:100%}.va-input__content-wrapper .va-input__content__input::-webkit-scrollbar{height:4px;width:4px}.va-input__content-wrapper .va-input__content__input::-webkit-scrollbar-track{border-radius:10px;box-shadow:none}.va-input__content-wrapper .va-input__content__input::-webkit-scrollbar-thumb{background:var(--va-input-scroll-color);border-radius:2px;opacity:.3}.va-input__content-wrapper .va-input__content__input::-webkit-scrollbar{width:10px}.va-input__content-wrapper .va-input__content__input::-moz-placeholder{color:var(--va-input-placeholder-text-color)}.va-input__content-wrapper .va-input__content__input:-ms-input-placeholder{color:var(--va-input-placeholder-text-color)}.va-input__content-wrapper .va-input__content__input::placeholder{color:var(--va-input-placeholder-text-color)}.va-input__content-wrapper .va-input__content__input:disabled{opacity:var(--va-input-disabled-opacity)}.va-input__icons{align-items:center;display:flex;justify-content:center}.va-input__icons>*{margin-right:calc(var(--va-input-content-items-gap)/4)}.va-input__icons>:last-child{margin-right:0}.va-input__required-mark{color:var(--va-danger);font-size:18px;font-weight:var(--va-input-container-label-font-weight);transform:translateY(-2px)}.va-input textarea{margin:12px 0;resize:vertical}.va-input--labeled .va-input__content-wrapper{align-items:flex-end;height:100%;padding-top:12px}.va-input--labeled .va-input__label{color:var(--va-input-container-label-color);display:flex;font-size:var(--va-input-container-label-font-size);font-weight:var(--va-input-container-label-font-weight);height:12px;left:0;letter-spacing:var(--va-input-container-label-letter-spacing,var(--va-letter-spacing));line-height:var(--va-input-container-label-line-height);max-width:var(--va-input-container-label-max-width);overflow:hidden;padding-top:1px;position:absolute;text-overflow:ellipsis;text-transform:var(--va-input-container-label-text-transform);top:0;transform:translateY(-100%);transform-origin:top left;white-space:nowrap}.va-input--labeled textarea{margin-top:0}.va-input--solid .va-input__container{background:var(--va-input-color);border-color:var(--va-input-color);border-radius:var(--va-input-border-radius)}.va-input--solid.va-input--success .va-input__container{background:var(--va-input-success-background);border-color:var(--va-input-success-color)}.va-input--solid.va-input--error .va-input__container{background:var(--va-input-error-background);border-color:var(--va-input-error-color)}.va-input--outline .va-input__container{border-color:var(--va-input-bordered-color);border-radius:0}.va-input--outline.va-input--success .va-input__container{background:var(--va-input-success-background);border-color:var(--va-input-success-color)}.va-input--outline.va-input--error .va-input__container{background:var(--va-input-error-background);border-color:var(--va-input-error-color)}.va-input--bordered__border{border-bottom:var(--va-input-border-width) solid;border-color:var(--va-input-bordered-color);bottom:0;height:0;position:absolute;width:100%}.va-input--bordered .va-input__container{background:var(--va-input-color);border-color:transparent!important;border-top-left-radius:var(--va-input-border-radius);border-top-right-radius:var(--va-input-border-radius)}.va-input--bordered.va-input--success .va-input__container{background:var(--va-input-success-background)}.va-input--bordered.va-input--success .va-input_bordered__border{border-color:var(--va-input-success-color)}.va-input--bordered.va-input--error .va-input__container{background:var(--va-input-error-background)}.va-input--bordered.va-input--error .va-input_bordered__border{border-color:var(--va-input-error-color)}\"), W.render = function render$2(e, t, r, a, n, o) {\n  const i = l(\"va-message-list\");\n  return p(), s(\"div\", {\n    class: u([\"va-input-wrapper\", e.wrapperClass]),\n    onClick: t[5] || (t[5] = t => e.$emit(\"click\", t))\n  }, [c(\"div\", Y, [e.$slots.prepend ? (p(), s(\"div\", {\n    key: 0,\n    class: \"va-input-wrapper__prepend-inner\",\n    onClick: t[0] || (t[0] = t => e.$emit(\"click-prepend\"))\n  }, [d(e.$slots, \"prepend\")])) : v(\"v-if\", !0), c(\"div\", G, [c(\"div\", {\n    class: \"va-input__container\",\n    ref: \"container\",\n    style: m({\n      borderColor: e.borderColorComputed\n    })\n  }, [e.$slots.prependInner ? (p(), s(\"div\", {\n    key: 0,\n    class: \"va-input__prepend-inner\",\n    onClick: t[1] || (t[1] = t => e.$emit(\"click-prepend-inner\", t))\n  }, [d(e.$slots, \"prependInner\")])) : v(\"v-if\", !0), c(\"div\", D, [c(\"div\", J, [e.label ? (p(), s(\"label\", {\n    key: 0,\n    \"aria-hidden\": \"true\",\n    class: \"va-input__label\",\n    style: m({\n      color: e.colorComputed\n    })\n  }, [b(g(e.label) + \" \", 1), e.requiredMark ? (p(), s(\"span\", K, \" * \")) : v(\"v-if\", !0)], 4)) : v(\"v-if\", !0), e.$slots.content ? (p(), s(\"div\", Q, [d(e.$slots, \"content\")])) : v(\"v-if\", !0), d(e.$slots, \"default\")])]), e.$slots.icon ? (p(), s(\"div\", {\n    key: 1,\n    class: \"va-input__icons\",\n    onClick: t[2] || (t[2] = t => e.$emit(\"click-icon\", t))\n  }, [d(e.$slots, \"icon\")])) : v(\"v-if\", !0), e.$slots.appendInner ? (p(), s(\"div\", {\n    key: 2,\n    class: \"va-input__append-inner\",\n    onClick: t[3] || (t[3] = t => e.$emit(\"click-append-inner\", t))\n  }, [d(e.$slots, \"appendInner\")])) : v(\"v-if\", !0)], 4), e.bordered ? (p(), s(\"div\", {\n    key: 0,\n    class: \"va-input--bordered__border\",\n    style: m({\n      borderColor: e.borderColorComputed\n    })\n  }, null, 4)) : v(\"v-if\", !0)]), e.$slots.append ? (p(), s(\"div\", {\n    key: 1,\n    class: \"va-input-wrapper__append-inner\",\n    onClick: t[4] || (t[4] = t => e.$emit(\"click-append\"))\n  }, [d(e.$slots, \"append\")])) : v(\"v-if\", !0)]), c(\"div\", U, [d(e.$slots, \"messages\", _(f({\n    messages: e.messagesComputed,\n    errorLimit: e.errorLimit,\n    color: e.messagesColor\n  })), () => [h(i, {\n    color: e.messagesColor,\n    \"model-value\": e.messagesComputed,\n    limit: e.errorLimit\n  }, null, 8, [\"color\", \"model-value\", \"limit\"])])])], 2);\n}, W.__file = \"src/components/va-input/components/VaInputWrapper.vue\";\n\nconst X = {\n  clearable: {\n    type: Boolean,\n    default: !1\n  },\n  clearableIcon: {\n    type: String,\n    default: \"highlight_off\"\n  },\n  clearValue: {\n    type: String,\n    default: \"\"\n  }\n},\n      Z = [\"clear\"],\n      useClearable = (e, t, r, a) => {\n  const o = [null, void 0, e.clearValue],\n        i = n(() => e.clearable && !e.disabled && !e.readonly && !o.includes(t.value)),\n        l = n(() => (null == r ? void 0 : r.value) ? e.color || \"primary\" : (null == a ? void 0 : a.value) ? \"danger\" : e.success ? \"success\" : \"gray\"),\n        p = n(() => ({\n    name: e.clearableIcon,\n    color: l.value,\n    size: \"small\"\n  }));\n  return {\n    canBeCleared: i,\n    clearIconColor: l,\n    clearIconProps: p\n  };\n},\n      ee = [\"letter-spacing\", \"line-height\", \"padding-top\", \"padding-bottom\", \"font-family\", \"font-weight\", \"font-size\", \"text-rendering\", \"text-transform\", \"width\", \"text-indent\", \"padding-left\", \"padding-right\", \"border-width\", \"box-sizing\"],\n      getNodeHeightStyles = e => {\n  const t = window.getComputedStyle(e);\n  return {\n    boxSizing: t.getPropertyValue(\"box-sizing\") || t.getPropertyValue(\"-moz-box-sizing\") || t.getPropertyValue(\"-webkit-box-sizing\"),\n    padding: parseFloat(t.getPropertyValue(\"padding-bottom\")) + parseFloat(t.getPropertyValue(\"padding-top\")),\n    border: parseFloat(t.getPropertyValue(\"border-bottom-width\")) + parseFloat(t.getPropertyValue(\"border-top-width\")),\n    styles: ee.map(e => `${e}:${t.getPropertyValue(e)}`).join(\";\") + \";\",\n    lineHeight: parseInt(t.getPropertyValue(\"line-height\"))\n  };\n};\n\nlet te = null;\n\nconst createHiddenTextarea = (e, t) => {\n  te || (te = document.createElement(\"textarea\")), te.setAttribute(\"style\", t + \"\\n  min-height:0 !important;\\n  max-height:none !important;\\n  height:0 !important;\\n  visibility:hidden !important;\\n  overflow:hidden !important;\\n  position:absolute !important;\\n  z-index:-1000 !important;\\n  top:0 !important;\\n  right:0 !important';\\n\"), te.value = e.value || e.placeholder || \"\";\n  const r = e.getAttribute(\"wrap\");\n  return null !== r ? te.setAttribute(\"wrap\", r) : te.removeAttribute(\"wrap\"), te;\n},\n      positiveNumberValidator = e => {\n  if (e > 0 && (0 | e) === e) return !0;\n  throw new Error(`\\`minRows|maxRows\\` must be a positive integer greater than 0, but ${e} is provided`);\n},\n      {\n  createEmits: re,\n  createListeners: ae\n} = E([\"input\", \"change\", \"click\", \"update:modelValue\"]);\n\nvar ne = i({\n  name: \"VaTextarea\",\n  props: { ...I,\n    modelValue: {\n      type: [String, Number],\n      default: \"\"\n    },\n    placeholder: {\n      type: String\n    },\n    autosize: {\n      type: Boolean,\n      default: !1\n    },\n    minRows: {\n      type: Number,\n      default: 1,\n      validator: positiveNumberValidator\n    },\n    maxRows: {\n      type: Number,\n      validator: positiveNumberValidator\n    }\n  },\n  emits: re(),\n\n  setup(r, {\n    emit: o\n  }) {\n    const i = e(),\n          l = e(-1),\n          p = e(-1),\n          {\n      calculateRowHeight: s,\n      calculateHeight: u\n    } = (e => ({\n      calculateRowHeight: () => e.value ? getNodeHeightStyles(e.value).lineHeight : 0,\n      calculateHeight: () => {\n        if (!e.value) return 0;\n        const {\n          boxSizing: t,\n          padding: r,\n          border: a,\n          styles: n\n        } = getNodeHeightStyles(e.value),\n              o = createHiddenTextarea(e.value, n);\n        document.body.appendChild(o);\n        let i = o.scrollHeight;\n        return \"border-box\" === t ? i += a : \"content-box\" === t && (i -= r), document.body.removeChild(o), i;\n      }\n    }))(i),\n          c = n(() => (r.autosize || r.maxRows || 1 !== r.minRows) && i.value),\n          updateHeight = () => {\n      c.value && (p.value = u());\n    };\n\n    t(() => {\n      c.value && (l.value = s()), updateHeight();\n    }), a(() => r.modelValue, () => {\n      y(updateHeight);\n    });\n    const d = n(() => ({\n      minHeight: l.value * r.minRows + \"px\",\n      maxHeight: r.maxRows && l.value * r.maxRows + \"px\",\n      height: p.value + \"px\",\n      resize: c.value && \"none\"\n    })),\n          v = n(() => ({ ...L(r, [\"disabled\", \"readonly\", \"placeholder\"])\n    }));\n    return {\n      textarea: i,\n      computedStyle: d,\n      listeners: ae(o),\n      computedProps: v\n    };\n  },\n\n  methods: {\n    focus() {\n      var e;\n      null === (e = this.textarea) || void 0 === e || e.focus();\n    },\n\n    blur() {\n      var e;\n      null === (e = this.textarea) || void 0 === e || e.blur();\n    }\n\n  }\n});\nconst oe = [\"value\"];\nM(\".textarea{border:0;font-family:var(--va-font-family);padding:0}\"), ne.render = function render$1(e, t, r, a, n, o) {\n  return p(), s(\"textarea\", w({\n    ref: \"textarea\",\n    class: \"textarea\"\n  }, { ...e.computedProps,\n    ...e.listeners\n  }, {\n    value: e.modelValue,\n    style: e.computedStyle\n  }), null, 16, oe);\n}, ne.__file = \"src/components/va-input/components/VaTextarea/VaTextarea.vue\";\nconst ie = T(ne),\n      {\n  createEmits: le,\n  createListeners: pe\n} = E([\"change\", \"keyup\", \"keypress\", \"keydown\", \"focus\", \"blur\"]),\n      {\n  createEmits: se,\n  createListeners: ue\n} = E([\"click\", \"click-prepend\", \"click-append\", \"click-prepend-inner\", \"click-append-inner\", \"click-icon\"]);\nvar ce = i({\n  name: \"VaInput\",\n  components: {\n    VaInputWrapper: W,\n    VaTextarea: ne,\n    VaIcon: A\n  },\n  props: { ...I,\n    ...B,\n    ...X,\n    ...O,\n    ...ie,\n    placeholder: {\n      type: String,\n      default: \"\"\n    },\n    tabindex: {\n      type: Number,\n      default: 0\n    },\n    modelValue: {\n      type: [String, Number],\n      default: \"\"\n    },\n    label: {\n      type: String,\n      default: \"\"\n    },\n    type: {\n      type: String,\n      default: \"text\"\n    },\n    loading: {\n      type: Boolean,\n      default: !1\n    },\n    color: {\n      type: String,\n      default: \"primary\"\n    },\n    outline: {\n      type: Boolean,\n      default: !1\n    },\n    bordered: {\n      type: Boolean,\n      default: !1\n    },\n    requiredMark: {\n      type: Boolean,\n      default: !1\n    }\n  },\n  emits: [\"update:modelValue\", ...P, ...Z, ...le(), ...se()],\n  inheritAttrs: !1,\n\n  setup(t, {\n    emit: r,\n    attrs: a,\n    slots: o\n  }) {\n    const i = e(),\n          reset = () => {\n      r(\"update:modelValue\", t.clearValue), r(\"clear\");\n    },\n          l = n(() => {\n      const e = [\"icon\"];\n      return Object.keys(o).filter(t => !e.includes(t));\n    }),\n          {\n      isFocused: p,\n      listeners: s,\n      computedError: u,\n      computedErrorMessages: c\n    } = j(t, r, reset, () => {\n      var e;\n      null === (e = i.value) || void 0 === e || e.focus();\n    }),\n          {\n      modelValue: d\n    } = k(t),\n          {\n      canBeCleared: v,\n      clearIconProps: m\n    } = useClearable(t, d, p, u),\n          b = n(() => \"textarea\" === t.type ? void 0 : i.value),\n          {\n      computedValue: g,\n      onInput: _\n    } = useCleave(b, t, r),\n          f = pe(r),\n          h = { ...f,\n      onFocus: e => {\n        f.onFocus(e), s.onFocus();\n      },\n      onBlur: e => {\n        f.onBlur(e), s.onBlur();\n      },\n      onInput: _\n    },\n          y = n(() => ({\n      ariaLabel: t.label,\n      ...H(a, [\"class\", \"style\"])\n    })),\n          w = n(() => ({ ...y.value,\n      ...L(t, [\"type\", \"tabindex\", \"disabled\", \"readonly\", \"placeholder\"])\n    }));\n\n    return {\n      input: i,\n      inputEvents: h,\n      computedChildAttributes: y,\n      computedInputAttributes: w,\n      textareaProps: q(t, ie),\n      computedValue: g,\n      computedError: u,\n      computedErrorMessages: c,\n      isFocused: p,\n      canBeCleared: v,\n      clearIconProps: m,\n      fieldListeners: ue(r),\n      reset: reset,\n      filterSlots: l\n    };\n  },\n\n  methods: {\n    focus() {\n      var e;\n      null === (e = this.input) || void 0 === e || e.focus();\n    },\n\n    blur() {\n      var e;\n      null === (e = this.input) || void 0 === e || e.blur();\n    }\n\n  }\n});\nconst de = [\"value\"];\nce.render = function render(e, t, r, a, n, o) {\n  const i = l(\"va-icon\"),\n        u = l(\"VaTextarea\"),\n        c = l(\"VaInputWrapper\");\n  return p(), x(c, w(e.fieldListeners, {\n    class: e.$attrs.class,\n    style: e.$attrs.style,\n    color: e.color,\n    readonly: e.readonly,\n    disabled: e.disabled,\n    success: e.success,\n    messages: e.messages,\n    error: e.computedError,\n    \"error-messages\": e.computedErrorMessages,\n    \"error-count\": e.errorCount,\n    label: e.label,\n    bordered: e.bordered,\n    outline: e.outline,\n    focused: e.isFocused,\n    requiredMark: e.requiredMark,\n    onClick: t[1] || (t[1] = t => e.input && e.input.focus())\n  }), V({\n    icon: C(r => [e.success ? (p(), x(i, {\n      key: 0,\n      color: \"success\",\n      name: \"check_circle\",\n      size: \"small\"\n    })) : v(\"v-if\", !0), e.computedError ? (p(), x(i, {\n      key: 1,\n      color: \"danger\",\n      name: \"warning\",\n      size: \"small\"\n    })) : v(\"v-if\", !0), e.canBeCleared ? (p(), x(i, w({\n      key: 2\n    }, e.clearIconProps, {\n      onClick: t[0] || (t[0] = $(t => e.reset(), [\"stop\"]))\n    }), null, 16)) : v(\"v-if\", !0), e.loading ? (p(), x(i, {\n      key: 3,\n      color: e.color,\n      size: \"small\",\n      name: \"loop\",\n      spin: \"counter-clockwise\"\n    }, null, 8, [\"color\"])) : v(\"v-if\", !0), d(e.$slots, \"icon\", _(f(r)))]),\n    default: C(() => [\"textarea\" !== e.type || e.$slots.content ? e.$slots.content ? v(\"v-if\", !0) : (p(), s(\"input\", w({\n      key: 1,\n      ref: \"input\",\n      class: \"va-input__content__input\"\n    }, { ...e.computedInputAttributes,\n      ...e.inputEvents\n    }, {\n      value: e.computedValue\n    }), null, 16, de)) : (p(), x(u, w({\n      key: 0,\n      ref: \"input\"\n    }, { ...e.computedChildAttributes,\n      ...e.textareaProps,\n      ...e.inputEvents\n    }, {\n      class: \"va-input__content__input\"\n    }), null, 16))]),\n    _: 2\n  }, [z(e.filterSlots, t => ({\n    name: t,\n    fn: C(r => [d(e.$slots, t, _(f(r)))])\n  }))]), 1040, [\"class\", \"style\", \"color\", \"readonly\", \"disabled\", \"success\", \"messages\", \"error\", \"error-messages\", \"error-count\", \"label\", \"bordered\", \"outline\", \"focused\", \"requiredMark\"]);\n}, ce.__file = \"src/components/va-input/VaInput.vue\";\nexport { Z as a, useClearable as b, ce as s, X as u };","map":{"version":3,"mappings":"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","names":["DEFAULT_MASK_TOKENS","creditCard","date","datePattern","time","timePattern","timeFormat","numeral","numeralThousandsGroupStyle","useCleaveProps","mask","type","String","Object","default","returnRaw","Boolean","modelValue","useCleave","element","props","emit","cleave","ref","destroyCleave","value","destroy","initCleave","Cleave","onMounted","onBeforeUnmount","watch","computedValue","computed","getRawValue","getFormattedValue","onInput","event","target","keys","length","setRawValue","defineComponent","name","components","VaMessageList","useFormProps","useValidationProps","label","color","outline","bordered","focused","error","success","requiredMark","emits","setup","createModifiersClasses","baseClass","modifiersCb","classes","modifiers","unref","filter","modifierName","map","colorComputed","getColor","wrapperClass","solid","disabled","readonly","labeled","borderColorComputed","undefined","messagesColor","messagesComputed","errorMessages","messages","errorLimit","errorCount","class","G","D","J","K","key","Q","U","M","_createElementBlock","_ctx","onClick","$event","_createElementVNode","prepend","p","_renderSlot","_hoisted_1","style","prependInner","_hoisted_5","_hoisted_4","content","_hoisted_6","_hoisted_3","icon","appendInner","_hoisted_2","append","_createVNode","limit","_hoisted_7","useClearableProps","clearable","clearableIcon","clearValue","useClearableEmits","useClearable","inputValue","isFocused","hasError","clearedValues","canBeCleared","includes","clearIconColor","clearIconProps","size","SIZING_STYLE","getNodeHeightStyles","node","window","getComputedStyle","boxSizing","getPropertyValue","padding","parseFloat","border","styles","join","lineHeight","parseInt","textarea","createHiddenTextarea","original","document","createElement","setAttribute","placeholder","wrap","getAttribute","removeAttribute","positiveNumberValidator","val","Error","createEmits","createListeners","useEmitProxy","Number","autosize","minRows","validator","maxRows","rowHeight","height","calculateRowHeight","calculateHeight","hiddenTextarea","body","appendChild","scrollHeight","removeChild","isResizable","updateHeight","nextTick","computedStyle","minHeight","maxHeight","resize","computedProps","pick","listeners","methods","focus","this","blur","_mergeProps","VaTextareaProps","extractComponentProps","VaTextarea","createInputEmits","createInputListeners","createFieldEmits","createFieldListeners","VaInputWrapper","VaIcon","tabindex","loading","useValidationEmits","inheritAttrs","attrs","slots","input","reset","filterSlots","iconSlot","slot","validationListeners","computedError","computedErrorMessages","useValidation","toRefs","computedCleaveTarget","inputListeners","inputEvents","onFocus","e","onBlur","computedChildAttributes","ariaLabel","omit","computedInputAttributes","textareaProps","filterComponentProps","fieldListeners","_createBlock","v","spin","slotScope","_"],"sources":["../../src/components/va-input/hooks/useCleave.ts","../../src/components/va-input/components/VaInputWrapper.vue","../../src/composables/useBem.ts","../../src/components/va-input/components/VaInputWrapper.vue?vue&type=template&id=6c3205d6&lang.js","../../src/composables/useClearable.ts","../../src/components/va-input/components/VaTextarea/useTextareaRowHeight.ts","../../src/components/va-input/components/VaTextarea/VaTextarea.vue","../../src/components/va-input/components/VaTextarea/VaTextarea.vue?vue&type=template&id=150a9286&lang.js","../../src/components/va-input/VaInput.vue","../../src/components/va-input/VaInput.vue?vue&type=template&id=db73a230&lang.js"],"sourcesContent":["import Cleave from 'cleave.js'\nimport { CleaveOptions } from 'cleave.js/options'\nimport { computed, onBeforeUnmount, onMounted, ref, Ref, watch } from 'vue'\n\nconst DEFAULT_MASK_TOKENS: Record<string, Record<string, unknown>> = {\n  creditCard: {\n    creditCard: true,\n  },\n  date: {\n    date: true,\n    datePattern: ['d', 'm', 'Y'],\n  },\n  time: {\n    time: true,\n    timePattern: ['h', 'm'],\n    timeFormat: '24',\n  },\n  numeral: {\n    numeral: true,\n    numeralThousandsGroupStyle: 'thousand',\n  },\n}\n\nexport const useCleaveProps = {\n  mask: { type: [String, Object], default: '' },\n  returnRaw: { type: Boolean, default: true },\n  modelValue: { type: String },\n}\n\ntype Props = {\n  mask: string | Record<string, string>,\n  returnRaw: boolean,\n  modelValue: string | number,\n}\n\nexport const useCleave = (\n  element: Ref<HTMLInputElement | undefined>,\n  props: Props,\n  emit: (event: 'update:modelValue' | any, ...args: any[]) => any,\n) => {\n  const cleave = ref<Cleave>()\n\n  const getMask = (mask: CleaveOptions | string) => {\n    if (typeof mask === 'string') {\n      return DEFAULT_MASK_TOKENS[mask] ? { ...DEFAULT_MASK_TOKENS[mask] } : {}\n    }\n    return { ...mask }\n  }\n\n  const destroyCleave = () => {\n    if (cleave.value) { cleave.value.destroy() }\n  }\n\n  const initCleave = () => {\n    destroyCleave()\n\n    if (!element.value) { return }\n\n    cleave.value = new Cleave(element.value, getMask(props.mask))\n  }\n\n  onMounted(() => { initCleave() })\n  onBeforeUnmount(() => { destroyCleave() })\n\n  watch(() => [element.value, props.mask], () => { initCleave() })\n\n  const computedValue = computed<string | number>(() => {\n    if (cleave.value) {\n      if (props.returnRaw && props.modelValue === cleave.value.getRawValue()) {\n        return cleave.value.getFormattedValue()\n      }\n    }\n\n    return props.modelValue\n  })\n\n  const onInput = (event: Event) => {\n    const value = (event.target as HTMLInputElement).value\n\n    if (props.mask !== 'string' && !Object.keys(props.mask).length) {\n      emit('update:modelValue', value)\n      return\n    }\n\n    if (cleave.value) {\n      cleave.value.setRawValue(value)\n      if (props.returnRaw) {\n        emit('update:modelValue', cleave.value.getRawValue())\n        return\n      }\n    }\n\n    emit('update:modelValue', value)\n  }\n\n  return {\n    cleave,\n    computedValue,\n    onInput,\n  }\n}\n","<template>\n  <div\n    class=\"va-input-wrapper\"\n    :class=\"wrapperClass\"\n    @click=\"$emit('click', $event)\"\n  >\n    <div class=\"va-input-wrapper__input\">\n      <div\n        v-if=\"$slots.prepend\"\n        class=\"va-input-wrapper__prepend-inner\"\n        @click=\"$emit('click-prepend')\"\n      >\n        <slot name=\"prepend\" />\n      </div>\n\n      <div class=\"va-input-wrapper__content\">\n        <div\n          class=\"va-input__container\"\n          ref=\"container\"\n          :style=\"{ borderColor: borderColorComputed }\"\n        >\n          <div\n            v-if=\"$slots.prependInner\"\n            class=\"va-input__prepend-inner\"\n            @click=\"$emit('click-prepend-inner', $event)\"\n          >\n            <slot name=\"prependInner\" />\n          </div>\n\n          <div class=\"va-input__content-wrapper\">\n            <div class=\"va-input__content\">\n              <label\n                v-if=\"label\"\n                aria-hidden=\"true\"\n                class=\"va-input__label\"\n                :style=\"{ color: colorComputed }\"\n              >\n                {{ label }}\n                <span\n                  v-if=\"requiredMark\"\n                  class=\"va-input__required-mark\"\n                >\n                  *\n                </span>\n              </label>\n\n              <div v-if=\"$slots.content\" class=\"va-input__content__input\">\n                <slot name=\"content\" />\n              </div>\n\n              <slot />\n            </div>\n          </div>\n\n          <div\n            v-if=\"$slots.icon\"\n            class=\"va-input__icons\"\n            @click=\"$emit('click-icon', $event)\"\n          >\n            <slot name=\"icon\" />\n          </div>\n\n          <div\n            v-if=\"$slots.appendInner\"\n            class=\"va-input__append-inner\"\n            @click=\"$emit('click-append-inner', $event)\"\n          >\n            <slot name=\"appendInner\" />\n          </div>\n        </div>\n\n        <div\n          v-if=\"bordered\"\n          class=\"va-input--bordered__border\"\n          :style=\"{ borderColor: borderColorComputed }\"\n        />\n      </div>\n\n      <div\n        v-if=\"$slots.append\"\n        class=\"va-input-wrapper__append-inner\"\n        @click=\"$emit('click-append')\"\n      >\n        <slot name=\"append\" />\n      </div>\n    </div>\n\n    <div class=\"va-input-wrapper__message-list-wrapper\">\n      <slot name=\"messages\" v-bind=\"{ messages: messagesComputed, errorLimit, color: messagesColor }\">\n        <va-message-list\n          :color=\"messagesColor\"\n          :model-value=\"messagesComputed\"\n          :limit=\"errorLimit\"\n        />\n      </slot>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent } from 'vue'\nimport { useBem } from '../../../composables/useBem'\nimport { useFormProps } from '../../../composables/useForm'\nimport { useValidationProps } from '../../../composables/useValidation'\nimport { getColor } from '../../../services/color-config/color-config'\nimport VaMessageList from './VaMessageList'\n\nexport default defineComponent({\n  name: 'VaInputWrapper',\n\n  components: { VaMessageList },\n\n  props: {\n    ...useFormProps,\n    ...useValidationProps,\n\n    label: { type: String, default: '' },\n    color: { type: String, default: 'primary' },\n    outline: { type: Boolean, default: false },\n    bordered: { type: Boolean, default: false },\n    focused: { type: Boolean, default: false },\n    error: { type: Boolean, default: false },\n    success: { type: Boolean, default: false },\n    requiredMark: { type: Boolean, default: false },\n  },\n\n  emits: [\n    'click',\n    'click-prepend',\n    'click-append',\n    'click-prepend-inner',\n    'click-append-inner',\n    'click-icon',\n  ],\n\n  setup (props) {\n    const { createModifiersClasses } = useBem('va-input')\n\n    const colorComputed = computed(() => getColor(props.color))\n\n    return {\n      wrapperClass: createModifiersClasses(() => ({\n        outline: props.outline,\n        bordered: props.bordered,\n        solid: !props.outline && !props.bordered,\n        disabled: props.disabled,\n        readonly: props.readonly,\n        labeled: !!props.label,\n        success: props.success,\n        focused: props.focused,\n        error: props.error,\n      })),\n\n      colorComputed,\n      borderColorComputed: computed(() => props.focused ? colorComputed.value : undefined),\n\n      messagesColor: computed(() => {\n        if (props.error) { return 'danger' }\n        if (props.success) { return 'success' }\n\n        return ''\n      }),\n      messagesComputed: computed(() => props.error ? props.errorMessages : props.messages),\n      errorLimit: computed(() => props.error ? props.errorCount : 99),\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import '../../../styles/resources/index.scss';\n@import '../variables';\n\n.va-input {\n  position: relative;\n  color: var(--va-input-text-color);\n  cursor: var(--va-input-cursor);\n  font-family: var(--va-font-family);\n\n  &--readonly {\n    cursor: default;\n  }\n\n  &--disabled {\n    @include va-disabled;\n  }\n\n  &__container {\n    display: flex;\n    position: relative;\n    align-items: center;\n    width: 100%;\n    min-height: var(--va-input-min-height);\n    border-color: var(--va-input-color);\n    border-style: solid;\n    border-width: var(--va-input-border-width);\n    overflow: hidden;\n    padding: 0 var(--va-input-content-horizontal-padding);\n\n    /* Creates gap between prepend, content, validation icons, append */\n    & > * {\n      padding-right: var(--va-input-content-items-gap);\n      line-height: 0;\n\n      &:last-child {\n        padding-right: 0;\n      }\n    }\n  }\n\n  &-wrapper__input {\n    display: flex;\n    align-items: center;\n  }\n\n  &-wrapper__message-list-wrapper {\n    margin-top: 2px;\n  }\n\n  &-wrapper__content {\n    position: relative;\n    flex-grow: 1;\n  }\n\n  &-wrapper__prepend-inner,\n  &-wrapper__append-inner,\n  &__prepend-inner,\n  &__append-inner {\n    display: flex;\n    justify-content: center;\n    align-content: center;\n    align-items: center;\n  }\n\n  &__content-wrapper {\n    display: flex;\n    align-items: center;\n    width: 100%;\n\n    .va-input__content {\n      width: 100%;\n      position: relative;\n\n      input {\n        cursor: inherit;\n      }\n\n      &__input {\n        @include va-scroll(var(--va-input-scroll-color));\n\n        width: 100%;\n        // Use line-height as min-height for empty content slot\n        min-height: var(--va-input-line-height);\n        color: var(--va-input-text-color);\n        background-color: transparent;\n        border-style: none;\n        outline: none;\n        line-height: var(--va-input-line-height);\n        font-size: var(--va-input-font-size);\n        font-family: inherit;\n        font-weight: var(--va-input-font-weight);\n        font-style: var(--va-input-font-style);\n        font-stretch: var(--va-input-font-stretch);\n        letter-spacing: var(--va-input-letter-spacing);\n        transform: translateY(-1px);\n\n        &::-webkit-scrollbar {\n          width: 10px;\n        }\n\n        &::placeholder {\n          color: var(--va-input-placeholder-text-color);\n        }\n\n        &:disabled {\n          opacity: var(--va-input-disabled-opacity);\n        }\n      }\n    }\n  }\n\n  &__icons {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    & > * {\n      margin-right: calc(var(--va-input-content-items-gap) / 4);\n\n      &:last-child {\n        margin-right: 0;\n      }\n    }\n  }\n\n  &__required-mark {\n    transform: translate(0, -2px);\n    color: var(--va-danger);\n    font-size: 18px;\n    font-weight: var(--va-input-container-label-font-weight);\n  }\n\n  textarea {\n    margin: 12px 0;\n    resize: vertical;\n  }\n\n  &--labeled {\n    .va-input__content-wrapper {\n      padding-top: 12px;\n      height: 100%;\n      align-items: flex-end;\n    }\n\n    .va-input__label {\n      @include va-ellipsis();\n\n      height: 12px;\n      transform: translateY(-100%);\n      position: absolute;\n      left: 0;\n      top: 0;\n      display: flex;\n      padding-top: 1px;\n      max-width: var(--va-input-container-label-max-width);\n      color: var(--va-input-container-label-color);\n      font-size: var(--va-input-container-label-font-size);\n      letter-spacing: var(--va-input-container-label-letter-spacing, var(--va-letter-spacing));\n      line-height: var(--va-input-container-label-line-height);\n      font-weight: var(--va-input-container-label-font-weight);\n      text-transform: var(--va-input-container-label-text-transform);\n      transform-origin: top left;\n    }\n\n    textarea {\n      margin-top: 0;\n    }\n  }\n\n  /* We have 3 styles and two states for each style separately */\n  &--solid {\n    .va-input__container {\n      background: var(--va-input-color);\n      border-color: var(--va-input-color);\n      border-radius: var(--va-input-border-radius);\n    }\n\n    &.va-input--success {\n      .va-input__container {\n        background: var(--va-input-success-background);\n        border-color: var(--va-input-success-color);\n      }\n    }\n\n    &.va-input--error {\n      .va-input__container {\n        background: var(--va-input-error-background);\n        border-color: var(--va-input-error-color);\n      }\n    }\n  }\n\n  &--outline {\n    .va-input__container {\n      border-radius: 0;\n      border-color: var(--va-input-bordered-color);\n    }\n\n    &.va-input--success {\n      .va-input__container {\n        background: var(--va-input-success-background);\n        border-color: var(--va-input-success-color);\n      }\n    }\n\n    &.va-input--error {\n      .va-input__container {\n        background: var(--va-input-error-background);\n        border-color: var(--va-input-error-color);\n      }\n    }\n  }\n\n  &--bordered {\n    /*\n      We can not just set border-bottom, because we also have border on the other sides.\n      We also can not use after or before, because we need to set border-color according to\n      color prop\n    */\n    &__border {\n      border-color: var(--va-input-bordered-color);\n      position: absolute;\n      height: 0;\n      border-bottom-width: var(--va-input-border-width);\n      border-bottom-style: solid;\n      width: 100%;\n      bottom: 0;\n    }\n\n    .va-input__container {\n      background: var(--va-input-color);\n      border-top-left-radius: var(--va-input-border-radius);\n      border-top-right-radius: var(--va-input-border-radius);\n      border-color: transparent !important;\n    }\n\n    &.va-input--success {\n      .va-input__container {\n        background: var(--va-input-success-background);\n      }\n\n      .va-input_bordered__border {\n        border-color: var(--va-input-success-color);\n      }\n    }\n\n    &.va-input--error {\n      .va-input__container {\n        background: var(--va-input-error-background);\n      }\n\n      .va-input_bordered__border {\n        border-color: var(--va-input-error-color);\n      }\n    }\n  }\n}\n</style>\n","import { computed, Ref, unref } from 'vue'\n\nexport const useBem = (baseClass: string) => {\n  const createModifiersClasses = (modifiersCb: () => Record<string, boolean>, classes: string[] | Ref<string[]> = []) => {\n    return computed(() => {\n      const modifiers = modifiersCb()\n      return [\n        baseClass,\n        ...unref(classes),\n        ...Object\n          .keys(modifiers)\n          .filter((modifierName) => modifiers[modifierName])\n          .map((modifierName) => `${baseClass}--${modifierName}`),\n      ]\n    })\n  }\n\n  return {\n    createModifiersClasses,\n  }\n}\n","<template>\n  <div\n    class=\"va-input-wrapper\"\n    :class=\"wrapperClass\"\n    @click=\"$emit('click', $event)\"\n  >\n    <div class=\"va-input-wrapper__input\">\n      <div\n        v-if=\"$slots.prepend\"\n        class=\"va-input-wrapper__prepend-inner\"\n        @click=\"$emit('click-prepend')\"\n      >\n        <slot name=\"prepend\" />\n      </div>\n\n      <div class=\"va-input-wrapper__content\">\n        <div\n          class=\"va-input__container\"\n          ref=\"container\"\n          :style=\"{ borderColor: borderColorComputed }\"\n        >\n          <div\n            v-if=\"$slots.prependInner\"\n            class=\"va-input__prepend-inner\"\n            @click=\"$emit('click-prepend-inner', $event)\"\n          >\n            <slot name=\"prependInner\" />\n          </div>\n\n          <div class=\"va-input__content-wrapper\">\n            <div class=\"va-input__content\">\n              <label\n                v-if=\"label\"\n                aria-hidden=\"true\"\n                class=\"va-input__label\"\n                :style=\"{ color: colorComputed }\"\n              >\n                {{ label }}\n                <span\n                  v-if=\"requiredMark\"\n                  class=\"va-input__required-mark\"\n                >\n                  *\n                </span>\n              </label>\n\n              <div v-if=\"$slots.content\" class=\"va-input__content__input\">\n                <slot name=\"content\" />\n              </div>\n\n              <slot />\n            </div>\n          </div>\n\n          <div\n            v-if=\"$slots.icon\"\n            class=\"va-input__icons\"\n            @click=\"$emit('click-icon', $event)\"\n          >\n            <slot name=\"icon\" />\n          </div>\n\n          <div\n            v-if=\"$slots.appendInner\"\n            class=\"va-input__append-inner\"\n            @click=\"$emit('click-append-inner', $event)\"\n          >\n            <slot name=\"appendInner\" />\n          </div>\n        </div>\n\n        <div\n          v-if=\"bordered\"\n          class=\"va-input--bordered__border\"\n          :style=\"{ borderColor: borderColorComputed }\"\n        />\n      </div>\n\n      <div\n        v-if=\"$slots.append\"\n        class=\"va-input-wrapper__append-inner\"\n        @click=\"$emit('click-append')\"\n      >\n        <slot name=\"append\" />\n      </div>\n    </div>\n\n    <div class=\"va-input-wrapper__message-list-wrapper\">\n      <slot name=\"messages\" v-bind=\"{ messages: messagesComputed, errorLimit, color: messagesColor }\">\n        <va-message-list\n          :color=\"messagesColor\"\n          :model-value=\"messagesComputed\"\n          :limit=\"errorLimit\"\n        />\n      </slot>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent } from 'vue'\nimport { useBem } from '../../../composables/useBem'\nimport { useFormProps } from '../../../composables/useForm'\nimport { useValidationProps } from '../../../composables/useValidation'\nimport { getColor } from '../../../services/color-config/color-config'\nimport VaMessageList from './VaMessageList'\n\nexport default defineComponent({\n  name: 'VaInputWrapper',\n\n  components: { VaMessageList },\n\n  props: {\n    ...useFormProps,\n    ...useValidationProps,\n\n    label: { type: String, default: '' },\n    color: { type: String, default: 'primary' },\n    outline: { type: Boolean, default: false },\n    bordered: { type: Boolean, default: false },\n    focused: { type: Boolean, default: false },\n    error: { type: Boolean, default: false },\n    success: { type: Boolean, default: false },\n    requiredMark: { type: Boolean, default: false },\n  },\n\n  emits: [\n    'click',\n    'click-prepend',\n    'click-append',\n    'click-prepend-inner',\n    'click-append-inner',\n    'click-icon',\n  ],\n\n  setup (props) {\n    const { createModifiersClasses } = useBem('va-input')\n\n    const colorComputed = computed(() => getColor(props.color))\n\n    return {\n      wrapperClass: createModifiersClasses(() => ({\n        outline: props.outline,\n        bordered: props.bordered,\n        solid: !props.outline && !props.bordered,\n        disabled: props.disabled,\n        readonly: props.readonly,\n        labeled: !!props.label,\n        success: props.success,\n        focused: props.focused,\n        error: props.error,\n      })),\n\n      colorComputed,\n      borderColorComputed: computed(() => props.focused ? colorComputed.value : undefined),\n\n      messagesColor: computed(() => {\n        if (props.error) { return 'danger' }\n        if (props.success) { return 'success' }\n\n        return ''\n      }),\n      messagesComputed: computed(() => props.error ? props.errorMessages : props.messages),\n      errorLimit: computed(() => props.error ? props.errorCount : 99),\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import '../../../styles/resources/index.scss';\n@import '../variables';\n\n.va-input {\n  position: relative;\n  color: var(--va-input-text-color);\n  cursor: var(--va-input-cursor);\n  font-family: var(--va-font-family);\n\n  &--readonly {\n    cursor: default;\n  }\n\n  &--disabled {\n    @include va-disabled;\n  }\n\n  &__container {\n    display: flex;\n    position: relative;\n    align-items: center;\n    width: 100%;\n    min-height: var(--va-input-min-height);\n    border-color: var(--va-input-color);\n    border-style: solid;\n    border-width: var(--va-input-border-width);\n    overflow: hidden;\n    padding: 0 var(--va-input-content-horizontal-padding);\n\n    /* Creates gap between prepend, content, validation icons, append */\n    & > * {\n      padding-right: var(--va-input-content-items-gap);\n      line-height: 0;\n\n      &:last-child {\n        padding-right: 0;\n      }\n    }\n  }\n\n  &-wrapper__input {\n    display: flex;\n    align-items: center;\n  }\n\n  &-wrapper__message-list-wrapper {\n    margin-top: 2px;\n  }\n\n  &-wrapper__content {\n    position: relative;\n    flex-grow: 1;\n  }\n\n  &-wrapper__prepend-inner,\n  &-wrapper__append-inner,\n  &__prepend-inner,\n  &__append-inner {\n    display: flex;\n    justify-content: center;\n    align-content: center;\n    align-items: center;\n  }\n\n  &__content-wrapper {\n    display: flex;\n    align-items: center;\n    width: 100%;\n\n    .va-input__content {\n      width: 100%;\n      position: relative;\n\n      input {\n        cursor: inherit;\n      }\n\n      &__input {\n        @include va-scroll(var(--va-input-scroll-color));\n\n        width: 100%;\n        // Use line-height as min-height for empty content slot\n        min-height: var(--va-input-line-height);\n        color: var(--va-input-text-color);\n        background-color: transparent;\n        border-style: none;\n        outline: none;\n        line-height: var(--va-input-line-height);\n        font-size: var(--va-input-font-size);\n        font-family: inherit;\n        font-weight: var(--va-input-font-weight);\n        font-style: var(--va-input-font-style);\n        font-stretch: var(--va-input-font-stretch);\n        letter-spacing: var(--va-input-letter-spacing);\n        transform: translateY(-1px);\n\n        &::-webkit-scrollbar {\n          width: 10px;\n        }\n\n        &::placeholder {\n          color: var(--va-input-placeholder-text-color);\n        }\n\n        &:disabled {\n          opacity: var(--va-input-disabled-opacity);\n        }\n      }\n    }\n  }\n\n  &__icons {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    & > * {\n      margin-right: calc(var(--va-input-content-items-gap) / 4);\n\n      &:last-child {\n        margin-right: 0;\n      }\n    }\n  }\n\n  &__required-mark {\n    transform: translate(0, -2px);\n    color: var(--va-danger);\n    font-size: 18px;\n    font-weight: var(--va-input-container-label-font-weight);\n  }\n\n  textarea {\n    margin: 12px 0;\n    resize: vertical;\n  }\n\n  &--labeled {\n    .va-input__content-wrapper {\n      padding-top: 12px;\n      height: 100%;\n      align-items: flex-end;\n    }\n\n    .va-input__label {\n      @include va-ellipsis();\n\n      height: 12px;\n      transform: translateY(-100%);\n      position: absolute;\n      left: 0;\n      top: 0;\n      display: flex;\n      padding-top: 1px;\n      max-width: var(--va-input-container-label-max-width);\n      color: var(--va-input-container-label-color);\n      font-size: var(--va-input-container-label-font-size);\n      letter-spacing: var(--va-input-container-label-letter-spacing, var(--va-letter-spacing));\n      line-height: var(--va-input-container-label-line-height);\n      font-weight: var(--va-input-container-label-font-weight);\n      text-transform: var(--va-input-container-label-text-transform);\n      transform-origin: top left;\n    }\n\n    textarea {\n      margin-top: 0;\n    }\n  }\n\n  /* We have 3 styles and two states for each style separately */\n  &--solid {\n    .va-input__container {\n      background: var(--va-input-color);\n      border-color: var(--va-input-color);\n      border-radius: var(--va-input-border-radius);\n    }\n\n    &.va-input--success {\n      .va-input__container {\n        background: var(--va-input-success-background);\n        border-color: var(--va-input-success-color);\n      }\n    }\n\n    &.va-input--error {\n      .va-input__container {\n        background: var(--va-input-error-background);\n        border-color: var(--va-input-error-color);\n      }\n    }\n  }\n\n  &--outline {\n    .va-input__container {\n      border-radius: 0;\n      border-color: var(--va-input-bordered-color);\n    }\n\n    &.va-input--success {\n      .va-input__container {\n        background: var(--va-input-success-background);\n        border-color: var(--va-input-success-color);\n      }\n    }\n\n    &.va-input--error {\n      .va-input__container {\n        background: var(--va-input-error-background);\n        border-color: var(--va-input-error-color);\n      }\n    }\n  }\n\n  &--bordered {\n    /*\n      We can not just set border-bottom, because we also have border on the other sides.\n      We also can not use after or before, because we need to set border-color according to\n      color prop\n    */\n    &__border {\n      border-color: var(--va-input-bordered-color);\n      position: absolute;\n      height: 0;\n      border-bottom-width: var(--va-input-border-width);\n      border-bottom-style: solid;\n      width: 100%;\n      bottom: 0;\n    }\n\n    .va-input__container {\n      background: var(--va-input-color);\n      border-top-left-radius: var(--va-input-border-radius);\n      border-top-right-radius: var(--va-input-border-radius);\n      border-color: transparent !important;\n    }\n\n    &.va-input--success {\n      .va-input__container {\n        background: var(--va-input-success-background);\n      }\n\n      .va-input_bordered__border {\n        border-color: var(--va-input-success-color);\n      }\n    }\n\n    &.va-input--error {\n      .va-input__container {\n        background: var(--va-input-error-background);\n      }\n\n      .va-input_bordered__border {\n        border-color: var(--va-input-error-color);\n      }\n    }\n  }\n}\n</style>\n","import { computed, Ref } from 'vue'\n\ninterface ClearableProps {\n  clearable: boolean\n  clearableIcon: string\n  clearValue: any\n  disabled?: boolean\n  readonly?: boolean\n  success?: boolean\n  color?: string\n}\n\nexport const useClearableProps = {\n  clearable: { type: Boolean, default: false },\n  clearableIcon: { type: String, default: 'highlight_off' },\n  clearValue: { type: String, default: '' },\n}\n\nexport const useClearableEmits = ['clear']\n\nexport const useClearable = (\n  props: ClearableProps,\n  inputValue: Ref<any>,\n  isFocused?: Ref<boolean>,\n  hasError?: Ref<boolean>,\n) => {\n  const clearedValues = [null, undefined, props.clearValue]\n\n  const canBeCleared = computed(() => (\n    props.clearable &&\n    !props.disabled &&\n    !props.readonly &&\n    !clearedValues.includes(inputValue.value)\n  ))\n\n  const clearIconColor = computed(() => {\n    if (isFocused?.value) { return props.color || 'primary' }\n    if (hasError?.value) { return 'danger' }\n    if (props.success) { return 'success' }\n\n    return 'gray'\n  })\n\n  const clearIconProps = computed(() => ({\n    name: props.clearableIcon,\n    color: clearIconColor.value,\n    size: 'small',\n  }))\n\n  return {\n    canBeCleared,\n    clearIconColor,\n    clearIconProps,\n  }\n}\n","import { Ref } from 'vue'\n\nconst HIDDEN_TEXTAREA_STYLE = `\n  min-height:0 !important;\n  max-height:none !important;\n  height:0 !important;\n  visibility:hidden !important;\n  overflow:hidden !important;\n  position:absolute !important;\n  z-index:-1000 !important;\n  top:0 !important;\n  right:0 !important';\n`\n\nconst SIZING_STYLE = [\n  'letter-spacing',\n  'line-height',\n  'padding-top',\n  'padding-bottom',\n  'font-family',\n  'font-weight',\n  'font-size',\n  'text-rendering',\n  'text-transform',\n  'width',\n  'text-indent',\n  'padding-left',\n  'padding-right',\n  'border-width',\n  'box-sizing',\n]\n\nconst getNodeHeightStyles = (node: HTMLElement) => {\n  const style = window.getComputedStyle(node)\n\n  return {\n    boxSizing:\n      style.getPropertyValue('box-sizing') ||\n      style.getPropertyValue('-moz-box-sizing') ||\n      style.getPropertyValue('-webkit-box-sizing'),\n    padding:\n      parseFloat(style.getPropertyValue('padding-bottom')) +\n      parseFloat(style.getPropertyValue('padding-top')),\n    border:\n      parseFloat(style.getPropertyValue('border-bottom-width')) +\n      parseFloat(style.getPropertyValue('border-top-width')),\n    styles:\n      SIZING_STYLE.map(name => `${name}:${style.getPropertyValue(name)}`).join(';') + ';',\n    lineHeight:\n      parseInt(style.getPropertyValue('line-height')),\n  }\n}\n\nlet textarea: null | HTMLTextAreaElement = null\n\nconst createHiddenTextarea = (original: HTMLTextAreaElement, styles: string) => {\n  if (!textarea) {\n    textarea = document.createElement('textarea')\n  }\n\n  textarea.setAttribute('style', styles + HIDDEN_TEXTAREA_STYLE)\n  textarea.value = original.value || original.placeholder || ''\n  const wrap = original.getAttribute('wrap')\n\n  if (wrap !== null) {\n    textarea.setAttribute('wrap', wrap)\n  } else {\n    textarea.removeAttribute('wrap')\n  }\n\n  return textarea\n}\n\nexport const useTextareaRowHeight = (textarea: Ref<HTMLTextAreaElement | undefined>) => {\n  const calculateRowHeight = () => {\n    if (!textarea.value) { return 0 }\n\n    return getNodeHeightStyles(textarea.value).lineHeight\n  }\n\n  const calculateHeight = () => {\n    if (!textarea.value) { return 0 }\n\n    const { boxSizing, padding, border, styles } = getNodeHeightStyles(textarea.value)\n    const hiddenTextarea = createHiddenTextarea(textarea.value, styles)\n    document.body.appendChild(hiddenTextarea)\n    let height = hiddenTextarea.scrollHeight\n\n    if (boxSizing === 'border-box') {\n      height += border\n    } else if (boxSizing === 'content-box') {\n      height -= padding\n    }\n\n    document.body.removeChild(hiddenTextarea)\n\n    return height\n  }\n\n  return {\n    calculateRowHeight,\n    calculateHeight,\n  }\n}\n","<template>\n  <textarea\n    ref=\"textarea\"\n    class=\"textarea\"\n    v-bind=\"{ ...computedProps, ...listeners }\"\n    :value=\"modelValue\"\n    :style=\"computedStyle\"\n  />\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, onMounted, ref, watch, nextTick } from 'vue'\nimport pick from 'lodash/pick'\nimport { useFormProps } from '../../../../composables/useForm'\nimport { useTextareaRowHeight } from './useTextareaRowHeight'\nimport { useEmitProxy } from '../../../../composables/useEmitProxy'\n\nconst positiveNumberValidator = (val: number) => {\n  if (val > 0 && (val | 0) === val) {\n    return true\n  }\n  throw new Error(`\\`minRows|maxRows\\` must be a positive integer greater than 0, but ${val} is provided`)\n}\n\nconst { createEmits, createListeners } = useEmitProxy([\n  'input', 'change', 'click', 'update:modelValue',\n])\n\nexport default defineComponent({\n  name: 'VaTextarea',\n\n  props: {\n    ...useFormProps,\n    modelValue: { type: [String, Number], default: '' },\n    placeholder: { type: String },\n    autosize: { type: Boolean, default: false },\n    minRows: {\n      type: Number,\n      default: 1,\n      validator: positiveNumberValidator,\n    },\n\n    maxRows: {\n      type: Number,\n      validator: positiveNumberValidator,\n    },\n  },\n\n  emits: createEmits(),\n\n  setup (props, { emit }) {\n    const textarea = ref<HTMLTextAreaElement | undefined>()\n    const rowHeight = ref(-1)\n    const height = ref(-1)\n    const { calculateRowHeight, calculateHeight } = useTextareaRowHeight(textarea)\n\n    const isResizable = computed(() => {\n      return (props.autosize || props.maxRows || props.minRows !== 1) && textarea.value\n    })\n\n    const updateRowHeight = () => {\n      if (isResizable.value) {\n        rowHeight.value = calculateRowHeight()\n      }\n    }\n\n    const updateHeight = () => {\n      if (isResizable.value) {\n        height.value = calculateHeight()\n      }\n    }\n\n    onMounted(() => {\n      updateRowHeight()\n      updateHeight()\n    })\n\n    watch(() => props.modelValue, () => {\n      nextTick(updateHeight)\n    })\n\n    const computedStyle = computed(() => ({\n      minHeight: rowHeight.value * props.minRows + 'px',\n      maxHeight: props.maxRows && (rowHeight.value * props.maxRows + 'px'),\n      height: height.value + 'px',\n      resize: isResizable.value && 'none',\n    }))\n\n    const computedProps = computed(() => ({\n      ...pick(props, ['disabled', 'readonly', 'placeholder']),\n    }))\n\n    const focus = () => {\n      textarea.value?.focus()\n    }\n\n    const blur = () => {\n      textarea.value?.blur()\n    }\n\n    return {\n      textarea,\n      computedStyle,\n      listeners: createListeners(emit),\n      computedProps,\n\n      // will used after fix 'useConfigTransport'\n      // focus,\n      // blur,\n    }\n  },\n\n  // we use this while we have problem with 'useConfigTransport'\n  methods: {\n    focus () { this.textarea?.focus() },\n    blur () { this.textarea?.blur() },\n  },\n})\n</script>\n\n<style lang=\"scss\">\n.textarea {\n  padding: 0;\n  border: 0;\n  font-family: var(--va-font-family);\n}\n</style>\n","<template>\n  <textarea\n    ref=\"textarea\"\n    class=\"textarea\"\n    v-bind=\"{ ...computedProps, ...listeners }\"\n    :value=\"modelValue\"\n    :style=\"computedStyle\"\n  />\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, onMounted, ref, watch, nextTick } from 'vue'\nimport pick from 'lodash/pick'\nimport { useFormProps } from '../../../../composables/useForm'\nimport { useTextareaRowHeight } from './useTextareaRowHeight'\nimport { useEmitProxy } from '../../../../composables/useEmitProxy'\n\nconst positiveNumberValidator = (val: number) => {\n  if (val > 0 && (val | 0) === val) {\n    return true\n  }\n  throw new Error(`\\`minRows|maxRows\\` must be a positive integer greater than 0, but ${val} is provided`)\n}\n\nconst { createEmits, createListeners } = useEmitProxy([\n  'input', 'change', 'click', 'update:modelValue',\n])\n\nexport default defineComponent({\n  name: 'VaTextarea',\n\n  props: {\n    ...useFormProps,\n    modelValue: { type: [String, Number], default: '' },\n    placeholder: { type: String },\n    autosize: { type: Boolean, default: false },\n    minRows: {\n      type: Number,\n      default: 1,\n      validator: positiveNumberValidator,\n    },\n\n    maxRows: {\n      type: Number,\n      validator: positiveNumberValidator,\n    },\n  },\n\n  emits: createEmits(),\n\n  setup (props, { emit }) {\n    const textarea = ref<HTMLTextAreaElement | undefined>()\n    const rowHeight = ref(-1)\n    const height = ref(-1)\n    const { calculateRowHeight, calculateHeight } = useTextareaRowHeight(textarea)\n\n    const isResizable = computed(() => {\n      return (props.autosize || props.maxRows || props.minRows !== 1) && textarea.value\n    })\n\n    const updateRowHeight = () => {\n      if (isResizable.value) {\n        rowHeight.value = calculateRowHeight()\n      }\n    }\n\n    const updateHeight = () => {\n      if (isResizable.value) {\n        height.value = calculateHeight()\n      }\n    }\n\n    onMounted(() => {\n      updateRowHeight()\n      updateHeight()\n    })\n\n    watch(() => props.modelValue, () => {\n      nextTick(updateHeight)\n    })\n\n    const computedStyle = computed(() => ({\n      minHeight: rowHeight.value * props.minRows + 'px',\n      maxHeight: props.maxRows && (rowHeight.value * props.maxRows + 'px'),\n      height: height.value + 'px',\n      resize: isResizable.value && 'none',\n    }))\n\n    const computedProps = computed(() => ({\n      ...pick(props, ['disabled', 'readonly', 'placeholder']),\n    }))\n\n    const focus = () => {\n      textarea.value?.focus()\n    }\n\n    const blur = () => {\n      textarea.value?.blur()\n    }\n\n    return {\n      textarea,\n      computedStyle,\n      listeners: createListeners(emit),\n      computedProps,\n\n      // will used after fix 'useConfigTransport'\n      // focus,\n      // blur,\n    }\n  },\n\n  // we use this while we have problem with 'useConfigTransport'\n  methods: {\n    focus () { this.textarea?.focus() },\n    blur () { this.textarea?.blur() },\n  },\n})\n</script>\n\n<style lang=\"scss\">\n.textarea {\n  padding: 0;\n  border: 0;\n  font-family: var(--va-font-family);\n}\n</style>\n","<template>\n  <VaInputWrapper\n    v-bind=\"fieldListeners\"\n    :class=\"$attrs.class\"\n    :style=\"$attrs.style\"\n    :color=\"color\"\n    :readonly=\"readonly\"\n    :disabled=\"disabled\"\n    :success=\"success\"\n    :messages=\"messages\"\n    :error=\"computedError\"\n    :error-messages=\"computedErrorMessages\"\n    :error-count=\"errorCount\"\n    :label=\"label\"\n    :bordered=\"bordered\"\n    :outline=\"outline\"\n    :focused=\"isFocused\"\n    :requiredMark=\"requiredMark\"\n    @click=\"input && input.focus()\"\n  >\n    <!-- Simply proxy slots to VaInputWrapper -->\n    <template\n      v-for=\"name in filterSlots\"\n      :key=\"name\"\n      v-slot:[name]=\"slotScope\"\n    >\n      <slot :name=\"name\" v-bind=\"slotScope\" />\n    </template>\n\n    <template #icon=\"slotScope\">\n      <va-icon\n        v-if=\"success\"\n        color=\"success\"\n        name=\"check_circle\"\n        size=\"small\"\n      />\n      <va-icon\n        v-if=\"computedError\"\n        color=\"danger\"\n        name=\"warning\"\n        size=\"small\"\n      />\n      <va-icon\n        v-if=\"canBeCleared\"\n        v-bind=\"clearIconProps\"\n        @click.stop=\"reset()\"\n      />\n      <va-icon\n        v-if=\"loading\"\n        :color=\"color\"\n        size=\"small\"\n        name=\"loop\"\n        spin=\"counter-clockwise\"\n      />\n      <slot name=\"icon\" v-bind=\"slotScope\" />\n    </template>\n\n    <VaTextarea\n      v-if=\"type === 'textarea' && !$slots.content\"\n      ref=\"input\"\n      v-bind=\"{ ...computedChildAttributes, ...textareaProps, ...inputEvents }\"\n      class=\"va-input__content__input\"\n    />\n\n    <input\n      v-else-if=\"!$slots.content\"\n      ref=\"input\"\n      class=\"va-input__content__input\"\n      v-bind=\"{ ...computedInputAttributes, ...inputEvents }\"\n      :value=\"computedValue\"\n    >\n  </VaInputWrapper>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, InputHTMLAttributes, PropType, ref, toRefs } from 'vue'\nimport { useFormProps } from '../../composables/useForm'\nimport { useValidation, useValidationProps, useValidationEmits } from '../../composables/useValidation'\nimport { useCleave, useCleaveProps } from './hooks/useCleave'\nimport { useEmitProxy } from '../../composables/useEmitProxy'\nimport VaInputWrapper from './components/VaInputWrapper.vue'\nimport { useClearableProps, useClearable, useClearableEmits } from '../../composables/useClearable'\nimport VaTextarea from './components/VaTextarea/VaTextarea.vue'\nimport VaIcon from '../va-icon/VaIcon.vue'\nimport { extractComponentProps, filterComponentProps } from '../../utils/child-props'\nimport omit from 'lodash/omit'\nimport pick from 'lodash/pick'\n\nconst VaTextareaProps = extractComponentProps(VaTextarea)\n\nconst { createEmits: createInputEmits, createListeners: createInputListeners } = useEmitProxy(\n  ['change', 'keyup', 'keypress', 'keydown', 'focus', 'blur'],\n)\n\nconst { createEmits: createFieldEmits, createListeners: createFieldListeners } = useEmitProxy([\n  'click',\n  'click-prepend',\n  'click-append',\n  'click-prepend-inner',\n  'click-append-inner',\n  'click-icon',\n])\n\nexport default defineComponent({\n  name: 'VaInput',\n\n  components: { VaInputWrapper, VaTextarea, VaIcon },\n\n  props: {\n    ...useFormProps,\n    ...useValidationProps,\n    ...useClearableProps,\n    ...useCleaveProps,\n    ...VaTextareaProps,\n\n    // input\n    placeholder: { type: String, default: '' },\n    tabindex: { type: Number, default: 0 },\n    modelValue: { type: [String, Number], default: '' },\n    label: { type: String, default: '' },\n    type: { type: String as PropType<'text' | 'textarea'>, default: 'text' },\n    loading: { type: Boolean, default: false },\n    // style\n    color: { type: String, default: 'primary' },\n    outline: { type: Boolean, default: false },\n    bordered: { type: Boolean, default: false },\n    requiredMark: { type: Boolean, default: false },\n  },\n\n  emits: [\n    'update:modelValue',\n    ...useValidationEmits,\n    ...useClearableEmits,\n    ...createInputEmits(),\n    ...createFieldEmits(),\n  ],\n\n  inheritAttrs: false,\n\n  setup (props, { emit, attrs, slots }) {\n    const input = ref<HTMLInputElement | InstanceType<typeof VaTextarea> | undefined>()\n\n    const reset = () => {\n      emit('update:modelValue', props.clearValue)\n      emit('clear')\n    }\n\n    const focus = () => {\n      input.value?.focus()\n    }\n\n    const blur = () => {\n      input.value?.blur()\n    }\n\n    const filterSlots = computed(() => {\n      const iconSlot = ['icon']\n      return Object.keys(slots).filter(slot => !iconSlot.includes(slot))\n    })\n\n    const {\n      isFocused,\n      listeners: validationListeners,\n      computedError,\n      computedErrorMessages,\n    } = useValidation(props, emit, reset, focus)\n\n    const { modelValue } = toRefs(props)\n    const {\n      canBeCleared,\n      clearIconProps,\n    } = useClearable(props, modelValue, isFocused, computedError)\n\n    /** Use cleave only if this component is input, because it will break. */\n    const computedCleaveTarget = computed(() => {\n      return props.type === 'textarea'\n        ? undefined\n        : input.value as HTMLInputElement | undefined\n    })\n    const { computedValue, onInput } = useCleave(computedCleaveTarget, props, emit)\n\n    const inputListeners = createInputListeners(emit)\n\n    /** Combine EmitProxy events with validation events to avoid events overriding */\n    const onFocus = (e: Event) => {\n      inputListeners.onFocus(e)\n      validationListeners.onFocus()\n    }\n\n    const onBlur = (e: Event) => {\n      inputListeners.onBlur(e)\n      validationListeners.onBlur()\n    }\n\n    const inputEvents = {\n      ...inputListeners,\n      onFocus,\n      onBlur,\n      onInput,\n    }\n\n    const computedChildAttributes = computed(() => ({\n      ariaLabel: props.label,\n      ...omit(attrs, ['class', 'style']),\n    }) as InputHTMLAttributes)\n\n    const computedInputAttributes = computed(() => ({\n      ...computedChildAttributes.value,\n      ...pick(props, ['type', 'tabindex', 'disabled', 'readonly', 'placeholder']),\n    }) as InputHTMLAttributes)\n\n    return {\n      input,\n      inputEvents,\n\n      computedChildAttributes,\n      computedInputAttributes,\n      textareaProps: filterComponentProps(props, VaTextareaProps),\n      computedValue,\n\n      // Validations\n      computedError,\n      computedErrorMessages,\n      isFocused,\n\n      // Icon\n      canBeCleared,\n      clearIconProps,\n\n      fieldListeners: createFieldListeners(emit),\n      reset,\n      filterSlots,\n\n      // while we have problem with 'withConfigTransport'\n      // focus,\n      // blur,\n    }\n  },\n\n  // we will use this while we have problem with 'withConfigTransport'\n  methods: {\n    focus () { this.input?.focus() },\n    blur () { this.input?.blur() },\n  },\n})\n</script>\n","<template>\n  <VaInputWrapper\n    v-bind=\"fieldListeners\"\n    :class=\"$attrs.class\"\n    :style=\"$attrs.style\"\n    :color=\"color\"\n    :readonly=\"readonly\"\n    :disabled=\"disabled\"\n    :success=\"success\"\n    :messages=\"messages\"\n    :error=\"computedError\"\n    :error-messages=\"computedErrorMessages\"\n    :error-count=\"errorCount\"\n    :label=\"label\"\n    :bordered=\"bordered\"\n    :outline=\"outline\"\n    :focused=\"isFocused\"\n    :requiredMark=\"requiredMark\"\n    @click=\"input && input.focus()\"\n  >\n    <!-- Simply proxy slots to VaInputWrapper -->\n    <template\n      v-for=\"name in filterSlots\"\n      :key=\"name\"\n      v-slot:[name]=\"slotScope\"\n    >\n      <slot :name=\"name\" v-bind=\"slotScope\" />\n    </template>\n\n    <template #icon=\"slotScope\">\n      <va-icon\n        v-if=\"success\"\n        color=\"success\"\n        name=\"check_circle\"\n        size=\"small\"\n      />\n      <va-icon\n        v-if=\"computedError\"\n        color=\"danger\"\n        name=\"warning\"\n        size=\"small\"\n      />\n      <va-icon\n        v-if=\"canBeCleared\"\n        v-bind=\"clearIconProps\"\n        @click.stop=\"reset()\"\n      />\n      <va-icon\n        v-if=\"loading\"\n        :color=\"color\"\n        size=\"small\"\n        name=\"loop\"\n        spin=\"counter-clockwise\"\n      />\n      <slot name=\"icon\" v-bind=\"slotScope\" />\n    </template>\n\n    <VaTextarea\n      v-if=\"type === 'textarea' && !$slots.content\"\n      ref=\"input\"\n      v-bind=\"{ ...computedChildAttributes, ...textareaProps, ...inputEvents }\"\n      class=\"va-input__content__input\"\n    />\n\n    <input\n      v-else-if=\"!$slots.content\"\n      ref=\"input\"\n      class=\"va-input__content__input\"\n      v-bind=\"{ ...computedInputAttributes, ...inputEvents }\"\n      :value=\"computedValue\"\n    >\n  </VaInputWrapper>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, InputHTMLAttributes, PropType, ref, toRefs } from 'vue'\nimport { useFormProps } from '../../composables/useForm'\nimport { useValidation, useValidationProps, useValidationEmits } from '../../composables/useValidation'\nimport { useCleave, useCleaveProps } from './hooks/useCleave'\nimport { useEmitProxy } from '../../composables/useEmitProxy'\nimport VaInputWrapper from './components/VaInputWrapper.vue'\nimport { useClearableProps, useClearable, useClearableEmits } from '../../composables/useClearable'\nimport VaTextarea from './components/VaTextarea/VaTextarea.vue'\nimport VaIcon from '../va-icon/VaIcon.vue'\nimport { extractComponentProps, filterComponentProps } from '../../utils/child-props'\nimport omit from 'lodash/omit'\nimport pick from 'lodash/pick'\n\nconst VaTextareaProps = extractComponentProps(VaTextarea)\n\nconst { createEmits: createInputEmits, createListeners: createInputListeners } = useEmitProxy(\n  ['change', 'keyup', 'keypress', 'keydown', 'focus', 'blur'],\n)\n\nconst { createEmits: createFieldEmits, createListeners: createFieldListeners } = useEmitProxy([\n  'click',\n  'click-prepend',\n  'click-append',\n  'click-prepend-inner',\n  'click-append-inner',\n  'click-icon',\n])\n\nexport default defineComponent({\n  name: 'VaInput',\n\n  components: { VaInputWrapper, VaTextarea, VaIcon },\n\n  props: {\n    ...useFormProps,\n    ...useValidationProps,\n    ...useClearableProps,\n    ...useCleaveProps,\n    ...VaTextareaProps,\n\n    // input\n    placeholder: { type: String, default: '' },\n    tabindex: { type: Number, default: 0 },\n    modelValue: { type: [String, Number], default: '' },\n    label: { type: String, default: '' },\n    type: { type: String as PropType<'text' | 'textarea'>, default: 'text' },\n    loading: { type: Boolean, default: false },\n    // style\n    color: { type: String, default: 'primary' },\n    outline: { type: Boolean, default: false },\n    bordered: { type: Boolean, default: false },\n    requiredMark: { type: Boolean, default: false },\n  },\n\n  emits: [\n    'update:modelValue',\n    ...useValidationEmits,\n    ...useClearableEmits,\n    ...createInputEmits(),\n    ...createFieldEmits(),\n  ],\n\n  inheritAttrs: false,\n\n  setup (props, { emit, attrs, slots }) {\n    const input = ref<HTMLInputElement | InstanceType<typeof VaTextarea> | undefined>()\n\n    const reset = () => {\n      emit('update:modelValue', props.clearValue)\n      emit('clear')\n    }\n\n    const focus = () => {\n      input.value?.focus()\n    }\n\n    const blur = () => {\n      input.value?.blur()\n    }\n\n    const filterSlots = computed(() => {\n      const iconSlot = ['icon']\n      return Object.keys(slots).filter(slot => !iconSlot.includes(slot))\n    })\n\n    const {\n      isFocused,\n      listeners: validationListeners,\n      computedError,\n      computedErrorMessages,\n    } = useValidation(props, emit, reset, focus)\n\n    const { modelValue } = toRefs(props)\n    const {\n      canBeCleared,\n      clearIconProps,\n    } = useClearable(props, modelValue, isFocused, computedError)\n\n    /** Use cleave only if this component is input, because it will break. */\n    const computedCleaveTarget = computed(() => {\n      return props.type === 'textarea'\n        ? undefined\n        : input.value as HTMLInputElement | undefined\n    })\n    const { computedValue, onInput } = useCleave(computedCleaveTarget, props, emit)\n\n    const inputListeners = createInputListeners(emit)\n\n    /** Combine EmitProxy events with validation events to avoid events overriding */\n    const onFocus = (e: Event) => {\n      inputListeners.onFocus(e)\n      validationListeners.onFocus()\n    }\n\n    const onBlur = (e: Event) => {\n      inputListeners.onBlur(e)\n      validationListeners.onBlur()\n    }\n\n    const inputEvents = {\n      ...inputListeners,\n      onFocus,\n      onBlur,\n      onInput,\n    }\n\n    const computedChildAttributes = computed(() => ({\n      ariaLabel: props.label,\n      ...omit(attrs, ['class', 'style']),\n    }) as InputHTMLAttributes)\n\n    const computedInputAttributes = computed(() => ({\n      ...computedChildAttributes.value,\n      ...pick(props, ['type', 'tabindex', 'disabled', 'readonly', 'placeholder']),\n    }) as InputHTMLAttributes)\n\n    return {\n      input,\n      inputEvents,\n\n      computedChildAttributes,\n      computedInputAttributes,\n      textareaProps: filterComponentProps(props, VaTextareaProps),\n      computedValue,\n\n      // Validations\n      computedError,\n      computedErrorMessages,\n      isFocused,\n\n      // Icon\n      canBeCleared,\n      clearIconProps,\n\n      fieldListeners: createFieldListeners(emit),\n      reset,\n      filterSlots,\n\n      // while we have problem with 'withConfigTransport'\n      // focus,\n      // blur,\n    }\n  },\n\n  // we will use this while we have problem with 'withConfigTransport'\n  methods: {\n    focus () { this.input?.focus() },\n    blur () { this.input?.blur() },\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}