{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport { w as i } from \"./withConfigTransport.js\";\nimport { defineComponent as e, computed as r, openBlock as a, createElementBlock as d, normalizeClass as v, renderSlot as t, createCommentVNode as o } from \"vue\";\nimport { s as l } from \"./style-inject.es.js\";\nimport \"./VaConfig.js\";\nvar n = e({\n  name: \"VaDivider\",\n  props: {\n    vertical: {\n      type: Boolean,\n      default: !1\n    },\n    dashed: {\n      type: Boolean,\n      default: !1\n    },\n    inset: {\n      type: Boolean,\n      default: !1\n    },\n    orientation: {\n      type: String,\n      default: \"center\",\n      validator: i => [\"left\", \"right\", \"center\"].includes(i)\n    }\n  },\n  setup: (i, {\n    slots: e\n  }) => ({\n    hasSlot: r(() => !!e.default),\n    slotClassComputed: r(() => \"va-divider__text\"),\n    classComputed: r(() => ({\n      \"va-divider\": !0,\n      \"va-divider--vertical\": i.vertical,\n      \"va-divider--inset\": i.inset,\n      [`va-divider--${i.orientation}`]: i.orientation && !i.vertical,\n      \"va-divider--dashed\": i.dashed\n    }))\n  })\n});\nconst s = [\"aria-orientation\"];\nl(':root{--va-divider-display:flex;--va-divider-margin:0.5rem 0;--va-divider-line-width:1px;--va-divider-border-top-style:solid;--va-divider-border-top-color:#e6e9ec;--va-divider-text-font-size:0.875rem;--va-divider-text-line-height:0;--va-divider-text-height:0;--va-divider-text-vertical-align:middle;--va-divider-text-transform:translateY(-50%);--va-divider-text-horizontal-offset:1.25rem;--va-divider-vertical-margin:0 var(--va-divider-margin);--va-divider-vertical-border-top:0;--va-divider-vertical-border-right-width:1px;--va-divider-vertical-border-right-style:solid;--va-divider-vertical-border-right-color:#e6e9ec;--va-divider-vertical-display:inline-flex;--va-divider-inset-horizontal-margin:1rem;--va-divider-inset-margin:0.5rem var(--va-divider-inset-horizontal-margin);--va-divider-dashed-border-top-style:dashed}.va-divider{display:var(--va-divider-display);font-family:var(--va-font-family);margin:var(--va-divider-margin)}.va-divider--vertical{border-right:var(--va-divider-vertical-border-right-width) var(--va-divider-vertical-border-right-style) var(--va-divider-vertical-border-right-color);border-top:var(--va-divider-vertical-border-top);display:var(--va-divider-vertical-display);margin:var(--va-divider-vertical-margin);vertical-align:top}.va-divider--vertical.va-divider--dashed{border-right-style:dashed}.va-divider--inset{margin:var(--va-divider-inset-margin)}.va-divider--inset.va-divider--vertical{margin:var(--va-divider-inset-horizontal-margin) var(--va-divider-margin)}.va-divider:after,.va-divider:before{border-top:var(--va-divider-line-width) var(--va-divider-border-top-style) var(--va-divider-border-top-color);content:\"\";flex:1}.va-divider--dashed:after,.va-divider--dashed:before{border-top-style:var(--va-divider-dashed-border-top-style)}.va-divider--left:before,.va-divider--right:after{flex:0 var(--va-divider-text-horizontal-offset)}.va-divider__text{font-size:var(--va-divider-text-font-size);height:var(--va-divider-text-height);line-height:var(--va-divider-text-line-height);transform:var(--va-divider-text-transform);vertical-align:var(--va-divider-text-vertical-align)}'), n.render = function render(i, e, r, l, n, c) {\n  return a(), d(\"div\", {\n    class: v(i.classComputed),\n    \"aria-orientation\": i.vertical ? \"vertical\" : \"horizontal\"\n  }, [i.hasSlot && !i.vertical ? (a(), d(\"div\", {\n    key: 0,\n    class: v(i.slotClassComputed),\n    role: \"separator\"\n  }, [t(i.$slots, \"default\")], 2)) : o(\"v-if\", !0)], 10, s);\n}, n.__file = \"src/components/va-divider/VaDivider.vue\";\nvar c = i(n);\nexport { c as default };","map":{"version":3,"mappings":";;;;;AAoBA,QAAeA,EAAgB;AAC7BC,QAAM,WADuB;AAE7BC,SAAO;AACLC,cAAU;AAAEC,YAAMC,OAAR;AAAsCC,gBAAS;AAA/C,KADL;AAELC,YAAQ;AAAEH,YAAMC,OAAR;AAAsCC,gBAAS;AAA/C,KAFH;AAGLE,WAAO;AAAEJ,YAAMC,OAAR;AAAsCC,gBAAS;AAA/C,KAHF;AAILG,iBAAa;AACXL,YAAMM,MADK;AAEXJ,eAAS,QAFE;AAGXK,iBAAYC,KAAkB,CAAC,MAAD,EAAS,OAAT,EAAkB,QAAlB,EAA4BC,QAA5B,CAAqCD,CAArC;AAHnB;AAJR,GAFsB;AAY7BE,SAAO,CAACZ,CAAD,EAACA;AAASa;AAATb,GAAD,MAAUa;AACfC,aAASC,EAAS,QAAQF,EAAMT,OAAvBW,CADMF;AAEfG,uBAAmBD,EAAS,MAAM,kBAAfA,CAFJF;AAGfI,mBAAeF,EAAS;AACtB,qBAAoB,CADE;AAEtB,8BAA8Bf,EAAMC,QAFd;AAGtB,2BAA2BD,EAAMM,KAHX;AAItB,OAAC,eAAmBN,EAAMO,aAA1B,GAA0CP,EAAMO,WAANP,IAAMO,CAAgBP,EAAMC,QAJhD;AAKtB,4BAA4BD,EAAMK;AALZ,MAATU;AAHAF,GAAV;AAZsB,CAAhBf,CAAf;AAoBwCO;AAAAA;AAAAA,cCvCtCa;AACGC,aAAOC,eAAPD,CADHD;AAEG,wBAAkBE;AAFrBF,KAEqBE,CAGXA,cAAYA,UAAZA,IAAYA,KADpBF;AAAAA;AAEGC,aAAOC,mBAAPD,CAFHD;AAGEG,UAAK;AAHPH,KAGO,CAELI,sBAFK,CAHPJ,EAKEI,CALFJ,CACQE,IAINE,aAPiBF,CAFrBF,EASII,EATJJ,EASII,CATJJ,CDuCsCb;AC9BlCiB,CD8BkCjB,EC9BlCiB,oDD8BkCjB;AErCxC,QAAekB,EAAoBC,CAApBD,CAAf;AAAmCC","names":["defineComponent","name","props","vertical","type","Boolean","default","dashed","inset","orientation","String","validator","value","includes","setup","slots","hasSlot","computed","slotClassComputed","classComputed","_createElementBlock","class","_ctx","role","_renderSlot","withConfigTransport","VaDivider"],"sources":["../../src/components/va-divider/VaDivider.vue","../../src/components/va-divider/VaDivider.vue?vue&type=template&id=c088ae74&lang.js","../../src/components/va-divider/index.ts"],"sourcesContent":["<template>\n  <div\n    :class=\"classComputed\"\n    :aria-orientation=\"vertical ? 'vertical' : 'horizontal'\"\n  >\n    <div\n      v-if=\"hasSlot && !vertical\"\n      :class=\"slotClassComputed\"\n      role=\"separator\"\n    >\n      <slot />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, PropType } from 'vue'\n\nconst prefixClass = 'va-divider'\n\nexport default defineComponent({\n  name: 'VaDivider',\n  props: {\n    vertical: { type: Boolean as PropType<boolean>, default: false },\n    dashed: { type: Boolean as PropType<boolean>, default: false },\n    inset: { type: Boolean as PropType<boolean>, default: false },\n    orientation: {\n      type: String as PropType<'left' | 'right' | 'center'>,\n      default: 'center',\n      validator: (value: string) => ['left', 'right', 'center'].includes(value),\n    },\n  },\n  setup: (props, { slots }) => ({\n    hasSlot: computed(() => !!slots.default),\n    slotClassComputed: computed(() => `${prefixClass}__text`),\n    classComputed: computed(() => ({\n      [`${prefixClass}`]: true,\n      [`${prefixClass}--vertical`]: props.vertical,\n      [`${prefixClass}--inset`]: props.inset,\n      [`${prefixClass}--${props.orientation}`]: props.orientation && !props.vertical,\n      [`${prefixClass}--dashed`]: props.dashed,\n    })),\n  }),\n})\n</script>\n\n<style lang=\"scss\">\n@import \"variables\";\n\n.va-divider {\n  display: var(--va-divider-display);\n  margin: var(--va-divider-margin);\n  font-family: var(--va-font-family);\n\n  &--vertical {\n    margin: var(--va-divider-vertical-margin);\n    border-top: var(--va-divider-vertical-border-top);\n    border-right-width: var(--va-divider-vertical-border-right-width);\n    border-right-style: var(--va-divider-vertical-border-right-style);\n    border-right-color: var(--va-divider-vertical-border-right-color);\n    display: var(--va-divider-vertical-display);\n    vertical-align: top;\n\n    &.va-divider--dashed {\n      border-right-style: dashed;\n    }\n  }\n\n  &--inset {\n    margin: var(--va-divider-inset-margin);\n\n    &.va-divider--vertical {\n      margin: var(--va-divider-inset-horizontal-margin) var(--va-divider-margin);\n    }\n  }\n\n  &::before,\n  &::after {\n    content: \"\";\n    flex: 1;\n    border-top-width: var(--va-divider-line-width);\n    border-top-style: var(--va-divider-border-top-style);\n    border-top-color: var(--va-divider-border-top-color);\n  }\n\n  &--dashed {\n    &::before,\n    &::after {\n      border-top-style: var(--va-divider-dashed-border-top-style);\n    }\n  }\n\n  &--left {\n    &::before {\n      flex: 0 var(--va-divider-text-horizontal-offset);\n    }\n  }\n\n  &--right {\n    &::after {\n      flex: 0 var(--va-divider-text-horizontal-offset);\n    }\n  }\n\n  &__text {\n    font-size: var(--va-divider-text-font-size);\n    line-height: var(--va-divider-text-line-height);\n    height: var(--va-divider-text-height);\n    vertical-align: var(--va-divider-text-vertical-align);\n    transform: var(--va-divider-text-transform);\n  }\n}\n</style>\n","<template>\n  <div\n    :class=\"classComputed\"\n    :aria-orientation=\"vertical ? 'vertical' : 'horizontal'\"\n  >\n    <div\n      v-if=\"hasSlot && !vertical\"\n      :class=\"slotClassComputed\"\n      role=\"separator\"\n    >\n      <slot />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, PropType } from 'vue'\n\nconst prefixClass = 'va-divider'\n\nexport default defineComponent({\n  name: 'VaDivider',\n  props: {\n    vertical: { type: Boolean as PropType<boolean>, default: false },\n    dashed: { type: Boolean as PropType<boolean>, default: false },\n    inset: { type: Boolean as PropType<boolean>, default: false },\n    orientation: {\n      type: String as PropType<'left' | 'right' | 'center'>,\n      default: 'center',\n      validator: (value: string) => ['left', 'right', 'center'].includes(value),\n    },\n  },\n  setup: (props, { slots }) => ({\n    hasSlot: computed(() => !!slots.default),\n    slotClassComputed: computed(() => `${prefixClass}__text`),\n    classComputed: computed(() => ({\n      [`${prefixClass}`]: true,\n      [`${prefixClass}--vertical`]: props.vertical,\n      [`${prefixClass}--inset`]: props.inset,\n      [`${prefixClass}--${props.orientation}`]: props.orientation && !props.vertical,\n      [`${prefixClass}--dashed`]: props.dashed,\n    })),\n  }),\n})\n</script>\n\n<style lang=\"scss\">\n@import \"variables\";\n\n.va-divider {\n  display: var(--va-divider-display);\n  margin: var(--va-divider-margin);\n  font-family: var(--va-font-family);\n\n  &--vertical {\n    margin: var(--va-divider-vertical-margin);\n    border-top: var(--va-divider-vertical-border-top);\n    border-right-width: var(--va-divider-vertical-border-right-width);\n    border-right-style: var(--va-divider-vertical-border-right-style);\n    border-right-color: var(--va-divider-vertical-border-right-color);\n    display: var(--va-divider-vertical-display);\n    vertical-align: top;\n\n    &.va-divider--dashed {\n      border-right-style: dashed;\n    }\n  }\n\n  &--inset {\n    margin: var(--va-divider-inset-margin);\n\n    &.va-divider--vertical {\n      margin: var(--va-divider-inset-horizontal-margin) var(--va-divider-margin);\n    }\n  }\n\n  &::before,\n  &::after {\n    content: \"\";\n    flex: 1;\n    border-top-width: var(--va-divider-line-width);\n    border-top-style: var(--va-divider-border-top-style);\n    border-top-color: var(--va-divider-border-top-color);\n  }\n\n  &--dashed {\n    &::before,\n    &::after {\n      border-top-style: var(--va-divider-dashed-border-top-style);\n    }\n  }\n\n  &--left {\n    &::before {\n      flex: 0 var(--va-divider-text-horizontal-offset);\n    }\n  }\n\n  &--right {\n    &::after {\n      flex: 0 var(--va-divider-text-horizontal-offset);\n    }\n  }\n\n  &__text {\n    font-size: var(--va-divider-text-font-size);\n    line-height: var(--va-divider-text-line-height);\n    height: var(--va-divider-text-height);\n    vertical-align: var(--va-divider-text-vertical-align);\n    transform: var(--va-divider-text-transform);\n  }\n}\n</style>\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\nimport VaDivider from './VaDivider.vue'\n\nexport default withConfigTransport(VaDivider)\n"]},"metadata":{},"sourceType":"module"}