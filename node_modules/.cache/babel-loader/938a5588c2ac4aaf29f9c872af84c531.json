{"ast":null,"code":"import { s as e } from \"./VaMessageListWrapper.vue_vue&type=script&lang.js\";\nimport { resolveComponent as s, openBlock as r, createElementBlock as a, renderSlot as t, createVNode as o } from \"vue\";\nimport { s as i } from \"./style-inject.es.js\";\nconst l = {\n  class: \"va-message-list-wrapper\"\n};\ni(\".va-message-list-wrapper{font-family:var(--va-font-family)}\"), e.render = function render(e, i, m, n, p, v) {\n  const u = s(\"va-message-list\");\n  return r(), a(\"div\", l, [t(e.$slots, \"default\"), o(u, {\n    color: e.messagesColor,\n    \"model-value\": e.messagesComputed,\n    limit: e.errorLimit\n  }, null, 8, [\"color\", \"model-value\", \"limit\"])]);\n}, e.__file = \"src/components/va-input/components/VaMessageListWrapper.vue\";","map":{"version":3,"mappings":";;;;AACSA,SAAM;;AAAAC;AAAA;AAAA,cAAXC,aACEC,sBADFC,EAEEC;AACGC,WAAOC,eADVF;AAEG,mBAAaE,kBAFhBF;AAGGG,WAAOD;AAHVF,KAGUE,IAHVF,EAGUE,CAHVF,EAGUE,iCAHVF,CAFFD,EAAW;AAKCG,CALD,EAKCA,wEALD","names":["class","i","_createElementBlock","_renderSlot","_hoisted_1","_createVNode","color","_ctx","limit"],"sources":["../../src/components/va-input/components/VaMessageListWrapper.vue?vue&type=template&id=23d595bb&lang.js"],"sourcesContent":["<template>\n    <div class=\"va-message-list-wrapper\">\n      <slot />\n      <va-message-list\n        :color=\"messagesColor\"\n        :model-value=\"messagesComputed\"\n        :limit=\"errorLimit\"\n      />\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, toRef } from 'vue'\nimport { useValidationProps } from '../../../composables/useValidation'\nimport VaMessageList from './VaMessageList'\n\nexport default defineComponent({\n  name: 'VaMessageListWrapper',\n\n  components: { VaMessageList },\n\n  props: {\n    ...useValidationProps,\n  },\n\n  setup (props) {\n    return {\n      messagesColor: computed(() => {\n        if (props.error) { return 'danger' }\n        if (props.success) { return 'success' }\n\n        return ''\n      }),\n      messagesComputed: computed(() => props.error ? props.errorMessages : props.messages),\n      errorLimit: computed(() => props.error ? props.errorCount : 99),\n    }\n  },\n})\n</script>\n\n<style lang='scss'>\n.va-message-list-wrapper {\n  font-family: var(--va-font-family);\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}