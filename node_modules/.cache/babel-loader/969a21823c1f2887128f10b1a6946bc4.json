{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  key: 1\n};\nconst _hoisted_3 = {\n  key: 2\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_MovieItem = _resolveComponent(\"MovieItem\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"h1\", null, _toDisplayString($setup.message), 1\n  /* TEXT */\n  ), $setup.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, _toDisplayString($setup.error), 1\n  /* TEXT */\n  )) : _createCommentVNode(\"v-if\", true), $setup.data == null ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \" no movies\")) : _createCommentVNode(\"v-if\", true), $setup.data ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.data, movie => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: movie.id\n    }, [_createVNode(_component_MovieItem), _createTextVNode(\" \" + _toDisplayString(movie.title), 1\n    /* TEXT */\n    )]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])) : _createCommentVNode(\"v-if\", true)], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;6DACIA,oBAAoB,IAApB,EAAoB,IAApB,EAAoBC,iBAAdC,cAAc,CAApB,EAAa;AAAA;AAAb,KACWA,8BAAXC,oBAAiC,KAAjC,EAAiCC,UAAjC,EAAiCH,iBAAbC,YAAa,CAAjC,EAAyB;AAAA;AAAzB,0CACWA,eAAI,sBAAfC,oBAAyC,KAAzC,EAAyCE,UAAzC,EAAyB,YAAzB,wCACWH,6BAAXC,oBAMM,KANN,EAMMG,UANN,EAMM,oBALFH,oBAGMI,SAHN,EAGM,IAHN,EAGMC,YAHeN,WAGf,EAHMO,KAAa,IAAR;yBAAjBN,oBAGM,KAHN,EAGM;AAHsBO,SAAG,EAAED,KAAK,CAACE;AAGjC,KAHN,GACIC,aAAaC,oBAAb,oBAAa,MACbZ,iBAAEQ,KAAK,CAACK,KAAR,GAAa;AAAA;MAFjB;GAGM,CAHN;;AAAA,GAKE,EANN","names":["_createElementVNode","_toDisplayString","$setup","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_Fragment","_renderList","movie","key","id","_createVNode","_component_MovieItem","title"],"sourceRoot":"","sources":["/Users/alberto/Workspace/atSistemas/prueba/src/views/Movies.vue"],"sourcesContent":["<template>\n    <h1>{{message}}</h1>\n    <div v-if=\"error\">{{error}}</div>\n    <div v-if=\"data == null\"> no movies</div>\n    <div v-if='data'>\n        <div v-for=\"movie in data\" :key=\"movie.id\">\n            <MovieItem />\n            {{movie.title}}\n        </div>\n\n    </div>\n</template>\n<script>\n\nimport { onMounted } from '@vue/runtime-core';\nimport getData from '../utils/getData'\nimport MovieItem from '@/components/MovieItem'\n\nexport default {\n    name:'MoviesView',\n    setup() {\n        const message = 'Movies!';\n        const {data, load, error} = getData()\n\n        load();\n        \n        onMounted(() => {\n            console.log('onMounted!')\n        })\n        return { message, data, error }\n    }\n}\n</script>\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module"}